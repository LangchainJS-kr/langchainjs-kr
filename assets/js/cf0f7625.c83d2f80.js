"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7714],{57164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>h});var a=t(74848),s=t(28453),i=t(63142);const r={title:"\uac80\uc0c9-\uc99d\uac15 \uc0dd\uc131 (RAG) \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub9cc\ub4e4\uae30",sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},o=void 0,l={id:"tutorials/rag",title:"\uac80\uc0c9-\uc99d\uac15 \uc0dd\uc131 (RAG) \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub9cc\ub4e4\uae30",description:"LLM\uc73c\ub85c \uad6c\ud604\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \uac15\ub825\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911 \ud558\ub098\ub294 \uc815\uad50\ud55c \uc9c8\uc758\uc751\ub2f5(Q&A) \ucc57\ubd07, \uc989 \ud2b9\uc815 \uc815\ubcf4\uc5d0 \uad00\ud55c \uc9c8\ubb38\uc5d0 \ub2f5\ud560 \uc218 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc785\ub2c8\ub2e4.",source:"@site/docs/tutorials/rag.mdx",sourceDirName:"tutorials",slug:"/tutorials/rag",permalink:"/docs/tutorials/rag",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/tutorials/rag.mdx",tags:[],version:"current",frontMatter:{title:"\uac80\uc0c9-\uc99d\uac15 \uc0dd\uc131 (RAG) \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub9cc\ub4e4\uae30",sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},sidebar:"tutorialSidebar"},c={},h=[{value:"RAG (Retrieval-Augmented Generation** : \uac80\uc0c9 \uc99d\uac15 \uc0dd\uc131)\uc774\ub780?**",id:"rag-retrieval-augmented-generation--\uac80\uc0c9-\uc99d\uac15-\uc0dd\uc131\uc774\ub780",level:2},{value:"\uac1c\ub150",id:"\uac1c\ub150",level:2},{value:"\uc778\ub371\uc2f1",id:"\uc778\ub371\uc2f1",level:3},{value:"\uac80\uc0c9\uacfc \uc0dd\uc131",id:"\uac80\uc0c9\uacfc-\uc0dd\uc131",level:3},{value:"\uc124\uc815",id:"\uc124\uc815",level:2},{value:"\uc124\uce58",id:"\uc124\uce58",level:3},{value:"LangSmith",id:"langsmith",level:3},{value:"\ubbf8\ub9ac\ubcf4\uae30",id:"\ubbf8\ub9ac\ubcf4\uae30",level:2},{value:"\ud1ba\uc544\ubcf4\uae30",id:"\ud1ba\uc544\ubcf4\uae30",level:2},{value:"1. \uc778\ub371\uc2f1: \ub85c\ub4dc",id:"indexing-load",level:2},{value:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30",id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30",level:3},{value:"2. \uc778\ub371\uc2f1: \ubd84\ud560",id:"2-\uc778\ub371\uc2f1-\ubd84\ud560",level:2},{value:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30",id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-1",level:3},{value:"3. \uc778\ub371\uc2f1: \uc800\uc7a5",id:"indexing-store",level:2},{value:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30",id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-2",level:3},{value:"4. \uac80\uc0c9 \ubc0f \uc0dd\uc131: \uac80\uc0c9",id:"retrieval-and-generation-retrieve",level:2},{value:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30",id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-3",level:3},{value:"5. \uac80\uc0c9\uacfc \uc0dd\uc131: \uc0dd\uc131\ud558\uae30",id:"retrieval-and-generation-generate",level:2},{value:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30",id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-4",level:3},{value:"\ubaa8\ub378 \uc120\ud0dd",id:"\ubaa8\ub378-\uc120\ud0dd",level:4},{value:"\ud504\ub86c\ud504\ud2b8 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",id:"\ud504\ub86c\ud504\ud2b8-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",level:4},{value:"\ub2e4\uc74c \ub2e8\uacc4",id:"\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"LLM\uc73c\ub85c \uad6c\ud604\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \uac15\ub825\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911 \ud558\ub098\ub294 \uc815\uad50\ud55c \uc9c8\uc758\uc751\ub2f5(Q&A) \ucc57\ubd07, \uc989 \ud2b9\uc815 \uc815\ubcf4\uc5d0 \uad00\ud55c \uc9c8\ubb38\uc5d0 \ub2f5\ud560 \uc218 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc785\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uac80\uc0c9 \uc99d\uac15 \uc0dd\uc131(RAG)\uc774\ub77c\ub294 \uae30\uc220\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.p,{children:"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \ud14d\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uac04\ub2e8\ud55c Q&A** \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc744\n\ubcf4\uc5ec\ub4dc\ub9ac\uaca0\uc2b5\ub2c8\ub2e4. \uc9c4\ud589\ud558\uba74\uc11c \uc77c\ubc18\uc801\uc778** Q&A \uc544\ud0a4\ud14d\ucc98\ub97c \uc0b4\ud3b4\ubcf4\uace0, \ub354 \uace0\uae09 Q&A \uae30\uc220\uc744 \uc704\ud55c \ucd94\uac00 \ub9ac\uc18c\uc2a4\ub97c \uac15\uc870\ud560 \uac83\uc785\ub2c8\ub2e4.\n\ub610\ud55c, LangSmith\uac00 \uc6b0\ub9ac\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucd94\uc801\ud558\uace0 \uc774\ud574\ud558\ub294 \ub370 \uc5b4\ub5bb\uac8c \ub3c4\uc6c0\uc774 \ub418\ub294\uc9c0\ub3c4 \uc0b4\ud3b4\ubcfc \uac83\uc785\ub2c8\ub2e4.\n\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc7a1\uc131\uc774 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c LangSmith\ub294 \uc810\uc810 \ub354 \uc720\uc6a9\ud574\uc9c8 \uac83\uc785\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.h2,{id:"rag-retrieval-augmented-generation--\uac80\uc0c9-\uc99d\uac15-\uc0dd\uc131\uc774\ub780",children:"RAG (Retrieval-Augmented Generation** : \uac80\uc0c9 \uc99d\uac15 \uc0dd\uc131)\uc774\ub780?**"}),"\n",(0,a.jsx)(n.p,{children:"RAG\ub294 \ucd94\uac00 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac70\ub300 \uc5b8\uc5b4 \ubaa8\ub378(LLM)\uc758 \uc9c0\uc2dd\uc744 \ubcf4\uac15\ud558\ub294 \uae30\uc220\uc785\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.p,{children:"\ub300\uaddc\ubaa8 \uc5b8\uc5b4 \ubaa8\ub378(LLM)\uc740 \uad11\ubc94\uc704\ud55c \uc8fc\uc81c\uc5d0 \ub300\ud574 \ucd94\ub860\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc9c0\uc2dd\uc740 \ud6c8\ub828\ub41c \uc2dc\uc810\uae4c\uc9c0 \uacf5\uac1c\ub41c \ub370\uc774\ud130\uc5d0 \ud55c\uc815\ub429\ub2c8\ub2e4.\n\ub9cc\uc57d \ube44\uacf5\uac1c \ub370\uc774\ud130\ub098 \ubaa8\ub378\uc758 \ud559\uc2b5 \uc885\ub8cc\uc77c \uc774\ud6c4\uc5d0 \ub3c4\uc785\ub41c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud558\ub824\uba74, \ubaa8\ub378\uc758 \uc9c0\uc2dd\uc744 \ud544\uc694\ud55c \uc815\ubcf4\ub85c \ubcf4\uac15\ud574\uc57c \ud569\ub2c8\ub2e4.\n\uc801\uc808\ud55c \uc815\ubcf4\ub97c \uac00\uc838\uc640 \ubaa8\ub378 \ud504\ub86c\ud504\ud2b8\uc5d0 \uc0bd\uc785\ud558\ub294 \uacfc\uc815\uc744 \uc815\ubcf4 \uac80\uc0c9-\uc99d\uac15 \uc0dd\uc131(Retrieval Augmented Generation, RAG)\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.p,{children:"LangChain\uc5d0\ub294 Q&A \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc77c\ubc18\uc801\uc73c\ub85c RAG \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc5ec\ub7ec \ucef4\ud3ec\ub10c\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ucc38\uace0"}),": \uc5ec\uae30\uc11c\ub294 \ube44\uc815\ud615 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc9c8\uc758\uc751\ub2f5\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4.\n\uad6c\uc870\ud654\ub41c \ub370\uc774\ud130\uc5d0 \ub300\ud55c RAG\uc5d0 \uad00\uc2ec\uc774 \uc788\uc73c\uc2dc\uba74, ",(0,a.jsx)(n.a,{href:"../../docs/tutorials/sql_qa",children:"SQL \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc9c8\uc758\uc751\ub2f5"})," \ud29c\ud1a0\ub9ac\uc5bc\uc744 \ud655\uc778\ud558\uc138\uc694."]}),"\n",(0,a.jsx)(n.h2,{id:"\uac1c\ub150",children:"\uac1c\ub150"}),"\n",(0,a.jsx)(n.p,{children:"\uc77c\ubc18\uc801\uc778 RAG \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 \ub450 \uac00\uc9c0 \uc8fc\uc694 \ucef4\ud3ec\ub10c\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4:"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uc778\ub371\uc2f1"}),": \uc18c\uc2a4\ub85c\ubd80\ud130 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud558\uace0 \uc778\ub371\uc2f1\ud558\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc785\ub2c8\ub2e4. ",(0,a.jsx)(n.em,{children:"\uc774\ub294 \ubcf4\ud1b5 \uc624\ud504\ub77c\uc778\uc5d0\uc11c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4."})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uac80\uc0c9 \ubc0f \uc0dd\uc131"}),": \ub7f0\ud0c0\uc784\uc5d0 \uc0ac\uc6a9\uc790 \ucffc\ub9ac\ub97c \ubc1b\uc544 \uc778\ub371\uc2a4\uc5d0\uc11c \uad00\ub828 \ub370\uc774\ud130\ub97c \uac80\uc0c9\ud55c \ud6c4, \ubaa8\ub378\uc5d0 \uc804\ub2ec\ud558\ub294 \uc2e4\uc81c RAG \uccb4\uc778\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.p,{children:"\ubbf8\uac00\uacf5 \ub370\uc774\ud130\uc5d0\uc11c \ub2f5\ubcc0\uae4c\uc9c0\uc758 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc808\ucc28\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.h3,{id:"\uc778\ub371\uc2f1",children:"\uc778\ub371\uc2f1"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ub85c\ub4dc"}),": \uba3c\uc800 \ub370\uc774\ud130\ub97c \ub85c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#document-loaders",children:"\ubb38\uc11c\ub85c\ub354"}),"\ub85c \uc218\ud589\ub429\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ubd84\ud560"}),": ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#text-splitters",children:"\ud14d\uc2a4\ud2b8 \uc2a4\ud50c\ub9ac\ud130"}),"\ub294 \ud070 ",(0,a.jsx)(n.code,{children:"\ubb38\uc11c"}),"\ub97c \uc791\uc740 \uccad\ud06c\ub85c \ubd84\ud560\ud569\ub2c8\ub2e4.\n\uc774\ub294 \ub370\uc774\ud130\ub97c \uc778\ub371\uc2f1\ud558\uac70\ub098 \ubaa8\ub378\uc5d0 \uc804\ub2ec\ud558\ub294 \ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud070 \uccad\ud06c\ub294 \uac80\uc0c9\ud558\uae30 \uc5b4\ub835\uace0 \ubaa8\ub378\uc758 \uc81c\ud55c\ub41c \ucee8\ud14d\uc2a4\ud2b8 \uc708\ub3c4\uc6b0\uc5d0 \ub9de\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc800\uc7a5"}),": \ub098\uc911\uc5d0 \uac80\uc0c9\ud560 \uc218 \uc788\ub3c4\ub85d \ubd84\ud560\ub41c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 \uc778\ub371\uc2f1\ud560 \uacf3\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\n\uc774\ub294 \uc8fc\ub85c ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#vectorstores",children:"\ubca1\ud130\uc2a4\ud1a0\uc5b4"}),"\uc640\n",(0,a.jsx)(n.a,{href:"../../docs/concepts/#embedding-models",children:"\uc784\ubca0\ub529"})," \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)("figure",{children:(0,a.jsx)("img",{src:"/img/rag_indexing.png",alt:"index_diagram"})}),"\n",(0,a.jsx)(n.h3,{id:"\uac80\uc0c9\uacfc-\uc0dd\uc131",children:"\uac80\uc0c9\uacfc \uc0dd\uc131"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uac80\uc0c9"}),": \uc0ac\uc6a9\uc790 \uc785\ub825\uc774 \uc8fc\uc5b4\uc9c0\uba74, ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#retrievers",children:"\ub9ac\ud2b8\ub9ac\ubc84"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\ub828\ub41c \uccad\ud06c\ub4e4\uc774 \uc800\uc7a5\uc18c\uc5d0\uc11c \uac80\uc0c9\ub429\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc0dd\uc131"}),": ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#chat-models",children:"\ucc44\ud305\ubaa8\ub378"})," /\n",(0,a.jsx)(n.a,{href:"../../docs/concepts/#llms",children:"LLM"}),"\uc774 \uc9c8\ubb38\uacfc \uac80\uc0c9\ub41c \ub370\uc774\ud130\ub97c \ud3ec\ud568\ud558\ub294\n\ud504\ub86c\ud504\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2f5\ubcc0\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)("figure",{children:(0,a.jsx)("img",{src:"/img/rag_retrieval_generation.png",alt:"retrieval_diagram"})}),"\n",(0,a.jsx)(n.h2,{id:"\uc124\uc815",children:"\uc124\uc815"}),"\n",(0,a.jsx)(n.h3,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,a.jsx)(n.p,{children:"LangChain\uc744 \uc124\uce58\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uc138\uc694:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"bash npm2yarn npm i langchain"})}),"\n",(0,a.jsxs)(n.p,{children:["\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 ",(0,a.jsx)(n.a,{href:"../../docs/how_to/installation",children:"\uc124\uce58 \uac00\uc774\ub4dc"}),"\ub97c \ucc38\uc870\ud558\uc138\uc694."]}),"\n",(0,a.jsx)(n.h3,{id:"langsmith",children:"LangSmith"}),"\n",(0,a.jsxs)(n.p,{children:["LangChain\uc73c\ub85c \uad6c\ucd95\ud558\ub294 \ub9ce\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc5ec\ub7ec \ub2e8\uacc4\uc640 \uc5ec\ub7ec \ubc88\uc758 LLM \ud638\ucd9c\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc810\uc810 \ub354 \ubcf5\uc7a1\ud574\uc9d0\uc5d0 \ub530\ub77c \uccb4\uc778 \ub610\ub294 \uc5d0\uc774\uc804\ud2b8 \ub0b4\ubd80\uc5d0\uc11c\n\ubb34\uc5c7\uc774 \uc77c\uc5b4\ub098\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud55c \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740\n",(0,a.jsx)(n.a,{href:"https://smith.langchain.com",children:"LangSmith"}),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.p,{children:"\uc704 \ub9c1\ud06c\uc5d0\uc11c \uac00\uc785\ud55c \ud6c4, \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc5ec \ucd94\uc801 \ub85c\uadf8\ub97c \uc2dc\uc791\ud558\uc138\uc694:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'export LANGCHAIN_TRACING_V2="true"\nexport LANGCHAIN_API_KEY="..."\n'})}),"\n","\n",(0,a.jsx)(i.A,{customVarName:"llm"}),"\n",(0,a.jsx)(n.h2,{id:"\ubbf8\ub9ac\ubcf4\uae30",children:"\ubbf8\ub9ac\ubcf4\uae30"}),"\n",(0,a.jsxs)(n.p,{children:["\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ucf58\ud150\uce20 \uc0ac\uc6a9 \ud5c8\ub77d\uc744 \ubc1b\uc740 ",(0,a.jsx)(n.a,{href:"https://lilianweng.github.io/posts/2023-06-23-agent/",children:"LLM Powered Autonomous\nAgents"}),"\ub77c\ub294\nLilian Weng\ub2d8\uc758 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uae30\ubc18\uc73c\ub85c \uc9c8\uc758\uc751\ub2f5(QA) \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud560 \uac83\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.p,{children:"\uc774\ub97c \uc704\ud574 \uba87 \uc904\uc758 \ucf54\ub4dc\ub9cc\uc73c\ub85c \uac04\ub2e8\ud55c \uc778\ub371\uc2f1 \ud30c\uc774\ud504\ub77c\uc778\uacfc RAG \uccb4\uc778\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import "cheerio";\nimport { CheerioWebBaseLoader } from "langchain/document_loaders/web/cheerio";\nimport { RecursiveCharacterTextSplitter } from "langchain/text_splitter";\nimport { MemoryVectorStore } from "langchain/vectorstores/memory";\nimport { OpenAIEmbeddings, ChatOpenAI } from "@langchain/openai";\nimport { pull } from "langchain/hub";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport { StringOutputParser } from "@langchain/core/output_parsers";\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { createStuffDocumentsChain } from "langchain/chains/combine_documents";\n\nconst loader = new CheerioWebBaseLoader(\n  "https://lilianweng.github.io/posts/2023-06-23-agent/"\n);\n\nconst docs = await loader.load();\n\nconst textSplitter = new RecursiveCharacterTextSplitter({\n  chunkSize: 1000,\n  chunkOverlap: 200,\n});\nconst splits = await textSplitter.splitDocuments(docs);\nconst vectorStore = await MemoryVectorStore.fromDocuments(\n  splits,\n  new OpenAIEmbeddings()\n);\n\n// Retrieve and generate using the relevant snippets of the blog.\nconst retriever = vectorStore.asRetriever();\nconst prompt = await pull<ChatPromptTemplate>("rlm/rag-prompt");\nconst llm = new ChatOpenAI({ model: "gpt-3.5-turbo", temperature: 0 });\n\nconst ragChain = await createStuffDocumentsChain({\n  llm,\n  prompt,\n  outputParser: new StringOutputParser(),\n});\n\nconst retrievedDocs = await retriever.getRelevantDocuments(\n  "what is task decomposition"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:"\uc774 \ud504\ub86c\ud504\ud2b8\uac00 \uc2e4\uc81c\ub85c \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\uc5c8\ub294\uc9c0 \uc0b4\ud3b4\ubd05\uc2dc\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'console.log(prompt.promptMessages.map((msg) => msg.prompt.template).join("\\n"));\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"You are an assistant for question-answering tasks. Use the following pieces of retrieved context to answer the question. If you don't know the answer, just say that you don't know. Use three sentences maximum and keep the answer concise.\nQuestion: {question}\nContext: {context}\nAnswer:\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'await ragChain.invoke({\n  question: "What is task decomposition?",\n  context: retrievedDocs,\n});\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'"Task decomposition is a technique used to break down complex tasks into smaller and simpler steps. I"... 259 more characters\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\uc704 \uccb4\uc778\uc758 ",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/54cffec3-5c26-477d-b56d-ebb66a254c8e/r",children:"LangSmith trace"}),"\ub97c \ud655\uc778\ud574 \ubcf4\uc138\uc694."]}),"\n",(0,a.jsxs)(n.p,{children:["\ub610\ud55c, ",(0,a.jsx)(n.code,{children:"RunnableSequence"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc704\uc758 RAG \uccb4\uc778\uc744 \ubcf4\ub2e4 \uc120\uc5b8\uc801\uc778 \ubc29\uc2dd\uc73c\ub85c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,a.jsx)(n.code,{children:"createStuffDocumentsChain"}),"\uc740 \uae30\ubcf8\uc801\uc73c\ub85c ",(0,a.jsx)(n.code,{children:"RunnableSequence"}),"\uc758 \ub798\ud37c\uc774\ubbc0\ub85c, \ub354 \ubcf5\uc7a1\ud55c \uccb4\uc778\uacfc\n\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub97c \uc704\ud574 ",(0,a.jsx)(n.code,{children:"RunnableSequence"}),"\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { formatDocumentsAsString } from "langchain/util/document";\nimport {\n  RunnableSequence,\n  RunnablePassthrough,\n} from "@langchain/core/runnables";\n\nconst declarativeRagChain = RunnableSequence.from([\n  {\n    context: retriever.pipe(formatDocumentsAsString),\n    question: new RunnablePassthrough(),\n  },\n  prompt,\n  llm,\n  new StringOutputParser(),\n]);\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'await declarativeRagChain.invoke("What is task decomposition?");\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'"Task decomposition is a technique used to break down complex tasks into smaller and simpler steps. I"... 208 more characters\n'})}),"\n",(0,a.jsxs)(n.p,{children:["LangSmith ",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/c48e186c-c9da-4694-adf2-3a7c94362ec2/r",children:"trace"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"\ud1ba\uc544\ubcf4\uae30",children:"\ud1ba\uc544\ubcf4\uae30"}),"\n",(0,a.jsx)(n.p,{children:"\uc704\uc758 \ucf54\ub4dc\ub97c \ub2e8\uacc4\ubcc4\ub85c \uc0b4\ud3b4\ubcf4\uba70 \uc2e4\uc81c\ub85c \uc5b4\ub5a4 \uc77c\uc774 \uc77c\uc5b4\ub098\uace0 \uc788\ub294\uc9c0 \uc774\ud574\ud574 \ubd05\uc2dc\ub2e4."}),"\n",(0,a.jsx)(n.h2,{id:"indexing-load",children:"1. \uc778\ub371\uc2f1: \ub85c\ub4dc"}),"\n",(0,a.jsxs)(n.p,{children:["\uba3c\uc800 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc758 \ub0b4\uc6a9\uc744 \ub85c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 ",(0,a.jsx)(n.a,{href:"../../docs/concepts#document-loaders",children:"\ubb38\uc11c\ub85c\ub354"}),"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ubb38\uc11c\ub85c\ub354\ub294 \uc18c\uc2a4\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub85c\ub4dc\ud558\uace0 ",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_documents.Document.html",children:"\ubb38\uc11c"})," \ubaa9\ub85d\uc744 \ubc18\ud658\ud558\ub294 \uac1d\uccb4\uc785\ub2c8\ub2e4.\n\ubb38\uc11c\ub294 \ud398\uc774\uc9c0 \ucf58\ud150\uce20(",(0,a.jsx)(n.code,{children:"string"}),")\uc640 \uba54\ud0c0\ub370\uc774\ud130(",(0,a.jsx)(n.code,{children:"Record<string, any>"}),")\ub97c \uac00\uc9c4 \uac1d\uccb4\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.p,{children:["\uc774 \uacbd\uc6b0, cheerio\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6f9 URL\uc758 HTML \ud615\uc2dd\uc744 \ub85c\ub4dc\ud558\uace0 \ud14d\uc2a4\ud2b8\ub85c \ud30c\uc2f1\ud558\ub294 ",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_document_loaders_web_cheerio.CheerioWebBaseLoader.html",children:"CheerioWebBaseLoader"}),"\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.\n\ud2b9\uc815 \uc5d8\ub9ac\uba3c\ud2b8\ub9cc \ud30c\uc2f1\ud558\ub3c4\ub85d \uc0ac\uc6a9\uc790 \uc815\uc758 \uc120\ud0dd\uc790\ub97c \uc0dd\uc131\uc790\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const pTagSelector = "p";\nconst loader = new CheerioWebBaseLoader(\n  "https://lilianweng.github.io/posts/2023-06-23-agent/",\n  {\n    selector: pTagSelector,\n  }\n);\n\nconst docs = await loader.load();\nconsole.log(docs[0].pageContent.length);\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"22054\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(docs[0].pageContent);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'Building agents with LLM (large language model) as its core controller is a cool concept. Several proof-of-concepts demos, such as AutoGPT, GPT-Engineer and BabyAGI, serve as inspiring examples. The potentiality of LLM extends beyond generating well-written copies, stories, essays and programs; it can be framed as a powerful general problem solver.In a LLM-powered autonomous agent system, LLM functions as the agent\u2019s brain, complemented by several key components:A complicated task usually involves many steps. An agent needs to know what they are and plan ahead.Chain of thought (CoT; Wei et al. 2022) has become a standard prompting technique for enhancing model performance on complex tasks. The model is instructed to \u201cthink step by step\u201d to utilize more test-time computation to decompose hard tasks into smaller and simpler steps. CoT transforms big tasks into multiple manageable tasks and shed lights into an interpretation of the model\u2019s thinking process.Tree of Thoughts (Yao et al. 2023) extends CoT by exploring multiple reasoning possibilities at each step. It first decomposes the problem into multiple thought steps and generates multiple thoughts per step, creating a tree structure. The search process can be BFS (breadth-first search) or DFS (depth-first search) with each state evaluated by a classifier (via a prompt) or majority vote.Task decomposition can be done (1) by LLM with simple prompting like "Steps for XYZ.\\n1.", "What are the subgoals for achieving XYZ?", (2) by using task-specific instructions; e.g. "Write a story outline." for writing a novel, or (3) with human inputs.Another quite distinct approach, LLM+P (Liu et al. 2023), involves relying on an external classical planner to do long-horizon planning. This approach utilizes the Planning Domain Definition Language (PDDL) as an intermediate interface to describe the planning problem. In this process, LLM (1) translates the problem into \u201cProblem PDDL\u201d, then (2) requests a classical planner to generate a PDDL plan based on an existing \u201cDomain PDDL\u201d, and finally (3) translates the PDDL plan back into natural language. Essentially, the planning step is outsourced to an external tool, assuming the availability of domain-specific PDDL and a suitable planner which is common in certain robotic setups but not in many other domains.Self-reflection is a vital aspect that allows autonomous agents to improve iteratively by refining past action decisions and correcting previous mistakes. It plays a crucial role in real-world tasks where trial and error are inevitable.ReAct (Yao et al. 2023) integrates reasoning and acting within LLM by extending the action space to be a combination of task-specific discrete actions and the language space. The former enables LLM to interact with the environment (e.g. use Wikipedia search API), while the latter prompting LLM to generate reasoning traces in natural language.The ReAct prompt template incorporates explicit steps for LLM to think, roughly formatted as:In both experiments on knowledge-intensive tasks and decision-making tasks, ReAct works better than the Act-only baseline where Thought: \u2026 step is removed.Reflexion (Shinn & Labash 2023) is a framework to equips agents with dynamic memory and self-reflection capabilities to improve reasoning skills. Reflexion has a standard RL setup, in which the reward model provides a simple binary reward and the action space follows the setup in ReAct where the task-specific action space is augmented with language to enable complex reasoning steps. After each action $a_t$, the agent computes a heuristic $h_t$ and optionally may decide to reset the environment to start a new trial depending on the self-reflection results.The heuristic function determines when the trajectory is inefficient or contains hallucination and should be stopped. Inefficient planning refers to trajectories that take too long without success. Hallucination is defined as encountering a sequence of consecutive identical actions that lead to the same observation in the environment.Self-reflection is created by showing two-shot examples to LLM and each example is a pair of (failed trajectory, ideal reflection for guiding future changes in the plan). Then reflections are added into the agent\u2019s working memory, up to three, to be used as context for querying LLM.Chain of Hindsight (CoH; Liu et al. 2023) encourages the model to improve on its own outputs by explicitly presenting it with a sequence of past outputs, each annotated with feedback. Human feedback data is a collection of $D_h = \\{(x, y_i , r_i , z_i)\\}_{i=1}^n$, where $x$ is the prompt, each $y_i$ is a model completion, $r_i$ is the human rating of $y_i$, and $z_i$ is the corresponding human-provided hindsight feedback. Assume the feedback tuples are ranked by reward, $r_n \\geq r_{n-1} \\geq \\dots \\geq r_1$ The process is supervised fine-tuning where the data is a sequence in the form of $\\tau_h = (x, z_i, y_i, z_j, y_j, \\dots, z_n, y_n)$, where $\\leq i \\leq j \\leq n$. The model is finetuned to only predict $y_n$ where conditioned on the sequence prefix, such that the model can self-reflect to produce better output based on the feedback sequence. The model can optionally receive multiple rounds of instructions with human annotators at test time.To avoid overfitting, CoH adds a regularization term to maximize the log-likelihood of the pre-training dataset. To avoid shortcutting and copying (because there are many common words in feedback sequences), they randomly mask 0% - 5% of past tokens during training.The training dataset in their experiments is a combination of WebGPT comparisons, summarization from human feedback and human preference dataset.The idea of CoH is to present a history of sequentially improved outputs  in context and train the model to take on the trend to produce better outputs. Algorithm Distillation (AD; Laskin et al. 2023) applies the same idea to cross-episode trajectories in reinforcement learning tasks, where an algorithm is encapsulated in a long history-conditioned policy. Considering that an agent interacts with the environment many times and in each episode the agent gets a little better, AD concatenates this learning history and feeds that into the model. Hence we should expect the next predicted action to lead to better performance than previous trials. The goal is to learn the process of RL instead of training a task-specific policy itself.The paper hypothesizes that any algorithm that generates a set of learning histories can be distilled into a neural network by performing behavioral cloning over actions. The history data is generated by a set of source policies, each trained for a specific task. At the training stage, during each RL run, a random task is sampled and a subsequence of multi-episode history is used for training, such that the learned policy is task-agnostic.In reality, the model has limited context window length, so episodes should be short enough to construct multi-episode history. Multi-episodic contexts of 2-4 episodes are necessary to learn a near-optimal in-context RL algorithm. The emergence of in-context RL requires long enough context.In comparison with three baselines, including ED (expert distillation, behavior cloning with expert trajectories instead of learning history), source policy (used for generating trajectories for distillation by UCB), RL^2 (Duan et al. 2017; used as upper bound since it needs online RL), AD demonstrates in-context RL with performance getting close to RL^2 despite only using offline RL and learns much faster than other baselines. When conditioned on partial training history of the source policy, AD also improves much faster than ED baseline.(Big thank you to ChatGPT for helping me draft this section. I\u2019ve learned a lot about the human brain and data structure for fast MIPS in my conversations with ChatGPT.)Memory can be defined as the processes used to acquire, store, retain, and later retrieve information. There are several types of memory in human brains.Sensory Memory: This is the earliest stage of memory, providing the ability to retain impressions of sensory information (visual, auditory, etc) after the original stimuli have ended. Sensory memory typically only lasts for up to a few seconds. Subcategories include iconic memory (visual), echoic memory (auditory), and haptic memory (touch).Short-Term Memory (STM) or Working Memory: It stores information that we are currently aware of and needed to carry out complex cognitive tasks such as learning and reasoning. Short-term memory is believed to have the capacity of about 7 items (Miller 1956) and lasts for 20-30 seconds.Long-Term Memory (LTM): Long-term memory can store information for a remarkably long time, ranging from a few days to decades, with an essentially unlimited storage capacity. There are two subtypes of LTM:We can roughly consider the following mappings:The external memory can alleviate the restriction of finite attention span.  A standard practice is to save the embedding representation of information into a vector store database that can support fast maximum inner-product search (MIPS). To optimize the retrieval speed, the common choice is the approximate nearest neighbors (ANN)\u200b algorithm to return approximately top k nearest neighbors to trade off a little accuracy lost for a huge speedup.A couple common choices of ANN algorithms for fast MIPS:Check more MIPS algorithms and performance comparison in ann-benchmarks.com.Tool use is a remarkable and distinguishing characteristic of human beings. We create, modify and utilize external objects to do things that go beyond our physical and cognitive limits. Equipping LLMs with external tools can significantly extend the model capabilities.MRKL (Karpas et al. 2022), short for \u201cModular Reasoning, Knowledge and Language\u201d, is a neuro-symbolic architecture for autonomous agents. A MRKL system is proposed to contain a collection of \u201cexpert\u201d modules and the general-purpose LLM works as a router to route inquiries to the best suitable expert module. These modules can be neural (e.g. deep learning models) or symbolic (e.g. math calculator, currency converter, weather API).They did an experiment on fine-tuning LLM to call a calculator, using arithmetic as a test case. Their experiments showed that it was harder to solve verbal math problems than explicitly stated math problems because LLMs (7B Jurassic1-large model) failed to extract the right arguments for the basic arithmetic reliably. The results highlight when the external symbolic tools can work reliably, knowing when to and how to use the tools are crucial, determined by the LLM capability.Both TALM (Tool Augmented Language Models; Parisi et al. 2022) and Toolformer (Schick et al. 2023) fine-tune a LM to learn to use external tool APIs. The dataset is expanded based on whether a newly added API call annotation can improve the quality of model outputs. See more details in the \u201cExternal APIs\u201d section of Prompt Engineering.ChatGPT Plugins and OpenAI API  function calling are good examples of LLMs augmented with tool use capability working in practice. The collection of tool APIs can be provided by other developers (as in Plugins) or self-defined (as in function calls).HuggingGPT (Shen et al. 2023) is a framework to use ChatGPT as the task planner to select models available in HuggingFace platform according to the model descriptions and summarize the response based on the execution results.The system comprises of 4 stages:(1) Task planning: LLM works as the brain and parses the user requests into multiple tasks. There are four attributes associated with each task: task type, ID, dependencies, and arguments. They use few-shot examples to guide LLM to do task parsing and planning.Instruction:(2) Model selection: LLM distributes the tasks to expert models, where the request is framed as a multiple-choice question. LLM is presented with a list of models to choose from. Due to the limited context length, task type based filtration is needed.Instruction:(3) Task execution: Expert models execute on the specific tasks and log results.Instruction:(4) Response generation: LLM receives the execution results and provides summarized results to users.To put HuggingGPT into real world usage, a couple challenges need to solve: (1) Efficiency improvement is needed as both LLM inference rounds and interactions with other models slow down the process; (2) It relies on a long context window to communicate over complicated task content; (3) Stability improvement of LLM outputs and external model services.API-Bank (Li et al. 2023) is a benchmark for evaluating the performance of tool-augmented LLMs. It contains 53 commonly used API tools, a complete tool-augmented LLM workflow, and 264 annotated dialogues that involve 568 API calls. The selection of APIs is quite diverse, including search engines, calculator, calendar queries, smart home control, schedule management, health data management, account authentication workflow and more. Because there are a large number of APIs, LLM first has access to API search engine to find the right API to call and then uses the corresponding documentation to make a call.In the API-Bank workflow, LLMs need to make a couple of decisions and at each step we can evaluate how accurate that decision is. Decisions include:This benchmark evaluates the agent\u2019s tool use capabilities at three levels:ChemCrow (Bran et al. 2023) is a domain-specific example in which LLM is augmented with 13 expert-designed tools to accomplish tasks across organic synthesis, drug discovery, and materials design. The workflow, implemented in LangChain, reflects what was previously described in the ReAct and MRKLs and combines CoT reasoning with tools relevant to the tasks:One interesting observation is that while the LLM-based evaluation concluded that GPT-4 and ChemCrow perform nearly equivalently, human evaluations with experts oriented towards the completion and chemical correctness of the solutions showed that ChemCrow outperforms GPT-4 by a large margin. This indicates a potential problem with using LLM to evaluate its own performance on domains that requires deep expertise. The lack of expertise may cause LLMs not knowing its flaws and thus cannot well judge the correctness of task results.Boiko et al. (2023) also looked into LLM-empowered agents for scientific discovery, to handle autonomous design, planning, and performance of complex scientific experiments. This agent can use tools to browse the Internet, read documentation, execute code, call robotics experimentation APIs and leverage other LLMs.For example, when requested to "develop a novel anticancer drug", the model came up with the following reasoning steps:They also discussed the risks, especially with illicit drugs and bioweapons. They developed a test set containing a list of known chemical weapon agents and asked the agent to synthesize them. 4 out of 11 requests (36%) were accepted to obtain a synthesis solution and the agent attempted to consult documentation to execute the procedure. 7 out of 11 were rejected and among these 7 rejected cases, 5 happened after a Web search while 2 were rejected based on prompt only.Generative Agents (Park, et al. 2023) is super fun experiment where 25 virtual characters, each controlled by a LLM-powered agent, are living and interacting in a sandbox environment, inspired by The Sims. Generative agents create believable simulacra of human behavior for interactive applications.The design of generative agents combines LLM with memory, planning and reflection mechanisms to enable agents to behave conditioned on past experience, as well as to interact with other agents.This fun simulation results in emergent social behavior, such as information diffusion, relationship memory (e.g. two agents continuing the conversation topic) and coordination of social events (e.g. host a party and invite many others).AutoGPT has drawn a lot of attention into the possibility of setting up autonomous agents with LLM as the main controller. It has quite a lot of reliability issues given the natural language interface, but nevertheless a cool proof-of-concept demo. A lot of code in AutoGPT is about format parsing.Here is the system message used by AutoGPT, where {{...}} are user inputs:GPT-Engineer is another project to create a whole repository of code given a task specified in natural language. The GPT-Engineer is instructed to think over a list of smaller components to build and ask for user input to clarify questions as needed.Here are a sample conversation for task clarification sent to OpenAI ChatCompletion endpoint used by GPT-Engineer. The user inputs are wrapped in {{user input text}}.Then after these clarification, the agent moved into the code writing mode with a different system message.\nSystem message:Think step by step and reason yourself to the right decisions to make sure we get it right.\nYou will first lay out the names of the core classes, functions, methods that will be necessary, as well as a quick comment on their purpose.Then you will output the content of each file including ALL code.\nEach file must strictly follow a markdown code block format, where the following tokens must be replaced such that\nFILENAME is the lowercase file name including the file extension,\nLANG is the markup code block language for the code\u2019s language, and CODE is the code:FILENAMEYou will start with the \u201centrypoint\u201d file, then go to the ones that are imported by that file, and so on.\nPlease note that the code should be fully functional. No placeholders.Follow a language and framework appropriate best practice file naming convention.\nMake sure that files contain all imports, types etc. Make sure that code in different files are compatible with each other.\nEnsure to implement all code, if you are unsure, write a plausible implementation.\nInclude module dependency or package manager dependency definition file.\nBefore you finish, double check that all parts of the architecture is present in the files.Useful to know:\nYou almost always put different classes in different files.\nFor Python, you always create an appropriate requirements.txt file.\nFor NodeJS, you always create an appropriate package.json file.\nYou always add a comment briefly describing the purpose of the function definition.\nYou try to add comments explaining very complex bits of logic.\nYou always follow the best practices for the requested languages in terms of describing the code written as a defined\npackage/project.Python toolbelt preferences:Conversatin samples:After going through key ideas and demos of building LLM-centered agents, I start to see a couple common limitations:Finite context length: The restricted context capacity limits the inclusion of historical information, detailed instructions, API call context, and responses. The design of the system has to work with this limited communication bandwidth, while mechanisms like self-reflection to learn from past mistakes would benefit a lot from long or infinite context windows. Although vector stores and retrieval can provide access to a larger knowledge pool, their representation power is not as powerful as full attention.Challenges in long-term planning and task decomposition: Planning over a lengthy history and effectively exploring the solution space remain challenging. LLMs struggle to adjust plans when faced with unexpected errors, making them less robust compared to humans who learn from trial and error.Reliability of natural language interface: Current agent system relies on natural language as an interface between LLMs and external components such as memory and tools. However, the reliability of model outputs is questionable, as LLMs may make formatting errors and occasionally exhibit rebellious behavior (e.g. refuse to follow an instruction). Consequently, much of the agent demo code focuses on parsing model output.Cited as:Weng, Lilian. (Jun 2023). LLM-powered Autonomous Agents". Lil\u2019Log. https://lilianweng.github.io/posts/2023-06-23-agent/.Or[1] Wei et al. \u201cChain of thought prompting elicits reasoning in large language models.\u201d NeurIPS 2022[2] Yao et al. \u201cTree of Thoughts: Dliberate Problem Solving with Large Language Models.\u201d arXiv preprint arXiv:2305.10601 (2023).[3] Liu et al. \u201cChain of Hindsight Aligns Language Models with Feedback\n\u201c arXiv preprint arXiv:2302.02676 (2023).[4] Liu et al. \u201cLLM+P: Empowering Large Language Models with Optimal Planning Proficiency\u201d arXiv preprint arXiv:2304.11477 (2023).[5] Yao et al. \u201cReAct: Synergizing reasoning and acting in language models.\u201d ICLR 2023.[6] Google Blog. \u201cAnnouncing ScaNN: Efficient Vector Similarity Search\u201d July 28, 2020.[7] https://chat.openai.com/share/46ff149e-a4c7-4dd7-a800-fc4a642ea389[8] Shinn & Labash. \u201cReflexion: an autonomous agent with dynamic memory and self-reflection\u201d arXiv preprint arXiv:2303.11366 (2023).[9] Laskin et al. \u201cIn-context Reinforcement Learning with Algorithm Distillation\u201d ICLR 2023.[10] Karpas et al. \u201cMRKL Systems A modular, neuro-symbolic architecture that combines large language models, external knowledge sources and discrete reasoning.\u201d arXiv preprint arXiv:2205.00445 (2022).[11] Weaviate Blog. Why is Vector Search so fast? Sep 13, 2022.[12] Li et al. \u201cAPI-Bank: A Benchmark for Tool-Augmented LLMs\u201d arXiv preprint arXiv:2304.08244 (2023).[13] Shen et al. \u201cHuggingGPT: Solving AI Tasks with ChatGPT and its Friends in HuggingFace\u201d arXiv preprint arXiv:2303.17580 (2023).[14] Bran et al. \u201cChemCrow: Augmenting large-language models with chemistry tools.\u201d arXiv preprint arXiv:2304.05376 (2023).[15] Boiko et al. \u201cEmergent autonomous scientific research capabilities of large language models.\u201d arXiv preprint arXiv:2304.05332 (2023).[16] Joon Sung Park, et al. \u201cGenerative Agents: Interactive Simulacra of Human Behavior.\u201d arXiv preprint arXiv:2304.03442 (2023).[17] AutoGPT. https://github.com/Significant-Gravitas/Auto-GPT[18] GPT-Engineer. https://github.com/AntonOsika/gpt-engineer\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30",children:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"DocumentLoaders"}),": \uc18c\uc2a4\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubaa9\ub85d \ud615\uc2dd\uc73c\ub85c \ub85c\ub4dc\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/concepts#document-loaders",children:"Docs"}),": \uc0ac\uc6a9 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc0c1\uc138 \ubb38\uc11c"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/document_loaders/",children:"Integrations"}),": 40\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569\uc774 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_document_loaders_base.BaseDocumentLoader.html",children:"Interface"}),": \uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"2-\uc778\ub371\uc2f1-\ubd84\ud560",children:"2. \uc778\ub371\uc2f1: \ubd84\ud560"}),"\n",(0,a.jsx)(n.p,{children:"\ub85c\ub4dc\ub41c \ubb38\uc11c\ub294 42,000\uc790 \uc774\uc0c1\uc785\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \ubaa8\ub378\uc758 \ucee8\ud14d\uc2a4\ud2b8 \uc708\ub3c4\uc6b0\ub97c \ucd08\uacfc\ud558\ub294 \uae38\uc774\uc785\ub2c8\ub2e4.\n\uc804\uccb4 \uac8c\uc2dc\ubb3c\uc744 \ucee8\ud14d\uc2a4\ud2b8 \uc708\ub3c4\uc6b0\uc5d0 \ub9de\ucd9c \uc218 \uc788\ub294 \ubaa8\ub378\uc870\ucc28\ub3c4 \uae34 \uc785\ub825\uc5d0\uc11c \uc815\ubcf4\ub97c \ucc3e\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.p,{children:["\uc774\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 ",(0,a.jsx)(n.code,{children:"Document"}),"\ub97c \uccad\ud06c\ub85c \ubd84\ud560\ud558\uc5ec \uc784\ubca0\ub529\ud558\uace0 \ubca1\ud130\uc2a4\ud1a0\uc5b4\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.\n\uc774\ub807\uac8c \ud558\uba74 \ub7f0\ud0c0\uc784\uc5d0 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc758 \uac00\uc7a5 \uad00\ub828\uc131 \ub192\uc740 \ubd80\ubd84\ub9cc \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.p,{children:["\uc774 \uacbd\uc6b0 \ubb38\uc11c\ub97c 1,000\uc790 \uccad\ud06c\ub85c \ub098\ub204\uace0 \uccad\ud06c \uac04\uc5d0 200\uc790 \uacb9\uce58\uac8c \ud560 \uac83\uc785\ub2c8\ub2e4.\n\uc624\ubc84\ub7a9\uc740 \uc911\uc694\ud55c \ubb38\ub9e5\uacfc \uad00\ub828\ub41c \uc9c4\uc220\uc774 \ubd84\ub9ac\ub418\ub294 \uac00\ub2a5\uc131\uc744 \uc904\uc5ec\uc90d\ub2c8\ub2e4.\n",(0,a.jsx)(n.a,{href:"../../docs/how_to/recursive_text_splitter/",children:"RecursiveCharacterTextSplitter"}),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uc774 \uc2a4\ud50c\ub9ac\ud130\ub294 \uacf5\ud1b5 \uad6c\ubd84 \uae30\ud638\uc778 \uc0c8 \uc904 \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc801\uc808\ud55c \ud06c\uae30\uc758 \uccad\ud06c\uac00 \ub420 \ub54c\uae4c\uc9c0 \uc7ac\uadc0\uc801\uc73c\ub85c \ubb38\uc11c\ub97c \ubd84\ud560\ud569\ub2c8\ub2e4.\n\uc774\ub294 \uc77c\ubc18 \ud14d\uc2a4\ud2b8 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \uad8c\uc7a5\ub418\ub294 \ud14d\uc2a4\ud2b8 \uc2a4\ud50c\ub9ac\ud130\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const textSplitter = new RecursiveCharacterTextSplitter({\n  chunkSize: 1000,\n  chunkOverlap: 200,\n});\nconst allSplits = await textSplitter.splitDocuments(docs);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(allSplits.length);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"28\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(allSplits[0].pageContent.length);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"996\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"allSplits[10].metadata;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  source: "https://lilianweng.github.io/posts/2023-06-23-agent/",\n  loc: { lines: { from: 1, to: 1 } }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-1",children:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"TextSplitter"}),": ",(0,a.jsx)(n.code,{children:"Document"})," \ubaa9\ub85d\uc744 \ub354 \uc791\uc740 \uccad\ud06c\ub85c \ubd84\ud560\ud558\ub294 \uac1d\uccb4\uc774\uace0, ",(0,a.jsx)(n.code,{children:"DocumentTransformers"}),"\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc758 \ubd84\ud560\ub41c \uac01 \uc704\uce58\ub97c \uc6d0\ubcf8 \ubb38\uc11c\uc5d0 \uc720\uc9c0\ud558\ub294 ",(0,a.jsx)(n.code,{children:"\ucee8\ud14d\uc2a4\ud2b8 \uc778\uc2dd \uc2a4\ud50c\ub9ac\ud130"}),"\ub97c \uc0b4\ud3b4\ubcf4\uc138\uc694:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/how_to/code_splitter/#markdown",children:"Markdown \ud30c\uc77c"}),": \uc704 \uc608\uc81c\uc5d0\uc11c \uc0ac\uc6a9\ub41c \ub9c8\ud06c\ub2e4\uc6b4 \ucf54\ub4dc\uc2a4\ud50c\ub9ac\ud130 \uc0ac\uc6a9\ubc95"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/how_to/code_splitter/",children:"\ucf54\ub4dc \uc2a4\ud50c\ub9ac\ud130"}),": 15\uac1c \uc774\uc0c1\uc758 \uc5b8\uc5b4 \uc9c0\uc6d0"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_textsplitters.TextSplitter.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),": \uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"DocumentTransformer"}),": ",(0,a.jsx)(n.code,{children:"Document"})," \ubaa9\ub85d\uc5d0 \ubcc0\ud658\uc744 \uc218\ud589\ud558\ub294 \uac1d\uccb4\uc785\ub2c8\ub2e4.."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/document_transformers",children:"\ud1b5\ud569"})," : 3\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569 \uc120\ud0dd\uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_documents.BaseDocumentTransformer.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),": \uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"indexing-store",children:"3. \uc778\ub371\uc2f1: \uc800\uc7a5"}),"\n",(0,a.jsx)(n.p,{children:'\uc774\uc81c 28\uac1c\uc758 \ud14d\uc2a4\ud2b8 \uccad\ud06c\ub97c \uc778\ub371\uc2f1\ud558\uc5ec \ub7f0\ud0c0\uc784\uc5d0 \uac80\uc0c9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\n\uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc740 \uac01 \ubd84\ud65c\ub41c \ubb38\uc11c\uc758 \ub0b4\uc6a9\uc744 \uc784\ubca0\ub529\ud558\uace0 \uc774 \uc784\ubca0\ub529\uc744\n\ubca1\ud130 \ub370\uc774\ud130\ubca0\uc774\uc2a4(\ub610\ub294 \ubca1\ud130\uc2a4\ud1a0\uc5b4)\uc5d0 \uc0bd\uc785\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubd84\ud560\ub41c \ubb38\uc11c\ub97c \uac80\uc0c9\ud558\ub824\uba74\n\ud14d\uc2a4\ud2b8 \uac80\uc0c9 \ucffc\ub9ac\ub97c \uac00\uc838\uc640 \uc784\ubca0\ub529\ud558\uace0, \uc77c\uc885\uc758 "\uc720\uc0ac\uc131" \uac80\uc0c9\uc744 \uc218\ud589\ud558\uc5ec\n\ucffc\ub9ac \uc784\ubca0\ub529\uacfc \uac00\uc7a5 \uc720\uc0ac\ud55c \uc784\ubca0\ub529\uc744 \uac00\uc9c4 \uc800\uc7a5\ub41c \ubd84\ud560\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.\n\uac00\uc7a5 \uac04\ub2e8\ud55c \uc720\uc0ac\uc131 \uce21\uc815 \ubc29\ubc95\uc740 \ucf54\uc0ac\uc778 \uc720\uc0ac\uc131\uc785\ub2c8\ub2e4. \uac01 \uc784\ubca0\ub529 \uc30d(\uace0\ucc28\uc6d0 \ubca1\ud130)\uc758\n\uac01\ub3c4 \ucf54\uc0ac\uc778\uc744 \uce21\uc815\ud569\ub2c8\ub2e4.'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/vectorstores/memory",children:"Memory"})," \ubca1\ud130\uc2a4\ud1a0\uc5b4\uc640\n",(0,a.jsx)(n.a,{href:"../../docs/integrations/text_embedding/openai",children:"OpenAIEmbeddings"})," \ubaa8\ub378\uc744\n\uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ubb38\uc11c \ubd84\ud560\uc744 \ub2e8\uc77c \uba85\ub839\uc73c\ub85c \uc784\ubca0\ub529\ud558\uace0 \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { MemoryVectorStore } from "langchain/vectorstores/memory";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\nconst vectorStore = await MemoryVectorStore.fromDocuments(\n  allSplits,\n  new OpenAIEmbeddings()\n);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-2",children:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Embeddings"}),": \ud14d\uc2a4\ud2b8\ub97c \uc784\ubca0\ub529\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ud14d\uc2a4\ud2b8 \uc784\ubca0\ub529 \ubaa8\ub378\uc758 \ub798\ud37c."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/concepts#embedding-models",children:"\ubb38\uc11c"}),": \uc784\ubca0\ub529 \uc0ac\uc6a9 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ubb38\uc11c"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/text_embedding",children:"\ud1b5\ud569"}),": 30\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569 \uc120\ud0dd \uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_embeddings.Embeddings.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),":\n\uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"VectorStore"}),": \uc784\ubca0\ub529\uc744 \uc800\uc7a5\ud558\uace0 \ucffc\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ubca1\ud130 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ub798\ud37c."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/concepts#vectorstores",children:"\ubb38\uc11c"}),": \ubca1\ud130\uc2a4\ud1a0\uc5b4 \uc0ac\uc6a9 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ubb38\uc11c"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/vectorstores",children:"\ud1b5\ud569"}),": 40\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569 \uc120\ud0dd \uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_vectorstores.VectorStore.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),":\n\uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\uc774\ub85c\uc368 ",(0,a.jsx)(n.strong,{children:"\uc778\ub371\uc2f1"})," \ud30c\uc774\ud504\ub77c\uc778 \ubd80\ubd84\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\n\uc774 \uc2dc\uc810\uc5d0\uc11c \uc6b0\ub9ac\ub294 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc758 \uccad\ud06c\ub41c \ucf58\ud150\uce20\ub97c \ud3ec\ud568\ud558\ub294 \ucffc\ub9ac \uac00\ub2a5\ud55c\n\ubca1\ud130\uc2a4\ud1a0\uc5b4\ub97c \uac16\uac8c \ub429\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c8\ubb38\uc744 \ubc1b\uc73c\uba74 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc758\n\uc9c8\ubb38\uc5d0 \ub300\ud55c \ub2f5\ubcc0\uc744 \ud3ec\ud568\ud558\ub294 \uc2a4\ub2c8\ud3ab\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.h2,{id:"retrieval-and-generation-retrieve",children:"4. \uac80\uc0c9 \ubc0f \uc0dd\uc131: \uac80\uc0c9"}),"\n",(0,a.jsx)(n.p,{children:"\uc774\uc81c \uc2e4\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uc9c1\uc744 \uc791\uc131\ud574 \ubd05\uc2dc\ub2e4. \uc0ac\uc6a9\uc790 \uc9c8\ubb38\uc744 \ubc1b\uc544\n\uadf8 \uc9c8\ubb38\uacfc \uad00\ub828\ub41c \ubb38\uc11c\ub97c \uac80\uc0c9\ud558\uace0, \uac80\uc0c9\ub41c \ubb38\uc11c\uc640 \ucd08\uae30 \uc9c8\ubb38\uc744\n\ubaa8\ub378\uc5d0 \uc804\ub2ec\ud558\uc5ec \ub2f5\ubcc0\uc744 \ubc18\ud658\ud558\ub294 \uac04\ub2e8\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub9cc\ub4e4\uace0\uc790 \ud569\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.p,{children:["\uba3c\uc800 \ubb38\uc11c \uac80\uc0c9 \ub85c\uc9c1\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. LangChain\uc740 \ubb38\uc790\uc5f4 \ucffc\ub9ac\ub97c \ubc1b\uc73c\uba74\n\uad00\ub828 ",(0,a.jsx)(n.code,{children:"Document"}),"\ub97c \ubc18\ud658\ud560 \uc218 \uc788\ub294 \uc778\ub371\uc2a4\ub97c \ub798\ud551\ud558\ub294\n",(0,a.jsx)(n.a,{href:"../../docs/concepts#retrievers",children:"Retriever"})," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.p,{children:["\uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ud0c0\uc785\uc758 \ub9ac\ud2b8\ub9ac\ubc84\ub294\n",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_vectorstores.VectorStoreRetriever.html",children:"VectorStoreRetriever"}),"\uc785\ub2c8\ub2e4.\n\uc774\ub294 \ubca1\ud130\uc2a4\ud1a0\uc5b4\uc758 \uc720\uc0ac\uc131 \uac80\uc0c9 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac80\uc0c9\uc744 \uc6a9\uc774\ud558\uac8c \ud569\ub2c8\ub2e4.\n\uc5b4\ub5a4 ",(0,a.jsx)(n.code,{children:"VectorStore"}),"\ub4e0\uc9c0 ",(0,a.jsx)(n.code,{children:"VectorStore.asRetriever()"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec\n\uc27d\uac8c ",(0,a.jsx)(n.code,{children:"Retriever"}),"\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const retriever = vectorStore.asRetriever({ k: 6, searchType: "similarity" });\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const retrievedDocs = await retriever.invoke(\n  "What are the approaches to task decomposition?"\n);\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(retrievedDocs.length);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"6\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(retrievedDocs[0].pageContent);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'hard tasks into smaller and simpler steps. CoT transforms big tasks into multiple manageable tasks and shed lights into an interpretation of the model\u2019s thinking process.Tree of Thoughts (Yao et al. 2023) extends CoT by exploring multiple reasoning possibilities at each step. It first decomposes the problem into multiple thought steps and generates multiple thoughts per step, creating a tree structure. The search process can be BFS (breadth-first search) or DFS (depth-first search) with each state evaluated by a classifier (via a prompt) or majority vote.Task decomposition can be done (1) by LLM with simple prompting like "Steps for XYZ.\\n1.", "What are the subgoals for achieving XYZ?", (2) by using task-specific instructions; e.g. "Write a story outline." for writing a novel, or (3) with human inputs.Another quite distinct approach, LLM+P (Liu et al. 2023), involves relying on an external classical planner to do long-horizon planning. This approach utilizes the Planning Domain\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-3",children:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30"}),"\n",(0,a.jsx)(n.p,{children:"\ubca1\ud130\uc2a4\ud1a0\uc5b4\ub294 \uc8fc\ub85c \uac80\uc0c9\uc5d0 \uc0ac\uc6a9\ub418\uc9c0\ub9cc, \uac80\uc0c9\uc744 \ud558\ub294 \ub2e4\ub978 \ubc29\ubc95\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"\ub9ac\ud2b8\ub9ac\ubc84"}),": \ud14d\uc2a4\ud2b8 \ucffc\ub9ac\uc5d0 \ub530\ub77c ",(0,a.jsx)(n.code,{children:"\ubb38\uc11c"}),"\ub97c \ubc18\ud658\ud558\ub294 \uac1d\uccb4\uc785\ub2c8\ub2e4"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/concepts#retrievers",children:"\ub9ac\ud2b8\ub9ac\ubc84 \ubb38\uc11c"}),": \uc778\ud130\ud398\uc774\uc2a4\uc640 \uae30\ubcf8 \uac80\uc0c9 \uae30\uc220\uc5d0 \ub300\ud55c \ucd94\uac00 \ubb38\uc11c. \uc77c\ubd80 \uac80\uc0c9 \uae30\uc220\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MultiQueryRetriever"}),"\ub294 \uac80\uc0c9 \uc801\uc911\ub960\uc744 \ub192\uc774\uae30 \uc704\ud574 ",(0,a.jsx)(n.a,{href:"../../docs/how_to/multiple_queries/",children:"\uc785\ub825 \uc9c8\ubb38\uc758 \ubcc0\ud615\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MultiVectorRetriever"})," (\uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8 \ucc38\uc870)\ub294 \ub610\ud55c \uac80\uc0c9 \uc801\uc911\ub960\uc744 \ub192\uc774\uae30 \uc704\ud574 \uc784\ubca0\ub529\uc758 \ubcc0\ud615\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"\ucd5c\ub300 \ud55c\uacc4 \uad00\ub828\uc131\uc740 \uc911\ubcf5\ub41c \ucee8\ud14d\uc2a4\ud2b8 \uc804\ub2ec\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uac80\uc0c9\ub41c \ubb38\uc11c \uc911 \uad00\ub828\uc131\uacfc \ub2e4\uc591\uc131\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.li,{children:"\ubb38\uc11c\ub294 \ubca1\ud130\uc2a4\ud1a0\uc5b4 \uac80\uc0c9 \uc911 \uba54\ud0c0\ub370\uc774\ud130 \ud544\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud544\ud130\ub9c1\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/retrievers",children:"\ud1b5\ud569"}),": \uac80\uc0c9 \uc11c\ube44\uc2a4\uc640\uc758 \ud1b5\ud569"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/modules/langchain_core_retrievers.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),": \uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"retrieval-and-generation-generate",children:"5. \uac80\uc0c9\uacfc \uc0dd\uc131: \uc0dd\uc131\ud558\uae30"}),"\n",(0,a.jsx)(n.p,{children:"\uc9c8\ubb38\uc744 \ubc1b\uc544\uc11c \uad00\ub828 \ubb38\uc11c\ub97c \uac80\uc0c9\ud558\uace0 \ud504\ub86c\ud504\ud2b8\ub97c \uad6c\uc131\ud55c \ub2e4\uc74c \ubaa8\ub378\uc5d0 \uc804\ub2ec\ud558\uace0 \ucd9c\ub825\uc744 \ud30c\uc2f1\ud558\ub294 \uccb4\uc778\uc744 \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsx)(i.A,{customVarName:"llm"}),"\n",(0,a.jsxs)(n.p,{children:["We\u2019ll use a prompt for RAG that is checked into the LangChain prompt hub\n(",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/hub/rlm/rag-prompt?organizationId=9213bdc8-a184-442b-901a-cd86ebf8ca6f",children:"here"}),")."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { ChatPromptTemplate } from "@langchain/core/prompts";\nimport { pull } from "langchain/hub";\n\nconst prompt = await pull<ChatPromptTemplate>("rlm/rag-prompt");\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const exampleMessages = await prompt.invoke({\n  context: "filler context",\n  question: "filler question",\n});\nexampleMessages;\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'ChatPromptValue {\n  lc_serializable: true,\n  lc_kwargs: {\n    messages: [\n      HumanMessage {\n        lc_serializable: true,\n        lc_kwargs: {\n          content: "You are an assistant for question-answering tasks. Use the following pieces of retrieved context to "... 197 more characters,\n          additional_kwargs: {}\n        },\n        lc_namespace: [ "langchain_core", "messages" ],\n        content: "You are an assistant for question-answering tasks. Use the following pieces of retrieved context to "... 197 more characters,\n        name: undefined,\n        additional_kwargs: {}\n      }\n    ]\n  },\n  lc_namespace: [ "langchain_core", "prompt_values" ],\n  messages: [\n    HumanMessage {\n      lc_serializable: true,\n      lc_kwargs: {\n        content: "You are an assistant for question-answering tasks. Use the following pieces of retrieved context to "... 197 more characters,\n        additional_kwargs: {}\n      },\n      lc_namespace: [ "langchain_core", "messages" ],\n      content: "You are an assistant for question-answering tasks. Use the following pieces of retrieved context to "... 197 more characters,\n      name: undefined,\n      additional_kwargs: {}\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"console.log(exampleMessages.messages[0].content);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"You are an assistant for question-answering tasks. Use the following pieces of retrieved context to answer the question. If you don't know the answer, just say that you don't know. Use three sentences maximum and keep the answer concise.\nQuestion: filler question\nContext: filler context\nAnswer:\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\uc6b0\ub9ac\ub294 \uccb4\uc778\uc744 \uc815\uc758\ud558\uae30 \uc704\ud574 ",(0,a.jsx)(n.a,{href:"../../docs/how_to/#langchain-expression-language-lcel",children:"LCEL Runnable"}),"\n\ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc74c\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\ucef4\ud3ec\ub10c\ud2b8\uc640 \uae30\ub2a5\uc744 \ud22c\uba85\ud558\uac8c \ud30c\uc774\ud504\ub85c \uc5f0\uacb0"}),"\n",(0,a.jsx)(n.li,{children:"LangSmith\uc5d0\uc11c \uccb4\uc778\uc744 \uc790\ub3d9\uc73c\ub85c \ucd94\uc801"}),"\n",(0,a.jsx)(n.li,{children:"\uc2a4\ud2b8\ub9ac\ubc0d, \ube44\ub3d9\uae30 \ubc0f \ubc30\uce58 \ud638\ucd9c\uc744 \uae30\ubcf8\uc73c\ub85c \uc81c\uacf5"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { StringOutputParser } from "@langchain/core/output_parsers";\nimport {\n  RunnablePassthrough,\n  RunnableSequence,\n} from "@langchain/core/runnables";\nimport { formatDocumentsAsString } from "langchain/util/document";\n\nconst ragChain = RunnableSequence.from([\n  {\n    context: retriever.pipe(formatDocumentsAsString),\n    question: new RunnablePassthrough(),\n  },\n  prompt,\n  llm,\n  new StringOutputParser(),\n]);\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'for await (const chunk of await ragChain.stream(\n  "What is task decomposition?"\n)) {\n  console.log(chunk);\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"\nTask\n decomposition\n is\n the\n process\n of\n breaking\n down\n a\n complex\n task\n into\n smaller\n and\n simpler\n steps\n.\n It\n allows\n for\n easier\n management\n and\n interpretation\n of\n the\n model\n's\n thinking\n process\n.\n Different\n approaches\n,\n such\n as\n Chain\n of\n Thought\n (\nCo\nT\n)\n and\n Tree\n of\n Thoughts\n,\n can\n be\n used\n to\n decom\npose\n tasks\n and\n explore\n multiple\n reasoning\n possibilities\n at\n each\n step\n.\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/6f89b333-de55-4ac2-9d93-ea32d41c9e71/r",children:"\uc5ec\uae30"}),"\uc11c LangSmith\uc744 \ud655\uc778\ud574\ubcf4\uc138\uc694."]}),"\n",(0,a.jsx)(n.h3,{id:"\ub354-\uae4a\uc774-\ub4e4\uc5b4\uac00\uae30-4",children:"\ub354 \uae4a\uc774 \ub4e4\uc5b4\uac00\uae30"}),"\n",(0,a.jsx)(n.h4,{id:"\ubaa8\ub378-\uc120\ud0dd",children:"\ubaa8\ub378 \uc120\ud0dd"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"\ucc44\ud305\ubaa8\ub378"}),": LLM \uae30\ubc18 \ucc44\ud305 \ubaa8\ub378\uc785\ub2c8\ub2e4. \uba54\uc2dc\uc9c0 \uc2dc\ud000\uc2a4\ub97c \ubc1b\uc544 \uba54\uc2dc\uc9c0\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/concepts/#chat-models",children:"\ubb38\uc11c"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/chat/",children:"\ud1b5\ud569"}),": 25\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569 \uc120\ud0dd \uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_language_models_chat_models.BaseChatModel.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),":\n\uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"LLM"}),": \ud14d\uc2a4\ud2b8 \uc785\ub825-\ud14d\uc2a4\ud2b8 \ucd9c\ub825 LLM\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc744 \ubc1b\uc544 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/concepts#llms",children:"\ubb38\uc11c"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/integrations/llms/",children:"\ud1b5\ud569"}),": 75\uac1c \uc774\uc0c1\uc758 \ud1b5\ud569 \uc120\ud0dd \uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_language_models_llms.BaseLLM.html",children:"\uc778\ud130\ud398\uc774\uc2a4"}),":\n\uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c API \ub808\ud37c\ub7f0\uc2a4"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\ub85c\uceec\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub378\uacfc \ud568\uaed8 RAG \uac00\uc774\ub4dc\ub97c\n",(0,a.jsx)(n.a,{href:"../../docs/tutorials/local_rag/",children:"\uc5ec\uae30"}),"\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694."]}),"\n",(0,a.jsx)(n.h4,{id:"\ud504\ub86c\ud504\ud2b8-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",children:"\ud504\ub86c\ud504\ud2b8 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5"}),"\n",(0,a.jsxs)(n.p,{children:["\uc704\uc5d0\uc11c \ubcf4\ub4ef\uc774, \uc6b0\ub9ac\ub294 \ud504\ub86c\ud504\ud2b8 \ud5c8\ube0c\uc5d0\uc11c \ud504\ub86c\ud504\ud2b8\ub97c \ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n(\uc608: ",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/hub/rlm/rag-prompt?organizationId=9213bdc8-a184-442b-901a-cd86ebf8ca6f",children:"RAG \ud504\ub86c\ud504\ud2b8"}),").\n\ud504\ub86c\ud504\ud2b8\ub294 \uc27d\uac8c \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { PromptTemplate } from "@langchain/core/prompts";\nimport { createStuffDocumentsChain } from "langchain/chains/combine_documents";\n\nconst template = `Use the following pieces of context to answer the question at the end.\nIf you don\'t know the answer, just say that you don\'t know, don\'t try to make up an answer.\nUse three sentences maximum and keep the answer as concise as possible.\nAlways say "thanks for asking!" at the end of the answer.\n\n{context}\n\nQuestion: {question}\n\nHelpful Answer:`;\n\nconst customRagPrompt = PromptTemplate.fromTemplate(template);\n\nconst ragChain = await createStuffDocumentsChain({\n  llm,\n  prompt: customRagPrompt,\n  outputParser: new StringOutputParser(),\n});\nconst context = await retriever.getRelevantDocuments(\n  "what is task decomposition"\n);\n\nawait ragChain.invoke({\n  question: "What is Task Decomposition?",\n  context,\n});\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'"Task decomposition is a technique used to break down complex tasks into smaller and simpler steps. I"... 336 more characters\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/6f89b333-de55-4ac2-9d93-ea32d41c9e71/r",children:"\uc5ec\uae30"}),"\uc11c LangSmith\uc744 \ud655\uc778\ud574\ubcf4\uc138\uc694."]}),"\n",(0,a.jsx)(n.h2,{id:"\ub2e4\uc74c-\ub2e8\uacc4",children:"\ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,a.jsxs)(n.p,{children:["\uc9e7\uc740 \uc2dc\uac04 \uc548\uc5d0 \ub9ce\uc740 \ub0b4\uc6a9\uc744 \ub2e4\ub8e8\uc5c8\uc2b5\ub2c8\ub2e4. \uc704\uc758 \uac01 \uc139\uc158\uc5d0\uc11c \ud0d0\uc0c9\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \uae30\ub2a5,\n\ud1b5\ud569, \ud655\uc7a5\uc774 \ub9ce\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c ",(0,a.jsx)(n.code,{children:"\ub354 \uae4a\uac8c \ub4e4\uc5b4\uac00\uae30"})," \uc139\uc158\uc758 \uc18c\uc2a4 \uc678\uc5d0\ub3c4 \uc88b\uc740 \ub2e4\uc74c \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/how_to/qa_sources/",children:"\uc18c\uc2a4 \ubc18\ud658"}),": \uc18c\uc2a4 \ubb38\uc11c\ub97c \ubc18\ud658\ud558\ub294 \ubc29\ubc95 \ubc30\uc6b0\uae30"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/how_to/qa_streaming/",children:"\uc2a4\ud2b8\ub9ac\ubc0d"}),": \ucd9c\ub825 \ubc0f \uc911\uac04 \ub2e8\uacc4\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud558\ub294 \ubc29\ubc95 \ubc30\uc6b0\uae30"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../../docs/how_to/qa_chat_history_how_to/",children:"\ucc44\ud305 \uae30\ub85d \ucd94\uac00"}),": \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ucc44\ud305 \uae30\ub85d\uc744\n\ucd94\uac00\ud558\ub294 \ubc29\ubc95 \ubc30\uc6b0\uae30"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},63142:(e,n,t)=>{t.d(n,{A:()=>p});t(96540);var a=t(11470),s=t(19365),i=t(21432),r=t(27846),o=t(27293),l=t(74848);function c(e){let{children:n}=e;return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.A,{type:"tip",children:(0,l.jsxs)("p",{children:["See"," ",(0,l.jsx)("a",{href:"/docs/get_started/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})}),(0,l.jsx)(r.A,{children:n})]})}const h={openaiParams:'{\n  model: "gpt-3.5-turbo",\n  temperature: 0\n}',anthropicParams:'{\n  model: "claude-3-sonnet-20240229",\n  temperature: 0\n}',fireworksParams:'{\n  model: "accounts/fireworks/models/firefunction-v1",\n  temperature: 0\n}',mistralParams:'{\n  model: "mistral-large-latest",\n  temperature: 0\n}',groqParams:'{\n  model: "mixtral-8x7b-32768",\n  temperature: 0\n}',vertexParams:'{\n  model: "gemini-1.5-pro",\n  temperature: 0\n}'},d=["openai","anthropic","mistral","groq","vertex"];function p(e){const{customVarName:n,additionalDependencies:t}=e,r=n??"model",o=e.openaiParams??h.openaiParams,p=e.anthropicParams??h.anthropicParams,m=e.fireworksParams??h.fireworksParams,u=e.mistralParams??h.mistralParams,g=e.groqParams??h.groqParams,f=e.vertexParams??h.vertexParams,x=e.providers??["openai","anthropic","fireworks","mistral","groq","vertex"],j={openai:{value:"openai",label:"OpenAI",default:!0,text:`import { ChatOpenAI } from "@langchain/openai";\n\nconst ${r} = new ChatOpenAI(${o});`,envs:"OPENAI_API_KEY=your-api-key",dependencies:"@langchain/openai"},anthropic:{value:"anthropic",label:"Anthropic",default:!1,text:`import { ChatAnthropic } from "@langchain/anthropic";\n\nconst ${r} = new ChatAnthropic(${p});`,envs:"ANTHROPIC_API_KEY=your-api-key",dependencies:"@langchain/anthropic"},fireworks:{value:"fireworks",label:"FireworksAI",default:!1,text:`import { ChatFireworks } from "@langchain/community/chat_models/fireworks";\n\nconst ${r} = new ChatFireworks(${m});`,envs:"FIREWORKS_API_KEY=your-api-key",dependencies:"@langchain/community"},mistral:{value:"mistral",label:"MistralAI",default:!1,text:`import { ChatMistralAI } from "@langchain/mistralai";\n\nconst ${r} = new ChatMistralAI(${u});`,envs:"MISTRAL_API_KEY=your-api-key",dependencies:"@langchain/mistralai"},groq:{value:"groq",label:"Groq",default:!1,text:`import { ChatGroq } from "@langchain/groq";\n\nconst ${r} = new ChatGroq(${g});`,envs:"GROQ_API_KEY=your-api-key",dependencies:"@langchain/groq"},vertex:{value:"vertex",label:"VertexAI",default:!1,text:`import { ChatVertexAI } from "@langchain/google-vertexai";\n\nconst ${r} = new ChatVertexAI(${f});`,envs:"GOOGLE_APPLICATION_CREDENTIALS=credentials.json",dependencies:"@langchain/google-vertexai"}},v=(e.onlyWso?d:x).map((e=>j[e]));return(0,l.jsxs)("div",{children:[(0,l.jsx)("h3",{children:"\uc0ac\uc6a9\ud560 \ucc44\ud305 \ubaa8\ub378 \uc120\ud0dd:"}),(0,l.jsx)(a.A,{groupId:"modelTabs",children:v.map((e=>(0,l.jsxs)(s.A,{value:e.value,label:e.label,children:[(0,l.jsx)("h4",{children:"\uc758\uc874\uc131 \ucd94\uac00"}),(0,l.jsx)(c,{children:[e.dependencies,t].join(" ")}),(0,l.jsx)("h4",{children:"\ud658\uacbd\ubcc0\uc218 \ucd94\uac00"}),(0,l.jsx)(i.A,{language:"bash",children:e.envs}),(0,l.jsx)("h4",{children:"\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ud654"}),(0,l.jsx)(i.A,{language:"typescript",children:e.text})]},e.value)))})]})}},27846:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var a=t(11470),s=t(19365),i=t(21432),r=t(74848);function o(e){let{children:n}=e;return(0,r.jsxs)(a.A,{groupId:"npm2yarn",children:[(0,r.jsx)(s.A,{value:"npm",label:"npm",children:(0,r.jsxs)(i.A,{language:"bash",children:["npm i ",n]})}),(0,r.jsx)(s.A,{value:"yarn",label:"yarn",default:!0,children:(0,r.jsxs)(i.A,{language:"bash",children:["yarn add ",n]})}),(0,r.jsx)(s.A,{value:"pnpm",label:"pnpm",children:(0,r.jsxs)(i.A,{language:"bash",children:["pnpm add ",n]})})]})}}}]);