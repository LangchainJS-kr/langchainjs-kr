(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8872],{15700:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>p,default:()=>I,frontMatter:()=>x,metadata:()=>u,toc:()=>v});var t=o(74848),r=o(28453),s=o(64428),i=o(78847),a=o(83586),c=o.n(a),d=o(4623),l=o.n(d),m=o(60545),h=o.n(m);const x={},p="Momento Vector Index (MVI)",u={id:"integrations/vectorstores/momento_vector_index",title:"Momento Vector Index (MVI)",description:"MVI: the most productive, easiest to use, serverless vector index for your data. To get started with MVI, simply sign up for an account. There's no need to handle infrastructure, manage servers, or be concerned about scaling. MVI is a service that scales automatically to meet your needs. Whether in Node.js, browser, or edge, Momento has you covered.",source:"@site/docs/integrations/vectorstores/momento_vector_index.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/momento_vector_index",permalink:"/docs/integrations/vectorstores/momento_vector_index",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/momento_vector_index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Milvus",permalink:"/docs/integrations/vectorstores/milvus"},next:{title:"MyScale",permalink:"/docs/integrations/vectorstores/myscale"}},g={},v=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},...i.toc,{value:"Index documents using <code>fromTexts</code> and search",id:"index-documents-using-fromtexts-and-search",level:3},{value:"Index documents using <code>fromDocuments</code> and search",id:"index-documents-using-fromdocuments-and-search",level:3},{value:"Search from an existing collection",id:"search-from-an-existing-collection",level:3}];function f(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"momento-vector-index-mvi",children:"Momento Vector Index (MVI)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://gomomento.com",children:"MVI"}),": the most productive, easiest to use, serverless vector index for your data. To get started with MVI, simply sign up for an account. There's no need to handle infrastructure, manage servers, or be concerned about scaling. MVI is a service that scales automatically to meet your needs. Whether in Node.js, browser, or edge, Momento has you covered."]}),"\n",(0,t.jsxs)(n.p,{children:["To sign up and access MVI, visit the ",(0,t.jsx)(n.a,{href:"https://console.gomomento.com",children:"Momento Console"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Sign up for an API key in the ",(0,t.jsx)(n.a,{href:"https://console.gomomento.com/",children:"Momento Console"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install the SDK for your environment."}),"\n",(0,t.jsxs)(n.p,{children:["2.1. For ",(0,t.jsx)(n.strong,{children:"Node.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @gomomento/sdk\n"})}),"\n",(0,t.jsxs)(n.p,{children:["2.2. For ",(0,t.jsx)(n.strong,{children:"browser or edge environments"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @gomomento/sdk-web\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Setup Env variables for Momento before running the code"}),"\n",(0,t.jsx)(n.p,{children:"3.1 OpenAI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE\n"})}),"\n",(0,t.jsx)(n.p,{children:"3.2 Momento"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export MOMENTO_API_KEY=YOUR_MOMENTO_API_KEY_HERE # https://console.gomomento.com\n"})}),"\n"]}),"\n"]}),"\n","\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,t.jsx)(i.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"index-documents-using-fromtexts-and-search",children:["Index documents using ",(0,t.jsx)(n.code,{children:"fromTexts"})," and search"]}),"\n",(0,t.jsxs)(n.p,{children:["This example demonstrates using the ",(0,t.jsx)(n.code,{children:"fromTexts"})," method to instantiate the vector store and index documents.\nIf the index does not exist, then it will be created. If the index already exists, then the documents will be\nadded to the existing index."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ids"})," are optional; if you omit them, then Momento will generate UUIDs for you."]}),"\n","\n",(0,t.jsx)(s.A,{language:"typescript",children:c()}),"\n",(0,t.jsxs)(n.h3,{id:"index-documents-using-fromdocuments-and-search",children:["Index documents using ",(0,t.jsx)(n.code,{children:"fromDocuments"})," and search"]}),"\n",(0,t.jsxs)(n.p,{children:["Similar to the above, this example demonstrates using the ",(0,t.jsx)(n.code,{children:"fromDocuments"})," method to instantiate the vector store and index documents.\nIf the index does not exist, then it will be created. If the index already exists, then the documents will be\nadded to the existing index."]}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.code,{children:"fromDocuments"})," allows you to seamlessly chain the various document loaders with indexing."]}),"\n","\n",(0,t.jsx)(s.A,{language:"typescript",children:l()}),"\n",(0,t.jsx)(n.h3,{id:"search-from-an-existing-collection",children:"Search from an existing collection"}),"\n","\n",(0,t.jsx)(s.A,{language:"typescript",children:h()})]})}function I(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},4623:e=>{e.exports={content:'import { MomentoVectorIndex } from "@langchain/community/vectorstores/momento_vector_index";\n// For browser/edge, adjust this to import from "@gomomento/sdk-web";\nimport {\n  PreviewVectorIndexClient,\n  VectorIndexConfigurations,\n  CredentialProvider,\n} from "@gomomento/sdk";\nimport { OpenAIEmbeddings } from "@langchain/openai";\nimport { TextLoader } from "langchain/document_loaders/fs/text";\nimport { sleep } from "langchain/util/time";\n\n// Create docs with a loader\nconst loader = new TextLoader("src/document_loaders/example_data/example.txt");\nconst docs = await loader.load();\n\nconst vectorStore = await MomentoVectorIndex.fromDocuments(\n  docs,\n  new OpenAIEmbeddings(),\n  {\n    client: new PreviewVectorIndexClient({\n      configuration: VectorIndexConfigurations.Laptop.latest(),\n      credentialProvider: CredentialProvider.fromEnvironmentVariable({\n        environmentVariableName: "MOMENTO_API_KEY",\n      }),\n    }),\n    indexName: "langchain-example-index",\n  }\n);\n\n// because indexing is async, wait for it to finish to search directly after\nawait sleep();\n\n// Search for the most similar document\nconst response = await vectorStore.similaritySearch("hello", 1);\n\nconsole.log(response);\n/*\n[\n  Document {\n    pageContent: \'Foo\\nBar\\nBaz\\n\\n\',\n    metadata: { source: \'src/document_loaders/example_data/example.txt\' }\n  }\n]\n*/\n',imports:[{local:"MomentoVectorIndex",imported:"MomentoVectorIndex",source:"@langchain/community/vectorstores/momento_vector_index"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"TextLoader",imported:"TextLoader",source:"langchain/document_loaders/fs/text"},{local:"sleep",imported:"sleep",source:"langchain/util/time"}]}},60545:e=>{e.exports={content:'import { MomentoVectorIndex } from "@langchain/community/vectorstores/momento_vector_index";\n// For browser/edge, adjust this to import from "@gomomento/sdk-web";\nimport {\n  PreviewVectorIndexClient,\n  VectorIndexConfigurations,\n  CredentialProvider,\n} from "@gomomento/sdk";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\nconst vectorStore = new MomentoVectorIndex(new OpenAIEmbeddings(), {\n  client: new PreviewVectorIndexClient({\n    configuration: VectorIndexConfigurations.Laptop.latest(),\n    credentialProvider: CredentialProvider.fromEnvironmentVariable({\n      environmentVariableName: "MOMENTO_API_KEY",\n    }),\n  }),\n  indexName: "langchain-example-index",\n});\n\nconst response = await vectorStore.similaritySearch("hello", 1);\n\nconsole.log(response);\n/*\n[\n  Document {\n    pageContent: \'Foo\\nBar\\nBaz\\n\\n\',\n    metadata: { source: \'src/document_loaders/example_data/example.txt\' }\n  }\n]\n*/\n',imports:[{local:"MomentoVectorIndex",imported:"MomentoVectorIndex",source:"@langchain/community/vectorstores/momento_vector_index"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"}]}},83586:e=>{e.exports={content:'import { MomentoVectorIndex } from "@langchain/community/vectorstores/momento_vector_index";\n// For browser/edge, adjust this to import from "@gomomento/sdk-web";\nimport {\n  PreviewVectorIndexClient,\n  VectorIndexConfigurations,\n  CredentialProvider,\n} from "@gomomento/sdk";\nimport { OpenAIEmbeddings } from "@langchain/openai";\nimport { sleep } from "langchain/util/time";\n\nconst vectorStore = await MomentoVectorIndex.fromTexts(\n  ["hello world", "goodbye world", "salutations world", "farewell world"],\n  {},\n  new OpenAIEmbeddings(),\n  {\n    client: new PreviewVectorIndexClient({\n      configuration: VectorIndexConfigurations.Laptop.latest(),\n      credentialProvider: CredentialProvider.fromEnvironmentVariable({\n        environmentVariableName: "MOMENTO_API_KEY",\n      }),\n    }),\n    indexName: "langchain-example-index",\n  },\n  { ids: ["1", "2", "3", "4"] }\n);\n\n// because indexing is async, wait for it to finish to search directly after\nawait sleep();\n\nconst response = await vectorStore.similaritySearch("hello", 2);\n\nconsole.log(response);\n\n/*\n[\n  Document { pageContent: \'hello world\', metadata: {} },\n  Document { pageContent: \'salutations world\', metadata: {} }\n]\n*/\n',imports:[{local:"MomentoVectorIndex",imported:"MomentoVectorIndex",source:"@langchain/community/vectorstores/momento_vector_index"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"sleep",imported:"sleep",source:"langchain/util/time"}]}}}]);