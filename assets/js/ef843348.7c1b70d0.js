"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9824],{49233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(74848),a=t(28453),s=t(27846);const o={sidebar_class_name:"hidden",keywords:["self-query"],title:"How to construct filters"},i=void 0,l={id:"how_to/query_constructing_filters",title:"How to construct filters",description:"This guide assumes familiarity with the following:",source:"@site/docs/how_to/query_constructing_filters.mdx",sourceDirName:"how_to",slug:"/how_to/query_constructing_filters",permalink:"/docs/how_to/query_constructing_filters",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/query_constructing_filters.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden",keywords:["self-query"],title:"How to construct filters"},sidebar:"tutorialSidebar",previous:{title:"How to stream from a question-answering chain",permalink:"/docs/how_to/qa_streaming"},next:{title:"How to add examples to the prompt",permalink:"/docs/how_to/query_few_shot"}},u={},c=[{value:"Setup",id:"setup",level:2},{value:"Install dependencies",id:"install-dependencies",level:3},{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.admonition,{title:"Prerequisites",type:"info",children:[(0,r.jsx)(n.p,{children:"This guide assumes familiarity with the following:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../../docs/tutorials/query_analysis",children:"Query analysis"})}),"\n"]})]}),"\n",(0,r.jsx)(n.p,{children:"We may want to do query analysis to extract filters to pass into\nretrievers. One way we ask the LLM to represent these filters is as a\nZod schema. There is then the issue of converting that Zod schema into a\nfilter that can be passed into a retriever."}),"\n",(0,r.jsx)(n.p,{children:"This can be done manually, but LangChain also provides some\n\u201cTranslators\u201d that are able to translate from a common syntax into\nfilters specific to each retriever. Here, we will cover how to use those\ntranslators."}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(n.h3,{id:"install-dependencies",children:"Install dependencies"}),"\n","\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(n.p,{children:"zod"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, ",(0,r.jsx)(n.code,{children:"year"})," and ",(0,r.jsx)(n.code,{children:"author"})," are both attributes to filter on."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { z } from "zod";\n\nconst searchSchema = z.object({\n  query: z.string(),\n  startYear: z.number().optional(),\n  author: z.string().optional(),\n});\n\nconst searchQuery: z.infer<typeof searchSchema> = {\n  query: "RAG",\n  startYear: 2022,\n  author: "LangChain",\n};\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Comparison, Comparator } from "langchain/chains/query_constructor/ir";\n\nfunction constructComparisons(\n  query: z.infer<typeof searchSchema>\n): Comparison[] {\n  const comparisons: Comparison[] = [];\n  if (query.startYear !== undefined) {\n    comparisons.push(\n      new Comparison("gt" as Comparator, "start_year", query.startYear)\n    );\n  }\n  if (query.author !== undefined) {\n    comparisons.push(\n      new Comparison("eq" as Comparator, "author", query.author)\n    );\n  }\n  return comparisons;\n}\n\nconst comparisons = constructComparisons(searchQuery);\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Operation, Operator } from "langchain/chains/query_constructor/ir";\n\nconst _filter = new Operation("and" as Operator, comparisons);\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { ChromaTranslator } from "langchain/retrievers/self_query/chroma";\n\nnew ChromaTranslator().visitOperation(_filter);\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "$and": [\n    { start_year: { "$gt": 2022 } },\n    { author: { "$eq": "LangChain" } }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,r.jsx)(n.p,{children:"You\u2019ve now learned how to create a specific filter from an arbitrary\nquery."}),"\n",(0,r.jsxs)(n.p,{children:["Next, check out some of the other query analysis guides in this section,\nlike ",(0,r.jsx)(n.a,{href:"../../docs/how_to/query_no_queries",children:"how to use few-shotting\xa0to improve\nperformance"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var s=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>j});var r=t(96540),a=t(34164),s=t(23104),o=t(56347),i=t(205),l=t(57485),u=t(31682),c=t(89466);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=h(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[u,d]=m({queryString:t,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),y=(()=>{const e=u??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{y&&l(y)}),[y]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function v(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=i[t].value;a!==r&&(u(n),o(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:d,onClick:c,...s,className:(0,a.A)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,a.A)("tabs-container",y.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(x,{...n,...e})]})}function j(e){const n=(0,b.A)();return(0,g.jsx)(w,{...e,children:d(e.children)},String(n))}},27846:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var r=t(11470),a=t(19365),s=t(21432),o=t(74848);function i(e){let{children:n}=e;return(0,o.jsxs)(r.A,{groupId:"npm2yarn",children:[(0,o.jsx)(a.A,{value:"npm",label:"npm",children:(0,o.jsxs)(s.A,{language:"bash",children:["npm i ",n]})}),(0,o.jsx)(a.A,{value:"yarn",label:"yarn",default:!0,children:(0,o.jsxs)(s.A,{language:"bash",children:["yarn add ",n]})}),(0,o.jsx)(a.A,{value:"pnpm",label:"pnpm",children:(0,o.jsxs)(s.A,{language:"bash",children:["pnpm add ",n]})})]})}}}]);