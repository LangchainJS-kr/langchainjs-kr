(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2804],{46766:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>u,default:()=>U,frontMatter:()=>m,metadata:()=>g,toc:()=>x});var s=t(74848),o=t(28453),a=t(64428),r=t(88040),i=t.n(r),c=t(98269),d=t.n(c),l=t(79917),h=t.n(l),p=t(78847);const m={},u="Upstash Vector",g={id:"integrations/vectorstores/upstash",title:"Upstash Vector",description:"Upstash Vector is a REST based serverless vector database, designed for working with vector embeddings.",source:"@site/docs/integrations/vectorstores/upstash.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/upstash",permalink:"/docs/integrations/vectorstores/upstash",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/upstash.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Typesense",permalink:"/docs/integrations/vectorstores/typesense"},next:{title:"USearch",permalink:"/docs/integrations/vectorstores/usearch"}},v={},x=[{value:"Setup",id:"setup",level:2},...p.toc,{value:"Create Upstash Vector Client",id:"create-upstash-vector-client",level:2},{value:"Index and Query Documents",id:"index-and-query-documents",level:2},{value:"Delete Documents",id:"delete-documents",level:2}];function b(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"upstash-vector",children:"Upstash Vector"}),"\n",(0,s.jsx)(n.p,{children:"Upstash Vector is a REST based serverless vector database, designed for working with vector embeddings."}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create Upstash Vector Index"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can create an index from ",(0,s.jsx)(n.a,{href:"https://console.upstash.com/vector",children:"Upstash Console"}),". For further reference, see ",(0,s.jsx)(n.a,{href:"https://upstash.com/docs/vector/overall/getstarted",children:"docs"}),"."]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Install Upstash Vector SDK."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install -S @upstash/vector\n"})}),"\n",(0,s.jsx)(n.p,{children:"We use OpenAI for the embeddings of the below examples.\nHowever, you can also create the embeddings using the model of your choice, that is available in the LangChain."}),"\n",(0,s.jsx)(p.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,s.jsx)(n.h2,{id:"create-upstash-vector-client",children:"Create Upstash Vector Client"}),"\n",(0,s.jsxs)(n.p,{children:["There are two ways to create the client. You can either pass the credentials as string manually from the ",(0,s.jsx)(n.code,{children:".env"})," file (or as string variables), or you can retrieve the credentials from the environment automatically."]}),"\n",(0,s.jsx)(a.A,{language:"typescript",children:i()}),"\n",(0,s.jsx)(n.h2,{id:"index-and-query-documents",children:"Index and Query Documents"}),"\n",(0,s.jsxs)(n.p,{children:["You can index the LangChain documents with any model of your choice, and perform a search over these documents. It's possible to apply metadata filtering to the search results. See ",(0,s.jsx)(n.a,{href:"https://upstash.com/docs/vector/features/filtering",children:"the related docs here"}),"."]}),"\n",(0,s.jsx)(a.A,{language:"typescript",children:d()}),"\n",(0,s.jsx)(n.h2,{id:"delete-documents",children:"Delete Documents"}),"\n",(0,s.jsx)(n.p,{children:"You can also delete the documents you've indexed previously."}),"\n",(0,s.jsx)(a.A,{language:"typescript",children:h()})]})}function U(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}},88040:e=>{e.exports={content:'import { Index } from "@upstash/vector";\nimport { OpenAIEmbeddings } from "@langchain/openai";\nimport { UpstashVectorStore } from "@langchain/community/vectorstores/upstash";\n\nconst embeddings = new OpenAIEmbeddings({});\n\n// Creating the index with the provided credentials.\nconst indexWithCredentials = new Index({\n  url: process.env.UPSTASH_VECTOR_REST_URL as string,\n  token: process.env.UPSTASH_VECTOR_REST_TOKEN as string,\n});\n\nconst storeWithCredentials = new UpstashVectorStore(embeddings, {\n  index: indexWithCredentials,\n});\n\n// Creating the index from the environment variables automatically.\nconst indexFromEnv = new Index();\n\nconst storeFromEnv = new UpstashVectorStore(embeddings, {\n  index: indexFromEnv,\n});\n',imports:[{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"UpstashVectorStore",imported:"UpstashVectorStore",source:"@langchain/community/vectorstores/upstash"}]}},79917:e=>{e.exports={content:'import { Index } from "@upstash/vector";\nimport { OpenAIEmbeddings } from "@langchain/openai";\nimport { UpstashVectorStore } from "@langchain/community/vectorstores/upstash";\n\nconst index = new Index({\n  url: process.env.UPSTASH_VECTOR_REST_URL as string,\n  token: process.env.UPSTASH_VECTOR_REST_TOKEN as string,\n});\n\nconst embeddings = new OpenAIEmbeddings({});\n\nconst UpstashVector = new UpstashVectorStore(embeddings, { index });\n\n// Creating the docs to be indexed.\nconst createdAt = new Date().getTime();\n\nconst IDs = await UpstashVector.addDocuments([\n  { pageContent: "hello", metadata: { a: createdAt + 1 } },\n  { pageContent: "car", metadata: { a: createdAt } },\n  { pageContent: "adjective", metadata: { a: createdAt } },\n  { pageContent: "hi", metadata: { a: createdAt } },\n]);\n\n// Waiting vectors to be indexed in the vector store.\n// eslint-disable-next-line no-promise-executor-return\nawait new Promise((resolve) => setTimeout(resolve, 1000));\n\nawait UpstashVector.delete({ ids: [IDs[0], IDs[2], IDs[3]] });\n',imports:[{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"UpstashVectorStore",imported:"UpstashVectorStore",source:"@langchain/community/vectorstores/upstash"}]}},98269:e=>{e.exports={content:'import { Index } from "@upstash/vector";\nimport { OpenAIEmbeddings } from "@langchain/openai";\nimport { Document } from "@langchain/core/documents";\nimport { UpstashVectorStore } from "@langchain/community/vectorstores/upstash";\n\nconst index = new Index({\n  url: process.env.UPSTASH_VECTOR_REST_URL as string,\n  token: process.env.UPSTASH_VECTOR_REST_TOKEN as string,\n});\n\nconst embeddings = new OpenAIEmbeddings({});\n\nconst UpstashVector = new UpstashVectorStore(embeddings, { index });\n\n// Creating the docs to be indexed.\nconst id = new Date().getTime();\nconst documents = [\n  new Document({\n    metadata: { name: id },\n    pageContent: "Hello there!",\n  }),\n  new Document({\n    metadata: { name: id },\n    pageContent: "What are you building?",\n  }),\n  new Document({\n    metadata: { time: id },\n    pageContent: "Upstash Vector is great for building AI applications.",\n  }),\n  new Document({\n    metadata: { time: id },\n    pageContent: "To be, or not to be, that is the question.",\n  }),\n];\n\n// Creating embeddings from the provided documents, and adding them to Upstash database.\nawait UpstashVector.addDocuments(documents);\n\n// Waiting vectors to be indexed in the vector store.\n// eslint-disable-next-line no-promise-executor-return\nawait new Promise((resolve) => setTimeout(resolve, 1000));\n\nconst queryResult = await UpstashVector.similaritySearchWithScore(\n  "Vector database",\n  2\n);\n\nconsole.log(queryResult);\n/**\n[\n  [\n    Document {\n      pageContent: \'Upstash Vector is great for building AI applications.\',\n      metadata: [Object]\n    },\n    0.9016147\n  ],\n  [\n    Document {\n      pageContent: \'What are you building?\',\n      metadata: [Object]\n    },\n    0.8613077\n  ]\n]\n */\n',imports:[{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"Document",imported:"Document",source:"@langchain/core/documents"},{local:"UpstashVectorStore",imported:"UpstashVectorStore",source:"@langchain/community/vectorstores/upstash"}]}}}]);