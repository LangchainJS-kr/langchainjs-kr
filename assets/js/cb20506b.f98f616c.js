(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5809,65],{78293:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>g,default:()=>f,frontMatter:()=>p,metadata:()=>u,toc:()=>m});var a=t(74848),o=t(28453),s=t(64428),r=t(78847),i=t(94780),c=t.n(i),l=t(9211),h=t.n(l);const p={hide_table_of_contents:!0},g="Exa Search",u={id:"integrations/tools/exa_search",title:"Exa Search",description:"Exa (formerly Metaphor Search) is a search engine fully designed for use by LLMs. Search for documents on the internet using natural language queries, then retrieve cleaned HTML content from desired documents.",source:"@site/docs/integrations/tools/exa_search.mdx",sourceDirName:"integrations/tools",slug:"/integrations/tools/exa_search",permalink:"/docs/integrations/tools/exa_search",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/tools/exa_search.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"DuckDuckGoSearch",permalink:"/docs/integrations/tools/duckduckgo_search"},next:{title:"Gmail Tool",permalink:"/docs/integrations/tools/gmail"}},d={},m=[{value:"Usage",id:"usage",level:2},...r.toc,{value:"Usage",id:"usage-1",level:2},{value:"Using the Exa SDK as LangChain Agent Tools",id:"using-the-exa-sdk-as-langchain-agent-tools",level:2}];function x(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"exa-search",children:"Exa Search"}),"\n",(0,a.jsx)(n.p,{children:"Exa (formerly Metaphor Search) is a search engine fully designed for use by LLMs. Search for documents on the internet using natural language queries, then retrieve cleaned HTML content from desired documents."}),"\n",(0,a.jsxs)(n.p,{children:["Unlike keyword-based search (Google), Exa's neural search capabilities allow it to semantically understand queries and return relevant documents.\nFor example, we could search ",(0,a.jsx)(n.code,{children:'"fascinating article about cats"'})," and compare the search results from Google and Exa.\nGoogle gives us SEO-optimized listicles based on the keyword \u201cfascinating\u201d. Exa just works."]}),"\n",(0,a.jsx)(n.p,{children:"This notebook goes over how to use Exa Search with LangChain."}),"\n",(0,a.jsxs)(n.p,{children:["First, get an Exa API key and add it as an environment variable.\nGet 1000 free searches/month by ",(0,a.jsx)(n.a,{href:"https://dashboard.exa.ai/login",children:"signing up here."})]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.p,{children:"First, install the LangChain integration package for Exa:"}),"\n","\n",(0,a.jsx)(r.default,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/exa @langchain/openai langchain\n"})}),"\n",(0,a.jsx)(n.p,{children:"You'll need to set your API key as an environment variable."}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Exa"})," class defaults to ",(0,a.jsx)(n.code,{children:"EXASEARCH_API_KEY"})," when searching for your API key."]}),"\n",(0,a.jsx)(n.h2,{id:"usage-1",children:"Usage"}),"\n","\n",(0,a.jsx)(s.A,{language:"typescript",children:c()}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["You can see a LangSmith trace for this example ",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/775ea9a8-d54c-405c-9126-a012405d9099/r",children:"here"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"using-the-exa-sdk-as-langchain-agent-tools",children:"Using the Exa SDK as LangChain Agent Tools"}),"\n",(0,a.jsxs)(n.p,{children:["We can create LangChain tools which use the ",(0,a.jsx)(n.a,{href:"/docs/integrations/retrievers/exa",children:(0,a.jsx)(n.code,{children:"ExaRetriever"})})," and the ",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/functions/langchain_tools_retriever.createRetrieverTool.html",children:(0,a.jsx)(n.code,{children:"createRetrieverTool"})}),"\nUsing these tools we can construct a simple search agent that can answer questions about any topic."]}),"\n","\n",(0,a.jsx)(s.A,{language:"typescript",children:h()}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"{\n  input: 'Summarize for me a fascinating article about cats.',\n  output: 'The article discusses the research of biologist Jaroslav Flegr, who has been investigating the effects of a single-celled parasite called Toxoplasma gondii (T. gondii or Toxo), which is excreted by cats in their feces. Flegr began to suspect in the early 1990s that this parasite was subtly manipulating his personality, causing him to behave in strange, often self-destructive ways. He reasoned that if it was affecting him, it was probably doing the same to others.\\n' +\n    '\\n' +\n    \"T. gondii is the microbe that causes toxoplasmosis, a disease that can be transmitted from a pregnant woman to her fetus, potentially resulting in severe brain damage or death. It's also a major threat to people with weakened immunity. However, healthy children and adults usually experience nothing worse than brief flu-like symptoms before quickly fighting off the protozoan, which then lies dormant inside brain cells.\\n\" +\n    '\\n' +\n    \"Flegr's research is unconventional and suggests that these tiny organisms carried by house cats could be creeping into our brains, causing everything from car wrecks to schizophrenia.\\n\" +\n    '\\n' +\n    '(Source: [The Atlantic](https://www.theatlantic.com/magazine/archive/2012/03/how-your-cat-is-making-you-crazy/308873/))'\n}\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["You can see a LangSmith trace for this example ",(0,a.jsx)(n.a,{href:"https://smith.langchain.com/public/d123ba5f-8535-4669-9e43-ac7ab3c6735e/r",children:"here"}),"."]})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}},78847:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=t(74848),o=t(28453);const s={},r=void 0,i={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function h(e){const n={a:"a",admonition:"admonition",p:"p",...(0,o.R)(),...e.components};return(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9211:e=>{e.exports={content:'import {\n  ChatPromptTemplate,\n  MessagesPlaceholder,\n} from "@langchain/core/prompts";\nimport { ChatOpenAI } from "@langchain/openai";\nimport Exa from "exa-js";\nimport { AgentExecutor, createOpenAIFunctionsAgent } from "langchain/agents";\nimport { createRetrieverTool } from "langchain/tools/retriever";\nimport { ExaRetriever } from "@langchain/exa";\n\n// @ts-expect-error Some TS Config\'s will cause this to give a TypeScript error, even though it works.\nconst client: Exa.default = new Exa(process.env.EXASEARCH_API_KEY);\n\nconst exaRetriever = new ExaRetriever({\n  client,\n  searchArgs: {\n    numResults: 2,\n  },\n});\n\n// Convert the ExaRetriever into a tool\nconst searchTool = createRetrieverTool(exaRetriever, {\n  name: "search",\n  description: "Get the contents of a webpage given a string search query.",\n});\n\nconst tools = [searchTool];\nconst llm = new ChatOpenAI({ model: "gpt-4", temperature: 0 });\nconst prompt = ChatPromptTemplate.fromMessages([\n  [\n    "system",\n    `You are a web researcher who answers user questions by looking up information on the internet and retrieving contents of helpful documents. Cite your sources.`,\n  ],\n  ["human", "{input}"],\n  new MessagesPlaceholder("agent_scratchpad"),\n]);\nconst agentExecutor = new AgentExecutor({\n  agent: await createOpenAIFunctionsAgent({\n    llm,\n    tools,\n    prompt,\n  }),\n  tools,\n});\nconsole.log(\n  await agentExecutor.invoke({\n    input: "Summarize for me a fascinating article about cats.",\n  })\n);\n',imports:[{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"},{local:"MessagesPlaceholder",imported:"MessagesPlaceholder",source:"@langchain/core/prompts"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"AgentExecutor",imported:"AgentExecutor",source:"langchain/agents"},{local:"createOpenAIFunctionsAgent",imported:"createOpenAIFunctionsAgent",source:"langchain/agents"},{local:"createRetrieverTool",imported:"createRetrieverTool",source:"langchain/tools/retriever"},{local:"ExaRetriever",imported:"ExaRetriever",source:"@langchain/exa"}]}},94780:e=>{e.exports={content:'import { ExaSearchResults } from "@langchain/exa";\nimport { ChatOpenAI } from "@langchain/openai";\nimport type { ChatPromptTemplate } from "@langchain/core/prompts";\nimport Exa from "exa-js";\nimport { pull } from "langchain/hub";\nimport { AgentExecutor, createOpenAIFunctionsAgent } from "langchain/agents";\n\n// Define the tools the agent will have access to.\nconst tools = [\n  new ExaSearchResults({\n    // @ts-expect-error Some TS Config\'s will cause this to give a TypeScript error, even though it works.\n    client: new Exa(process.env.EXASEARCH_API_KEY),\n  }),\n];\n\n// Get the prompt to use - you can modify this!\n// If you want to see the prompt in full, you can at:\n// https://smith.langchain.com/hub/hwchase17/openai-functions-agent\nconst prompt = await pull<ChatPromptTemplate>(\n  "hwchase17/openai-functions-agent"\n);\n\nconst llm = new ChatOpenAI({\n  model: "gpt-3.5-turbo-1106",\n  temperature: 0,\n});\n\nconst agent = await createOpenAIFunctionsAgent({\n  llm,\n  tools,\n  prompt,\n});\n\nconst agentExecutor = new AgentExecutor({\n  agent,\n  tools,\n});\n\nconst result = await agentExecutor.invoke({\n  input: "what is the weather in wailea?",\n});\n\nconsole.log(result);\n\n/*\n{\n  input: \'what is the weather in wailea?\',\n  output: \'I found a weather forecast for Wailea-Makena on Windfinder.com. You can check the forecast [here](https://www.windfinder.com/forecast/wailea-makena).\'\n}\n*/\n',imports:[{local:"ExaSearchResults",imported:"ExaSearchResults",source:"@langchain/exa"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"},{local:"pull",imported:"pull",source:"langchain/hub"},{local:"AgentExecutor",imported:"AgentExecutor",source:"langchain/agents"},{local:"createOpenAIFunctionsAgent",imported:"createOpenAIFunctionsAgent",source:"langchain/agents"}]}}}]);