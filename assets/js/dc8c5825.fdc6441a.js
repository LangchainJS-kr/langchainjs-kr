(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5767],{30300:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>g,default:()=>b,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var t=o(74848),i=o(28453),a=o(64428),s=o(78847),r=o(41792),d=o.n(r);const l={sidebar_label:"Google PaLM"},g="Google PaLM",m={id:"integrations/text_embedding/google_palm",title:"Google PaLM",description:"This integration does not support embeddings-* model. Check Google AI embeddings.",source:"@site/docs/integrations/text_embedding/google_palm.mdx",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/google_palm",permalink:"/docs/integrations/text_embedding/google_palm",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/text_embedding/google_palm.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Google PaLM"},sidebar:"integrations",previous:{title:"Google AI",permalink:"/docs/integrations/text_embedding/google_generativeai"},next:{title:"Google Vertex AI",permalink:"/docs/integrations/text_embedding/google_vertex_ai"}},c={},p=[...s.toc];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"google-palm",children:"Google PaLM"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This integration does not support ",(0,t.jsx)(n.code,{children:"embeddings-*"})," model. Check ",(0,t.jsx)(n.a,{href:"/docs/integrations/text_embedding/google_generativeai",children:"Google AI"})," embeddings."]})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://developers.generativeai.google/products/palm",children:"Google PaLM API"})," can be integrated by first\ninstalling the required packages:"]}),"\n","\n",(0,t.jsx)(s.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install google-auth-library @google-ai/generativelanguage @langchain/community\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Create an ",(0,t.jsx)(n.strong,{children:"API key"})," from ",(0,t.jsx)(n.a,{href:"https://makersuite.google.com/app/apikey",children:"Google MakerSuite"}),". You can then set\nthe key as ",(0,t.jsx)(n.code,{children:"GOOGLE_PALM_API_KEY"})," environment variable or pass it as ",(0,t.jsx)(n.code,{children:"apiKey"})," parameter while instantiating\nthe model."]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:d()})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},41792:e=>{e.exports={content:'import { GooglePaLMEmbeddings } from "@langchain/community/embeddings/googlepalm";\n\nconst model = new GooglePaLMEmbeddings({\n  apiKey: "<YOUR API KEY>", // or set it in environment variable as `GOOGLE_PALM_API_KEY`\n  model: "models/embedding-gecko-001", // OPTIONAL\n});\n/* Embed queries */\nconst res = await model.embedQuery(\n  "What would be a good company name for a company that makes colorful socks?"\n);\nconsole.log({ res });\n/* Embed documents */\nconst documentRes = await model.embedDocuments(["Hello world", "Bye bye"]);\nconsole.log({ documentRes });\n',imports:[{local:"GooglePaLMEmbeddings",imported:"GooglePaLMEmbeddings",source:"@langchain/community/embeddings/googlepalm"}]}}}]);