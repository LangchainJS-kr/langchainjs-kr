(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4538,65],{73656:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>b,frontMatter:()=>h,metadata:()=>m,toc:()=>w});var o=t(74848),s=t(28453),i=t(64428),r=t(86643),a=t.n(r),l=t(78847),c=t(18237),d=t.n(c);const h={hide_table_of_contents:!0},p="Web Browser Tool",m={id:"integrations/tools/webbrowser",title:"Web Browser Tool",description:"The Webbrowser Tool gives your agent the ability to visit a website and extract information. It is described to the agent as",source:"@site/docs/integrations/tools/webbrowser.mdx",sourceDirName:"integrations/tools",slug:"/integrations/tools/webbrowser",permalink:"/docs/integrations/tools/webbrowser",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/tools/webbrowser.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"Tavily Search",permalink:"/docs/integrations/tools/tavily_search"},next:{title:"Wikipedia tool",permalink:"/docs/integrations/tools/wikipedia"}},u={},w=[{value:"Setup",id:"setup",level:2},{value:"Usage, standalone",id:"usage-standalone",level:2},...l.toc,{value:"Usage, in an Agent",id:"usage-in-an-agent",level:2}];function g(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"web-browser-tool",children:"Web Browser Tool"}),"\n",(0,o.jsx)(n.p,{children:"The Webbrowser Tool gives your agent the ability to visit a website and extract information. It is described to the agent as"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'useful for when you need to find something on or summarize a webpage. input should be a comma separated list of "valid URL including protocol","what you want to find on the page or empty string for a summary".\n'})}),"\n",(0,o.jsx)(n.p,{children:"It exposes two modes of operation:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"when called by the Agent with only a URL it produces a summary of the website contents"}),"\n",(0,o.jsx)(n.li,{children:"when called by the Agent with a URL and a description of what to find it will instead use an in-memory Vector Store to find the most relevant snippets and summarise those"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(n.p,{children:"To use the Webbrowser Tool you need to install the dependencies:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install cheerio axios\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage-standalone",children:"Usage, standalone"}),"\n","\n","\n",(0,o.jsx)(l.default,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai\n"})}),"\n",(0,o.jsx)(i.A,{language:"typescript",children:a()}),"\n",(0,o.jsx)(n.h2,{id:"usage-in-an-agent",children:"Usage, in an Agent"}),"\n","\n",(0,o.jsx)(i.A,{language:"typescript",children:d()})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},78847:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(74848),s=t(28453);const i={},r=void 0,a={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},18237:e=>{e.exports={content:'import { OpenAI, OpenAIEmbeddings } from "@langchain/openai";\nimport { initializeAgentExecutorWithOptions } from "langchain/agents";\nimport { Calculator } from "@langchain/community/tools/calculator";\nimport { WebBrowser } from "langchain/tools/webbrowser";\nimport { SerpAPI } from "@langchain/community/tools/serpapi";\n\nexport const run = async () => {\n  const model = new OpenAI({ temperature: 0 });\n  const embeddings = new OpenAIEmbeddings();\n  const tools = [\n    new SerpAPI(process.env.SERPAPI_API_KEY, {\n      location: "Austin,Texas,United States",\n      hl: "en",\n      gl: "us",\n    }),\n    new Calculator(),\n    new WebBrowser({ model, embeddings }),\n  ];\n\n  const executor = await initializeAgentExecutorWithOptions(tools, model, {\n    agentType: "zero-shot-react-description",\n    verbose: true,\n  });\n  console.log("Loaded agent.");\n\n  const input = `What is the word of the day on merriam webster. What is the top result on google for that word`;\n\n  console.log(`Executing with input "${input}"...`);\n\n  const result = await executor.invoke({ input });\n  /*\n  Entering new agent_executor chain...\n  I need to find the word of the day on Merriam Webster and then search for it on Google\n  Action: web-browser\n  Action Input: "https://www.merriam-webster.com/word-of-the-day", ""\n\n\n  Summary: Merriam-Webster is a website that provides users with a variety of resources, including a dictionary, thesaurus, word finder, word of the day, games and quizzes, and more. The website also allows users to log in and save words, view recents, and access their account settings. The Word of the Day for April 14, 2023 is "lackadaisical", which means lacking in life, spirit, or zest. The website also provides quizzes and games to help users build their vocabulary.\n\n  Relevant Links: \n  - [Test Your Vocabulary](https://www.merriam-webster.com/games)\n  - [Thesaurus](https://www.merriam-webster.com/thesaurus)\n  - [Word Finder](https://www.merriam-webster.com/wordfinder)\n  - [Word of the Day](https://www.merriam-webster.com/word-of-the-day)\n  - [Shop](https://shop.merriam-webster.com/?utm_source=mwsite&utm_medium=nav&utm_content=\n  I now need to search for the word of the day on Google\n  Action: search\n  Action Input: "lackadaisical"\n  lackadaisical implies a carefree indifference marked by half-hearted efforts. lackadaisical college seniors pretending to study. listless suggests a lack of ...\n  Finished chain.\n  */\n\n  console.log(`Got output ${JSON.stringify(result, null, 2)}`);\n  /*\n  Got output {\n    "output": "The word of the day on Merriam Webster is \\"lackadaisical\\", which implies a carefree indifference marked by half-hearted efforts.",\n    "intermediateSteps": [\n      {\n        "action": {\n          "tool": "web-browser",\n          "toolInput": "https://www.merriam-webster.com/word-of-the-day\\", ",\n          "log": " I need to find the word of the day on Merriam Webster and then search for it on Google\\nAction: web-browser\\nAction Input: \\"https://www.merriam-webster.com/word-of-the-day\\", \\"\\""\n        },\n        "observation": "\\n\\nSummary: Merriam-Webster is a website that provides users with a variety of resources, including a dictionary, thesaurus, word finder, word of the day, games and quizzes, and more. The website also allows users to log in and save words, view recents, and access their account settings. The Word of the Day for April 14, 2023 is \\"lackadaisical\\", which means lacking in life, spirit, or zest. The website also provides quizzes and games to help users build their vocabulary.\\n\\nRelevant Links: \\n- [Test Your Vocabulary](https://www.merriam-webster.com/games)\\n- [Thesaurus](https://www.merriam-webster.com/thesaurus)\\n- [Word Finder](https://www.merriam-webster.com/wordfinder)\\n- [Word of the Day](https://www.merriam-webster.com/word-of-the-day)\\n- [Shop](https://shop.merriam-webster.com/?utm_source=mwsite&utm_medium=nav&utm_content="\n      },\n      {\n        "action": {\n          "tool": "search",\n          "toolInput": "lackadaisical",\n          "log": " I now need to search for the word of the day on Google\\nAction: search\\nAction Input: \\"lackadaisical\\""\n        },\n        "observation": "lackadaisical implies a carefree indifference marked by half-hearted efforts. lackadaisical college seniors pretending to study. listless suggests a lack of ..."\n      }\n    ]\n  }\n  */\n};\n',imports:[{local:"OpenAI",imported:"OpenAI",source:"@langchain/openai"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"initializeAgentExecutorWithOptions",imported:"initializeAgentExecutorWithOptions",source:"langchain/agents"},{local:"Calculator",imported:"Calculator",source:"@langchain/community/tools/calculator"},{local:"WebBrowser",imported:"WebBrowser",source:"langchain/tools/webbrowser"},{local:"SerpAPI",imported:"SerpAPI",source:"@langchain/community/tools/serpapi"}]}},86643:e=>{e.exports={content:'import { WebBrowser } from "langchain/tools/webbrowser";\nimport { ChatOpenAI, OpenAIEmbeddings } from "@langchain/openai";\n\nexport async function run() {\n  // this will not work with Azure OpenAI API yet\n  // Azure OpenAI API does not support embedding with multiple inputs yet\n  // Too many inputs. The max number of inputs is 1.  We hope to increase the number of inputs per request soon. Please contact us through an Azure support request at: https://go.microsoft.com/fwlink/?linkid=2213926 for further questions.\n  // So we will fail fast, when Azure OpenAI API is used\n  if (process.env.AZURE_OPENAI_API_KEY) {\n    throw new Error(\n      "Azure OpenAI API does not support embedding with multiple inputs yet"\n    );\n  }\n\n  const model = new ChatOpenAI({ temperature: 0 });\n  const embeddings = new OpenAIEmbeddings(\n    process.env.AZURE_OPENAI_API_KEY\n      ? { azureOpenAIApiDeploymentName: "Embeddings2" }\n      : {}\n  );\n\n  const browser = new WebBrowser({ model, embeddings });\n\n  const result = await browser.invoke(\n    `"https://www.themarginalian.org/2015/04/09/find-your-bliss-joseph-campbell-power-of-myth","who is joseph campbell"`\n  );\n\n  console.log(result);\n  /*\n  Joseph Campbell was a mythologist and writer who discussed spirituality, psychological archetypes, cultural myths, and the mythology of self. He sat down with Bill Moyers for a lengthy conversation at George Lucas\u2019s Skywalker Ranch in California, which continued the following year at the American Museum of Natural History in New York. The resulting 24 hours of raw footage were edited down to six one-hour episodes and broadcast on PBS in 1988, shortly after Campbell\u2019s death, in what became one of the most popular in the history of public television.\n\n  Relevant Links:\n  - [The Holstee Manifesto](http://holstee.com/manifesto-bp)\n  - [The Silent Music of the Mind: Remembering Oliver Sacks](https://www.themarginalian.org/2015/08/31/remembering-oliver-sacks)\n  - [Joseph Campbell series](http://billmoyers.com/spotlight/download-joseph-campbell-and-the-power-of-myth-audio/)\n  - [Bill Moyers](https://www.themarginalian.org/tag/bill-moyers/)\n  - [books](https://www.themarginalian.org/tag/books/)\n  */\n}\n',imports:[{local:"WebBrowser",imported:"WebBrowser",source:"langchain/tools/webbrowser"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"}]}}}]);