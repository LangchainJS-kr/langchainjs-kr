"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8728],{15750:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=o(74848),s=o(28453);const a={sidebar_position:1,hide_table_of_contents:!0},r="Folders with multiple files",i={id:"integrations/document_loaders/file_loaders/directory",title:"Folders with multiple files",description:"This example goes over how to load data from folders with multiple files. The second argument is a map of file extensions to loader factories. Each file will be passed to the matching loader, and the resulting documents will be concatenated together.",source:"@site/docs/integrations/document_loaders/file_loaders/directory.mdx",sourceDirName:"integrations/document_loaders/file_loaders",slug:"/integrations/document_loaders/file_loaders/directory",permalink:"/docs/integrations/document_loaders/file_loaders/directory",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/file_loaders/directory.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"File Loaders",permalink:"/docs/integrations/document_loaders/file_loaders/"},next:{title:"ChatGPT files",permalink:"/docs/integrations/document_loaders/file_loaders/chatgpt"}},l={},d=[];function c(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"folders-with-multiple-files",children:"Folders with multiple files"}),"\n",(0,n.jsx)(t.p,{children:"This example goes over how to load data from folders with multiple files. The second argument is a map of file extensions to loader factories. Each file will be passed to the matching loader, and the resulting documents will be concatenated together."}),"\n",(0,n.jsx)(t.p,{children:"Example folder:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-text",children:"src/document_loaders/example_data/example/\n\u251c\u2500\u2500 example.json\n\u251c\u2500\u2500 example.jsonl\n\u251c\u2500\u2500 example.txt\n\u2514\u2500\u2500 example.csv\n"})}),"\n",(0,n.jsx)(t.p,{children:"Example code:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import { DirectoryLoader } from "langchain/document_loaders/fs/directory";\nimport {\n  JSONLoader,\n  JSONLinesLoader,\n} from "langchain/document_loaders/fs/json";\nimport { TextLoader } from "langchain/document_loaders/fs/text";\nimport { CSVLoader } from "langchain/document_loaders/fs/csv";\n\nconst loader = new DirectoryLoader(\n  "src/document_loaders/example_data/example",\n  {\n    ".json": (path) => new JSONLoader(path, "/texts"),\n    ".jsonl": (path) => new JSONLinesLoader(path, "/html"),\n    ".txt": (path) => new TextLoader(path),\n    ".csv": (path) => new CSVLoader(path, "text"),\n  }\n);\nconst docs = await loader.load();\nconsole.log({ docs });\n'})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);