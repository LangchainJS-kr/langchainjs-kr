(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[129,65],{27334:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>m,default:()=>x,frontMatter:()=>u,metadata:()=>p,toc:()=>g});var o=t(74848),s=t(28453),i=t(64428),r=t(78847),l=t(99912),a=t.n(l),c=t(48466),d=t.n(c);const u={sidebar_class_name:"node-only"},m="ClickHouse",p={id:"integrations/vectorstores/clickhouse",title:"ClickHouse",description:"Only available on Node.js.",source:"@site/docs/integrations/vectorstores/clickhouse.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/clickhouse",permalink:"/docs/integrations/vectorstores/clickhouse",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/clickhouse.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"node-only"},sidebar:"integrations",previous:{title:"Chroma",permalink:"/docs/integrations/vectorstores/chroma"},next:{title:"CloseVector",permalink:"/docs/integrations/vectorstores/closevector"}},h={},g=[{value:"Setup",id:"setup",level:2},...r.toc,{value:"Index and Query Docs",id:"index-and-query-docs",level:2},{value:"Query Docs From an Existing Collection",id:"query-docs-from-an-existing-collection",level:2}];function f(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"clickhouse",children:"ClickHouse"}),"\n",(0,o.jsx)(n.admonition,{title:"Compatibility",type:"tip",children:(0,o.jsx)(n.p,{children:"Only available on Node.js."})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://clickhouse.com/",children:"ClickHouse"})," is a robust and open-source columnar database that is used for handling analytical queries and efficient storage, ClickHouse is designed to provide a powerful combination of vector search and analytics."]}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Launch a ClickHouse cluster. Refer to the ",(0,o.jsx)(n.a,{href:"https://clickhouse.com/docs/en/getting-started/install/",children:"ClickHouse Installation Guide"})," for details."]}),"\n",(0,o.jsxs)(n.li,{children:["After launching a ClickHouse cluster, retrieve the ",(0,o.jsx)(n.code,{children:"Connection Details"})," from the cluster's ",(0,o.jsx)(n.code,{children:"Actions"})," menu. You will need the host, port, username, and password."]}),"\n",(0,o.jsx)(n.li,{children:"Install the required Node.js peer dependency for ClickHouse in your workspace."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You will need to install the following peer dependencies:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install -S @clickhouse/client mysql2\n"})}),"\n","\n",(0,o.jsx)(r.default,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,o.jsx)(n.h2,{id:"index-and-query-docs",children:"Index and Query Docs"}),"\n","\n",(0,o.jsx)(i.A,{language:"typescript",children:a()}),"\n",(0,o.jsx)(n.h2,{id:"query-docs-from-an-existing-collection",children:"Query Docs From an Existing Collection"}),"\n","\n",(0,o.jsx)(i.A,{language:"typescript",children:d()})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}},78847:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=t(74848),s=t(28453);const i={},r=void 0,l={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},a={},c=[];function d(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},99912:e=>{e.exports={content:'import { ClickHouseStore } from "@langchain/community/vectorstores/clickhouse";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\n// Initialize ClickHouse store from texts\nconst vectorStore = await ClickHouseStore.fromTexts(\n  ["Hello world", "Bye bye", "hello nice world"],\n  [\n    { id: 2, name: "2" },\n    { id: 1, name: "1" },\n    { id: 3, name: "3" },\n  ],\n  new OpenAIEmbeddings(),\n  {\n    host: process.env.CLICKHOUSE_HOST || "localhost",\n    port: process.env.CLICKHOUSE_PORT || 8443,\n    username: process.env.CLICKHOUSE_USER || "username",\n    password: process.env.CLICKHOUSE_PASSWORD || "password",\n    database: process.env.CLICKHOUSE_DATABASE || "default",\n    table: process.env.CLICKHOUSE_TABLE || "vector_table",\n  }\n);\n\n// Sleep 1 second to ensure that the search occurs after the successful insertion of data.\n// eslint-disable-next-line no-promise-executor-return\nawait new Promise((resolve) => setTimeout(resolve, 1000));\n\n// Perform similarity search without filtering\nconst results = await vectorStore.similaritySearch("hello world", 1);\nconsole.log(results);\n\n// Perform similarity search with filtering\nconst filteredResults = await vectorStore.similaritySearch("hello world", 1, {\n  whereStr: "metadata.name = \'1\'",\n});\nconsole.log(filteredResults);\n',imports:[{local:"ClickHouseStore",imported:"ClickHouseStore",source:"@langchain/community/vectorstores/clickhouse"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"}]}},48466:e=>{e.exports={content:'import { ClickHouseStore } from "@langchain/community/vectorstores/clickhouse";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\n// Initialize ClickHouse store\nconst vectorStore = await ClickHouseStore.fromExistingIndex(\n  new OpenAIEmbeddings(),\n  {\n    host: process.env.CLICKHOUSE_HOST || "localhost",\n    port: process.env.CLICKHOUSE_PORT || 8443,\n    username: process.env.CLICKHOUSE_USER || "username",\n    password: process.env.CLICKHOUSE_PASSWORD || "password",\n    database: process.env.CLICKHOUSE_DATABASE || "default",\n    table: process.env.CLICKHOUSE_TABLE || "vector_table",\n  }\n);\n\n// Sleep 1 second to ensure that the search occurs after the successful insertion of data.\n// eslint-disable-next-line no-promise-executor-return\nawait new Promise((resolve) => setTimeout(resolve, 1000));\n\n// Perform similarity search without filtering\nconst results = await vectorStore.similaritySearch("hello world", 1);\nconsole.log(results);\n\n// Perform similarity search with filtering\nconst filteredResults = await vectorStore.similaritySearch("hello world", 1, {\n  whereStr: "metadata.name = \'1\'",\n});\nconsole.log(filteredResults);\n',imports:[{local:"ClickHouseStore",imported:"ClickHouseStore",source:"@langchain/community/vectorstores/clickhouse"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"}]}}}]);