(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8558],{53725:(e,n,s)=>{"use strict";s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var t=s(74848),o=s(28453),r=s(78847),a=s(64428),i=s(78518),c=s.n(i);const l={},d="Bedrock",m={id:"integrations/llms/bedrock",title:"Bedrock",description:"Amazon Bedrock is a fully managed service that makes Foundation Models (FMs)",source:"@site/docs/integrations/llms/bedrock.mdx",sourceDirName:"integrations/llms",slug:"/integrations/llms/bedrock",permalink:"/docs/integrations/llms/bedrock",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/llms/bedrock.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Azure OpenAI",permalink:"/docs/integrations/llms/azure"},next:{title:"Cloudflare Workers AI",permalink:"/docs/integrations/llms/cloudflare_workersai"}},h={},p=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},...r.toc];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"bedrock",children:"Bedrock"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/bedrock/",children:"Amazon Bedrock"})," is a fully managed service that makes Foundation Models (FMs)\nfrom leading AI startups and Amazon available via an API. You can choose from a wide range of FMs to find the model that is best suited for your use case."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsx)(n.p,{children:"You'll need to install a few official AWS packages as peer dependencies:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @aws-crypto/sha256-js @aws-sdk/credential-provider-node @smithy/protocol-http @smithy/signature-v4 @smithy/eventstream-codec @smithy/util-utf8 @aws-sdk/types\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also use Bedrock in web environments such as Edge functions or Cloudflare Workers by omitting the ",(0,t.jsx)(n.code,{children:"@aws-sdk/credential-provider-node"})," dependency\nand using the ",(0,t.jsx)(n.code,{children:"web"})," entrypoint:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @aws-crypto/sha256-js @smithy/protocol-http @smithy/signature-v4 @smithy/eventstream-codec @smithy/util-utf8 @aws-sdk/types\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,t.jsx)(r.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/community\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that some models require specific prompting techniques. For example, Anthropic's Claude-v2 model will throw an error if\nthe prompt does not start with ",(0,t.jsx)(n.code,{children:"Human: "}),"."]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:c()})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},78518:e=>{e.exports={content:'import { Bedrock } from "@langchain/community/llms/bedrock";\n// Or, from web environments:\n// import { Bedrock } from "@langchain/community/llms/bedrock/web";\n\n// If no credentials are provided, the default credentials from\n// @aws-sdk/credential-provider-node will be used.\nconst model = new Bedrock({\n  model: "ai21.j2-grande-instruct", // You can also do e.g. "anthropic.claude-v2"\n  region: "us-east-1",\n  // endpointUrl: "custom.amazonaws.com",\n  // credentials: {\n  //   accessKeyId: process.env.BEDROCK_AWS_ACCESS_KEY_ID!,\n  //   secretAccessKey: process.env.BEDROCK_AWS_SECRET_ACCESS_KEY!,\n  // },\n  // modelKwargs: {},\n});\n\nconst res = await model.invoke("Tell me a joke");\nconsole.log(res);\n\n/*\n\n\n  Why was the math book unhappy?\n\n  Because it had too many problems!\n*/\n',imports:[{local:"Bedrock",imported:"Bedrock",source:"@langchain/community/llms/bedrock"}]}}}]);