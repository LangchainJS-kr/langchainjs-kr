(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6813],{92865:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>m,metadata:()=>d,toc:()=>y});var t=a(74848),o=a(28453),s=a(64428),r=a(78847),i=a(7737),c=a.n(i);const m={hide_table_of_contents:!0},l="DynamoDB-Backed Chat Memory",d={id:"integrations/chat_memory/dynamodb",title:"DynamoDB-Backed Chat Memory",description:"For longer-term persistence across chat sessions, you can swap out the default in-memory chatHistory that backs chat memory classes like BufferMemory for a DynamoDB instance.",source:"@site/docs/integrations/chat_memory/dynamodb.mdx",sourceDirName:"integrations/chat_memory",slug:"/integrations/chat_memory/dynamodb",permalink:"/docs/integrations/chat_memory/dynamodb",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/chat_memory/dynamodb.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0}},h={},y=[{value:"Setup",id:"setup",level:2},...r.toc,{value:"Usage",id:"usage",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"dynamodb-backed-chat-memory",children:"DynamoDB-Backed Chat Memory"}),"\n",(0,t.jsxs)(n.p,{children:["For longer-term persistence across chat sessions, you can swap out the default in-memory ",(0,t.jsx)(n.code,{children:"chatHistory"})," that backs chat memory classes like ",(0,t.jsx)(n.code,{children:"BufferMemory"})," for a DynamoDB instance."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsx)(n.p,{children:"First, install the AWS DynamoDB client in your project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @aws-sdk/client-dynamodb\n"})}),"\n","\n",(0,t.jsx)(r.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Next, sign into your AWS account and create a DynamoDB table. Name the table ",(0,t.jsx)(n.code,{children:"langchain"}),", and name your partition key ",(0,t.jsx)(n.code,{children:"id"}),". Make sure your partition key is a string. You can leave sort key and the other settings alone."]}),"\n",(0,t.jsx)(n.p,{children:"You'll also need to retrieve an AWS access key and secret key for a role or user that has access to the table and add them to your environment variables."}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,t.jsx)(s.A,{language:"typescript",children:c()})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7737:e=>{e.exports={content:'import { BufferMemory } from "langchain/memory/index";\nimport { DynamoDBChatMessageHistory } from "@langchain/community/stores/message/dynamodb";\nimport { ChatOpenAI } from "@langchain/openai";\nimport { ConversationChain } from "langchain/chains";\n\nconst memory = new BufferMemory({\n  chatHistory: new DynamoDBChatMessageHistory({\n    tableName: "langchain",\n    partitionKey: "id",\n    sessionId: new Date().toISOString(), // Or some other unique identifier for the conversation\n    config: {\n      region: "us-east-2",\n      credentials: {\n        accessKeyId: "<your AWS access key id>",\n        secretAccessKey: "<your AWS secret access key>",\n      },\n    },\n  }),\n});\n\nconst model = new ChatOpenAI();\nconst chain = new ConversationChain({ llm: model, memory });\n\nconst res1 = await chain.invoke({ input: "Hi! I\'m Jim." });\nconsole.log({ res1 });\n/*\n{\n  res1: {\n    text: "Hello Jim! It\'s nice to meet you. My name is AI. How may I assist you today?"\n  }\n}\n*/\n\nconst res2 = await chain.invoke({ input: "What did I just say my name was?" });\nconsole.log({ res2 });\n\n/*\n{\n  res1: {\n    text: "You said your name was Jim."\n  }\n}\n*/\n',imports:[{local:"BufferMemory",imported:"BufferMemory",source:"langchain/memory/index"},{local:"DynamoDBChatMessageHistory",imported:"DynamoDBChatMessageHistory",source:"@langchain/community/stores/message/dynamodb"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"ConversationChain",imported:"ConversationChain",source:"langchain/chains"}]}}}]);