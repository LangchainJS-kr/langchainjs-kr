"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4036],{99440:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>l});var a=s(74848),t=s(28453);const n={sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},c="How to write a custom document loader",r={id:"how_to/document_loader_custom",title:"How to write a custom document loader",description:"If you want to implement your own Document Loader, you have a few options.",source:"@site/docs/how_to/document_loader_custom.mdx",sourceDirName:"how_to",slug:"/how_to/document_loader_custom",permalink:"/docs/how_to/document_loader_custom",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/document_loader_custom.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},sidebar:"tutorialSidebar"},d={},l=[{value:"Subclassing <code>BaseDocumentLoader</code>",id:"subclassing-basedocumentloader",level:3},{value:"Subclassing <code>TextLoader</code>",id:"subclassing-textloader",level:3},{value:"Subclassing <code>BufferLoader</code>",id:"subclassing-bufferloader",level:3}];function i(e){const o={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h1,{id:"how-to-write-a-custom-document-loader",children:"How to write a custom document loader"}),"\n",(0,a.jsx)(o.p,{children:"If you want to implement your own Document Loader, you have a few options."}),"\n",(0,a.jsxs)(o.h3,{id:"subclassing-basedocumentloader",children:["Subclassing ",(0,a.jsx)(o.code,{children:"BaseDocumentLoader"})]}),"\n",(0,a.jsxs)(o.p,{children:["You can extend the ",(0,a.jsx)(o.code,{children:"BaseDocumentLoader"})," class directly. The ",(0,a.jsx)(o.code,{children:"BaseDocumentLoader"})," class provides a few convenience methods for loading documents from a variety of sources."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-typescript",children:"abstract class BaseDocumentLoader implements DocumentLoader {\n  abstract load(): Promise<Document[]>;\n}\n"})}),"\n",(0,a.jsxs)(o.h3,{id:"subclassing-textloader",children:["Subclassing ",(0,a.jsx)(o.code,{children:"TextLoader"})]}),"\n",(0,a.jsxs)(o.p,{children:["If you want to load documents from a text file, you can extend the ",(0,a.jsx)(o.code,{children:"TextLoader"})," class. The ",(0,a.jsx)(o.code,{children:"TextLoader"})," class takes care of reading the file, so all you have to do is implement a parse method."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-typescript",children:"abstract class TextLoader extends BaseDocumentLoader {\n  abstract parse(raw: string): Promise<string[]>;\n}\n"})}),"\n",(0,a.jsxs)(o.h3,{id:"subclassing-bufferloader",children:["Subclassing ",(0,a.jsx)(o.code,{children:"BufferLoader"})]}),"\n",(0,a.jsxs)(o.p,{children:["If you want to load documents from a binary file, you can extend the ",(0,a.jsx)(o.code,{children:"BufferLoader"})," class. The ",(0,a.jsx)(o.code,{children:"BufferLoader"})," class takes care of reading the file, so all you have to do is implement a parse method."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-typescript",children:'abstract class BufferLoader extends BaseDocumentLoader {\n  abstract parse(\n    raw: Buffer,\n    metadata: Document["metadata"]\n  ): Promise<Document[]>;\n}\n'})})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}}}]);