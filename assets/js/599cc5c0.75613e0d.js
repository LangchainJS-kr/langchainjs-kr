(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7056,7817],{55423:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>g,contentTitle:()=>p,default:()=>b,frontMatter:()=>h,metadata:()=>u,toc:()=>k});var s=a(74848),t=a(28453),o=a(78847),i=a(2280),r=a(64428),d=a(21156),c=a.n(d),l=a(78105),m=a.n(l);const h={sidebar_label:"Bedrock"},p="BedrockChat",u={id:"integrations/chat/bedrock",title:"BedrockChat",description:"Amazon Bedrock is a fully managed service that makes Foundation Models (FMs)",source:"@site/docs/integrations/chat/bedrock.mdx",sourceDirName:"integrations/chat",slug:"/integrations/chat/bedrock",permalink:"/docs/integrations/chat/bedrock",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/chat/bedrock.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Bedrock"},sidebar:"integrations",previous:{title:"Baidu Wenxin",permalink:"/docs/integrations/chat/baidu_wenxin"},next:{title:"Cloudflare Workers AI",permalink:"/docs/integrations/chat/cloudflare_workersai"}},g={},k=[{value:"Setup",id:"setup",level:2},...o.toc,{value:"Usage",id:"usage",level:2},...i.toc,{value:"Multimodal inputs",id:"multimodal-inputs",level:2}];function f(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"bedrockchat",children:"BedrockChat"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://aws.amazon.com/bedrock/",children:"Amazon Bedrock"})," is a fully managed service that makes Foundation Models (FMs)\nfrom leading AI startups and Amazon available via an API. You can choose from a wide range of FMs to find the model that is best suited for your use case."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:["You'll need to install the ",(0,s.jsx)(n.code,{children:"@langchain/community"})," package:"]}),"\n","\n",(0,s.jsx)(o.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/community\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then, you'll need to install a few official AWS packages as peer dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @aws-crypto/sha256-js @aws-sdk/credential-provider-node @smithy/protocol-http @smithy/signature-v4 @smithy/eventstream-codec @smithy/util-utf8 @aws-sdk/types\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can also use BedrockChat in web environments such as Edge functions or Cloudflare Workers by omitting the ",(0,s.jsx)(n.code,{children:"@aws-sdk/credential-provider-node"})," dependency\nand using the ",(0,s.jsx)(n.code,{children:"web"})," entrypoint:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @aws-crypto/sha256-js @smithy/protocol-http @smithy/signature-v4 @smithy/eventstream-codec @smithy/util-utf8 @aws-sdk/types\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,s.jsx)(i.default,{}),"\n",(0,s.jsxs)(n.p,{children:["Currently, only Anthropic, Cohere, and Mistral models are supported with the chat model integration. For foundation models from AI21 or Amazon, see ",(0,s.jsx)(n.a,{href:"/docs/integrations/llms/bedrock",children:"the text generation Bedrock variant"}),"."]}),"\n","\n",(0,s.jsx)(r.A,{language:"typescript",children:c()}),"\n",(0,s.jsx)(n.h2,{id:"multimodal-inputs",children:"Multimodal inputs"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Multimodal inputs are currently only supported by Anthropic Claude-3 models."})}),"\n",(0,s.jsx)(n.p,{children:"Anthropic Claude-3 models hosted on Bedrock have multimodal capabilities and can reason about images. Here's an example:"}),"\n","\n",(0,s.jsx)(r.A,{language:"typescript",children:m()})]})}function b(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},2280:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=a(74848),t=a(28453);const o={},i=void 0,r={id:"mdx_components/unified_model_params_tooltip",title:"unified_model_params_tooltip",description:"We're unifying model params across all packages. We now suggest using model instead of modelName, and apiKey for API keys.",source:"@site/docs/mdx_components/unified_model_params_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/unified_model_params_tooltip",permalink:"/docs/mdx_components/unified_model_params_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/unified_model_params_tooltip.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const n={admonition:"admonition",code:"code",p:"p",...(0,t.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["We're unifying model params across all packages. We now suggest using ",(0,s.jsx)(n.code,{children:"model"})," instead of ",(0,s.jsx)(n.code,{children:"modelName"}),", and ",(0,s.jsx)(n.code,{children:"apiKey"})," for API keys."]})})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},21156:e=>{e.exports={content:'import { BedrockChat } from "@langchain/community/chat_models/bedrock";\n// Or, from web environments:\n// import { BedrockChat } from "@langchain/community/chat_models/bedrock/web";\nimport { HumanMessage } from "@langchain/core/messages";\n\n// If no credentials are provided, the default credentials from\n// @aws-sdk/credential-provider-node will be used.\n\n// modelKwargs are additional parameters passed to the model when it\n// is invoked.\nconst model = new BedrockChat({\n  model: "anthropic.claude-3-sonnet-20240229-v1:0",\n  region: "us-east-1",\n  // endpointUrl: "custom.amazonaws.com",\n  // credentials: {\n  //   accessKeyId: process.env.BEDROCK_AWS_ACCESS_KEY_ID!,\n  //   secretAccessKey: process.env.BEDROCK_AWS_SECRET_ACCESS_KEY!,\n  // },\n  // modelKwargs: {\n  //   anthropic_version: "bedrock-2023-05-31",\n  // },\n});\n\n// Other model names include:\n// "mistral.mistral-7b-instruct-v0:2"\n// "mistral.mixtral-8x7b-instruct-v0:1"\n//\n// For a full list, see the Bedrock page in AWS.\n\nconst res = await model.invoke([\n  new HumanMessage({ content: "Tell me a joke" }),\n]);\nconsole.log(res);\n\n/*\n  AIMessage {\n    content: "Here\'s a silly joke for you:\\n" +\n      \'\\n\' +\n      "Why can\'t a bicycle stand up by itself?\\n" +\n      "Because it\'s two-tired!",\n    name: undefined,\n    additional_kwargs: { id: \'msg_01NYN7Rf39k4cgurqpZWYyDh\' }\n  }\n*/\n\nconst stream = await model.stream([\n  new HumanMessage({ content: "Tell me a joke" }),\n]);\n\nfor await (const chunk of stream) {\n  console.log(chunk.content);\n}\n\n/*\n  Here\n  \'s\n  a\n  silly\n  joke\n  for\n  you\n  :\n\n\n  Why\n  can\n  \'t\n  a\n  bicycle\n  stand\n  up\n  by\n  itself\n  ?\n\n  Because\n  it\n  \'s\n  two\n  -\n  tired\n  !\n*/\n',imports:[{local:"BedrockChat",imported:"BedrockChat",source:"@langchain/community/chat_models/bedrock"},{local:"HumanMessage",imported:"HumanMessage",source:"@langchain/core/messages"}]}},78105:e=>{e.exports={content:'import * as fs from "node:fs/promises";\n\nimport { BedrockChat } from "@langchain/community/chat_models/bedrock";\n// Or, from web environments:\n// import { BedrockChat } from "@langchain/community/chat_models/bedrock/web";\nimport { HumanMessage } from "@langchain/core/messages";\n\n// If no credentials are provided, the default credentials from\n// @aws-sdk/credential-provider-node will be used.\n\n// modelKwargs are additional parameters passed to the model when it\n// is invoked.\nconst model = new BedrockChat({\n  model: "anthropic.claude-3-sonnet-20240229-v1:0",\n  region: "us-east-1",\n  // endpointUrl: "custom.amazonaws.com",\n  // credentials: {\n  //   accessKeyId: process.env.BEDROCK_AWS_ACCESS_KEY_ID!,\n  //   secretAccessKey: process.env.BEDROCK_AWS_SECRET_ACCESS_KEY!,\n  // },\n  // modelKwargs: {\n  //   anthropic_version: "bedrock-2023-05-31",\n  // },\n});\n\nconst imageData = await fs.readFile("./hotdog.jpg");\n\nconst res = await model.invoke([\n  new HumanMessage({\n    content: [\n      {\n        type: "text",\n        text: "What\'s in this image?",\n      },\n      {\n        type: "image_url",\n        image_url: {\n          url: `data:image/jpeg;base64,${imageData.toString("base64")}`,\n        },\n      },\n    ],\n  }),\n]);\nconsole.log(res);\n\n/*\n  AIMessage {\n    content: \'The image shows a hot dog or frankfurter. It has a reddish-pink sausage filling encased in a light brown bread-like bun. The hot dog bun is split open, revealing the sausage inside. This classic fast food item is a popular snack or meal, often served at events like baseball games or cookouts. The hot dog appears to be against a plain white background, allowing the details and textures of the food item to be clearly visible.\',\n    name: undefined,\n    additional_kwargs: { id: \'msg_01XrLPL9vCb82U3Wrrpza18p\' }\n  }\n*/\n',imports:[{local:"BedrockChat",imported:"BedrockChat",source:"@langchain/community/chat_models/bedrock"},{local:"HumanMessage",imported:"HumanMessage",source:"@langchain/core/messages"}]}}}]);