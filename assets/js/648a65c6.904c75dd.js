(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1144],{71913:(e,n,s)=>{"use strict";s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var o=s(74848),t=s(28453),i=s(64428),d=s(25795),a=s.n(d);const r={},l="PDF files",c={id:"integrations/document_loaders/web_loaders/pdf",title:"PDF files",description:"You can use this version of the popular PDFLoader in web environments.",source:"@site/docs/integrations/document_loaders/web_loaders/pdf.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/pdf",permalink:"/docs/integrations/document_loaders/web_loaders/pdf",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/pdf.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Notion API",permalink:"/docs/integrations/document_loaders/web_loaders/notionapi"},next:{title:"Recursive URL Loader",permalink:"/docs/integrations/document_loaders/web_loaders/recursive_url_loader"}},p={},u=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Usage, custom <code>pdfjs</code> build",id:"usage-custom-pdfjs-build",level:2},{value:"Eliminating extra spaces",id:"eliminating-extra-spaces",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"pdf-files",children:"PDF files"}),"\n",(0,o.jsxs)(n.p,{children:["You can use this version of the popular PDFLoader in web environments.\nBy default, one document will be created for each page in the PDF file, you can change this behavior by setting the ",(0,o.jsx)(n.code,{children:"splitPages"})," option to ",(0,o.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install pdf-parse\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,o.jsx)(i.A,{language:"typescript",children:a()}),"\n",(0,o.jsxs)(n.h2,{id:"usage-custom-pdfjs-build",children:["Usage, custom ",(0,o.jsx)(n.code,{children:"pdfjs"})," build"]}),"\n",(0,o.jsxs)(n.p,{children:["By default we use the ",(0,o.jsx)(n.code,{children:"pdfjs"})," build bundled with ",(0,o.jsx)(n.code,{children:"pdf-parse"}),", which is compatible with most environments, including Node.js and modern browsers. If you want to use a more recent version of ",(0,o.jsx)(n.code,{children:"pdfjs-dist"})," or if you want to use a custom build of ",(0,o.jsx)(n.code,{children:"pdfjs-dist"}),", you can do so by providing a custom ",(0,o.jsx)(n.code,{children:"pdfjs"})," function that returns a promise that resolves to the ",(0,o.jsx)(n.code,{children:"PDFJS"})," object."]}),"\n",(0,o.jsxs)(n.p,{children:['In the following example we use the "legacy" (see ',(0,o.jsx)(n.a,{href:"https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#which-browsersenvironments-are-supported",children:"pdfjs docs"}),") build of ",(0,o.jsx)(n.code,{children:"pdfjs-dist"}),", which includes several polyfills not included in the default build."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install pdfjs-dist\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { WebPDFLoader } from "langchain/document_loaders/web/pdf";\n\nconst blob = new Blob(); // e.g. from a file input\n\nconst loader = new WebPDFLoader(blob, {\n  // you may need to add `.then(m => m.default)` to the end of the import\n  pdfjs: () => import("pdfjs-dist/legacy/build/pdf.js"),\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"eliminating-extra-spaces",children:"Eliminating extra spaces"}),"\n",(0,o.jsx)(n.p,{children:"PDFs come in many varieties, which makes reading them a challenge. The loader parses individual text elements and joins them together with a space by default, but\nif you are seeing excessive spaces, this may not be the desired behavior. In that case, you can override the separator with an empty string like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { WebPDFLoader } from "langchain/document_loaders/web/pdf";\n\nconst blob = new Blob(); // e.g. from a file input\n\nconst loader = new WebPDFLoader(blob, {\n  parsedItemSeparator: "",\n});\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},25795:e=>{e.exports={content:'import { WebPDFLoader } from "langchain/document_loaders/web/pdf";\n\nconst blob = new Blob(); // e.g. from a file input\n\nconst loader = new WebPDFLoader(blob);\n\nconst docs = await loader.load();\n\nconsole.log({ docs });\n',imports:[{local:"WebPDFLoader",imported:"WebPDFLoader",source:"langchain/document_loaders/web/pdf"}]}}}]);