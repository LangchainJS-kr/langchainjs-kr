"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5994],{4084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>h});var a=t(74848),s=t(28453),r=t(78847),i=t(27846);const o={sidebar_class_name:"hidden",keywords:["RunnablePassthrough","assign","LCEL"],title:"How to add values to a chain's state"},l=void 0,u={id:"how_to/assign",title:"How to add values to a chain's state",description:"This guide assumes familiarity with the following concepts:",source:"@site/docs/how_to/assign.mdx",sourceDirName:"how_to",slug:"/how_to/assign",permalink:"/docs/how_to/assign",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/assign.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden",keywords:["RunnablePassthrough","assign","LCEL"],title:"How to add values to a chain's state"},sidebar:"tutorialSidebar",previous:{title:"How to use legacy LangChain Agents (AgentExecutor)",permalink:"/docs/how_to/agent_executor"},next:{title:"How to attach runtime arguments to a Runnable",permalink:"/docs/how_to/binding"}},c={},h=[{value:"Streaming",id:"streaming",level:2},...r.toc,{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.admonition,{title:"Prerequisites",type:"info",children:[(0,a.jsx)(n.p,{children:"This guide assumes familiarity with the following concepts:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/concepts/#langchain-expression-language",children:"LangChain Expression Language\n(LCEL)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/sequence/",children:"Chaining runnables"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/parallel/",children:"Calling runnables in parallel"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/functions/",children:"Custom functions"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/passthrough",children:"Passing data through"})}),"\n"]})]}),"\n",(0,a.jsxs)(n.p,{children:["An alternate way of ",(0,a.jsx)(n.a,{href:"../../docs/how_to/passthrough",children:"passing data\nthrough"})," steps of a chain is to leave the\ncurrent values of the chain state unchanged while assigning a new value\nunder a given key. The\n",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_runnables.RunnablePassthrough.html#assign-2",children:(0,a.jsx)(n.code,{children:"RunnablePassthrough.assign()"})}),"\nstatic method takes an input value and adds the extra arguments passed\nto the assign function."]}),"\n",(0,a.jsxs)(n.p,{children:["This is useful in the common ",(0,a.jsx)(n.a,{href:"../../docs/concepts/#langchain-expression-language",children:"LangChain Expression\nLanguage"})," pattern of\nadditively creating a dictionary to use as input to a later step."]}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s an example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import {\n  RunnableParallel,\n  RunnablePassthrough,\n} from "@langchain/core/runnables";\n\nconst runnable = RunnableParallel.from({\n  extra: RunnablePassthrough.assign({\n    mult: (input: { num: number }) => input.num * 3,\n    modified: (input: { num: number }) => input.num + 1,\n  }),\n});\n\nawait runnable.invoke({ num: 1 });\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"{ extra: { num: 1, mult: 3, modified: 2 } }\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s break down what\u2019s happening here."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The input to the chain is ",(0,a.jsx)(n.code,{children:'{"num": 1}'}),". This is passed into a\n",(0,a.jsx)(n.code,{children:"RunnableParallel"}),", which invokes the runnables it is passed in\nparallel with that input."]}),"\n",(0,a.jsxs)(n.li,{children:["The value under the ",(0,a.jsx)(n.code,{children:"extra"})," key is invoked.\n",(0,a.jsx)(n.code,{children:"RunnablePassthrough.assign()"})," keeps the original keys in the input\ndict (",(0,a.jsx)(n.code,{children:'{"num": 1}'}),"), and assigns a new key called ",(0,a.jsx)(n.code,{children:"mult"}),". The value\nis ",(0,a.jsx)(n.code,{children:'lambda x: x["num"] * 3)'}),", which is ",(0,a.jsx)(n.code,{children:"3"}),". Thus, the result is\n",(0,a.jsx)(n.code,{children:'{"num": 1, "mult": 3}'}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:'{"num": 1, "mult": 3}'})," is returned to the ",(0,a.jsx)(n.code,{children:"RunnableParallel"})," call,\nand is set as the value to the key ",(0,a.jsx)(n.code,{children:"extra"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["At the same time, the ",(0,a.jsx)(n.code,{children:"modified"})," key is called. The result is ",(0,a.jsx)(n.code,{children:"2"}),",\nsince the lambda extracts a key called ",(0,a.jsx)(n.code,{children:'"num"'})," from its input and\nadds one."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Thus, the result is ",(0,a.jsx)(n.code,{children:"{'extra': {'num': 1, 'mult': 3}, 'modified': 2}"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"streaming",children:"Streaming"}),"\n",(0,a.jsxs)(n.p,{children:["One convenient feature of this method is that it allows values to pass\nthrough as soon as they are available. To show this off, we\u2019ll use\n",(0,a.jsx)(n.code,{children:"RunnablePassthrough.assign()"})," to immediately return source docs in a\nretrieval chain:"]}),"\n","\n",(0,a.jsx)(r.default,{}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(n.p,{children:"@langchain/openai"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { StringOutputParser } from "@langchain/core/output_parsers";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport {\n  RunnablePassthrough,\n  RunnableSequence,\n} from "@langchain/core/runnables";\nimport { ChatOpenAI, OpenAIEmbeddings } from "@langchain/openai";\nimport { MemoryVectorStore } from "langchain/vectorstores/memory";\n\nconst vectorstore = await MemoryVectorStore.fromDocuments(\n  [{ pageContent: "harrison worked at kensho", metadata: {} }],\n  new OpenAIEmbeddings()\n);\n\nconst retriever = vectorstore.asRetriever();\n\nconst template = `Answer the question based only on the following context:\n{context}\n\nQuestion: {question}\n`;\n\nconst prompt = ChatPromptTemplate.fromTemplate(template);\n\nconst model = new ChatOpenAI({ model: "gpt-4o" });\n\nconst generationChain = prompt.pipe(model).pipe(new StringOutputParser());\n\nconst retrievalChain = RunnableSequence.from([\n  {\n    context: retriever.pipe((docs) => docs[0].pageContent),\n    question: new RunnablePassthrough(),\n  },\n  RunnablePassthrough.assign({ output: generationChain }),\n]);\n\nconst stream = await retrievalChain.stream("where did harrison work?");\n\nfor await (const chunk of stream) {\n  console.log(chunk);\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{ question: "where did harrison work?" }\n{ context: "harrison worked at kensho" }\n{ output: "" }\n{ output: "H" }\n{ output: "arrison" }\n{ output: " worked" }\n{ output: " at" }\n{ output: " Kens" }\n{ output: "ho" }\n{ output: "." }\n{ output: "" }\n'})}),"\n",(0,a.jsxs)(n.p,{children:["We can see that the first chunk contains the original ",(0,a.jsx)(n.code,{children:'"question"'})," since\nthat is immediately available. The second chunk contains ",(0,a.jsx)(n.code,{children:'"context"'}),"\nsince the retriever finishes second. Finally, the output from the\n",(0,a.jsx)(n.code,{children:"generation_chain"})," streams in chunks as soon as it is available."]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsx)(n.p,{children:"Now you\u2019ve learned how to pass data through your chains to help to help\nformat the data flowing through your chains."}),"\n",(0,a.jsx)(n.p,{children:"To learn more, see the other how-to guides on runnables in this section."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const s={tabItem:"tabItem_Ymn6"};var r=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,i),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>y});var a=t(96540),s=t(34164),r=t(23104),i=t(56347),o=t(205),l=t(57485),u=t(31682),c=t(89466);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=d(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[u,h]=m({queryString:t,groupId:s}),[g,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,c.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),f=(()=>{const e=u??g;return p({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,r]),tabValues:r}}var x=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function j(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==a&&(u(n),i(s))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function y(e){const n=(0,x.A)();return(0,b.jsx)(w,{...e,children:h(e.children)},String(n))}},27846:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var a=t(11470),s=t(19365),r=t(21432),i=t(74848);function o(e){let{children:n}=e;return(0,i.jsxs)(a.A,{groupId:"npm2yarn",children:[(0,i.jsx)(s.A,{value:"npm",label:"npm",children:(0,i.jsxs)(r.A,{language:"bash",children:["npm i ",n]})}),(0,i.jsx)(s.A,{value:"yarn",label:"yarn",default:!0,children:(0,i.jsxs)(r.A,{language:"bash",children:["yarn add ",n]})}),(0,i.jsx)(s.A,{value:"pnpm",label:"pnpm",children:(0,i.jsxs)(r.A,{language:"bash",children:["pnpm add ",n]})})]})}}}]);