"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1927],{82957:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var s=o(74848),a=o(28453);const t={},i="JSON files",r={id:"integrations/document_loaders/file_loaders/json",title:"JSON files",description:"The JSON loader use JSON pointer to target keys in your JSON files you want to target.",source:"@site/docs/integrations/document_loaders/file_loaders/json.mdx",sourceDirName:"integrations/document_loaders/file_loaders",slug:"/integrations/document_loaders/file_loaders/json",permalink:"/docs/integrations/document_loaders/file_loaders/json",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/file_loaders/json.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"EPUB files",permalink:"/docs/integrations/document_loaders/file_loaders/epub"},next:{title:"JSONLines files",permalink:"/docs/integrations/document_loaders/file_loaders/jsonlines"}},l={},d=[{value:"No JSON pointer example",id:"no-json-pointer-example",level:3},{value:"Using JSON pointer example",id:"using-json-pointer-example",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"json-files",children:"JSON files"}),"\n",(0,s.jsxs)(n.p,{children:["The JSON loader use ",(0,s.jsx)(n.a,{href:"https://github.com/janl/node-jsonpointer",children:"JSON pointer"})," to target keys in your JSON files you want to target."]}),"\n",(0,s.jsx)(n.h3,{id:"no-json-pointer-example",children:"No JSON pointer example"}),"\n",(0,s.jsx)(n.p,{children:"The most simple way of using it, is to specify no JSON pointer.\nThe loader will load all strings it finds in the JSON object."}),"\n",(0,s.jsx)(n.p,{children:"Example JSON file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "texts": ["This is a sentence.", "This is another sentence."]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { JSONLoader } from "langchain/document_loaders/fs/json";\n\nconst loader = new JSONLoader("src/document_loaders/example_data/example.json");\n\nconst docs = await loader.load();\n/*\n[\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 1,\n      "source": "blob",\n    },\n    "pageContent": "This is a sentence.",\n  },\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 2,\n      "source": "blob",\n    },\n    "pageContent": "This is another sentence.",\n  },\n]\n*/\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-json-pointer-example",children:"Using JSON pointer example"}),"\n",(0,s.jsx)(n.p,{children:"You can do a more advanced scenario by choosing which keys in your JSON object you want to extract string from."}),"\n",(0,s.jsx)(n.p,{children:'In this example, we want to only extract information from "from" and "surname" entries.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "1": {\n    "body": "BD 2023 SUMMER",\n    "from": "LinkedIn Job",\n    "labels": ["IMPORTANT", "CATEGORY_UPDATES", "INBOX"]\n  },\n  "2": {\n    "body": "Intern, Treasury and other roles are available",\n    "from": "LinkedIn Job2",\n    "labels": ["IMPORTANT"],\n    "other": {\n      "name": "plop",\n      "surname": "bob"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { JSONLoader } from "langchain/document_loaders/fs/json";\n\nconst loader = new JSONLoader(\n  "src/document_loaders/example_data/example.json",\n  ["/from", "/surname"]\n);\n\nconst docs = await loader.load();\n/*\n[\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 1,\n      "source": "blob",\n    },\n    "pageContent": "BD 2023 SUMMER",\n  },\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 2,\n      "source": "blob",\n    },\n    "pageContent": "LinkedIn Job",\n  },\n  ...\n]\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);