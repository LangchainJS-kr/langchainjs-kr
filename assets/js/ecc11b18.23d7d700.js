(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9257],{55182:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var o=t(74848),a=t(28453),s=t(64428),i=t(86119),r=t.n(i);const d={sidebar_class_name:"node-only",hide_table_of_contents:!0},l="Notion API",c={id:"integrations/document_loaders/web_loaders/notionapi",title:"Notion API",description:"This guide will take you through the steps required to load documents from Notion pages and databases using the Notion API.",source:"@site/docs/integrations/document_loaders/web_loaders/notionapi.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/notionapi",permalink:"/docs/integrations/document_loaders/web_loaders/notionapi",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/notionapi.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"node-only",hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"IMSDB",permalink:"/docs/integrations/document_loaders/web_loaders/imsdb"},next:{title:"PDF files",permalink:"/docs/integrations/document_loaders/web_loaders/pdf"}},p={},h=[{value:"Overview",id:"overview",level:2},{value:"Setup",id:"setup",level:2},{value:"Example Usage",id:"example-usage",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"notion-api",children:"Notion API"}),"\n",(0,o.jsx)(n.p,{children:"This guide will take you through the steps required to load documents from Notion pages and databases using the Notion API."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"Notion is a versatile productivity platform that consolidates note-taking, task management, and data organization tools into one interface."}),"\n",(0,o.jsx)(n.p,{children:"This document loader is able to take full Notion pages and databases and turn them into a LangChain Documents ready to be integrated into your projects."}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["You will first need to install the official Notion client and the ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/notion-to-md",children:"notion-to-md"})," package as peer dependencies:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @notionhq/client notion-to-md\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["Create a ",(0,o.jsx)(n.a,{href:"https://www.notion.so/my-integrations",children:"Notion integration"})," and securely record the Internal Integration Secret (also known as ",(0,o.jsx)(n.code,{children:"NOTION_INTEGRATION_TOKEN"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:["Add a connection to your new integration on your page or database. To do this open your Notion page, go to the settings pips in the top right and scroll down to ",(0,o.jsx)(n.code,{children:"Add connections"})," and select your new integration."]}),"\n",(0,o.jsxs)(n.li,{children:["Get the ",(0,o.jsx)(n.code,{children:"PAGE_ID"})," or ",(0,o.jsx)(n.code,{children:"DATABASE_ID"})," for the page or database you want to load."]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["The 32 char hex in the url path represents the ",(0,o.jsx)(n.code,{children:"ID"}),". For example:"]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["PAGE_ID: ",(0,o.jsxs)(n.a,{href:"https://www.notion.so/skarard/LangChain-Notion-API-b34ca03f219c4420a6046fc4bdfdf7b4",children:["https://www.notion.so/skarard/LangChain-Notion-API-",(0,o.jsx)(n.code,{children:"b34ca03f219c4420a6046fc4bdfdf7b4"})]})]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["DATABASE_ID: ",(0,o.jsxs)(n.a,{href:"https://www.notion.so/skarard/c393f19c3903440da0d34bf9c6c12ff2?v=9c70a0f4e174498aa0f9021e0a9d52de",children:["https://www.notion.so/skarard/",(0,o.jsx)(n.code,{children:"c393f19c3903440da0d34bf9c6c12ff2"}),"?v=9c70a0f4e174498aa0f9021e0a9d52de"]})]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["REGEX: ",(0,o.jsx)(n.code,{children:"/(?<!=)[0-9a-f]{32}/"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n","\n",(0,o.jsx)(s.A,{language:"typescript",children:r()})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},86119:e=>{e.exports={content:'import { NotionAPILoader } from "langchain/document_loaders/web/notionapi";\nimport { RecursiveCharacterTextSplitter } from "@langchain/textsplitters";\n\n// Loading a page (including child pages all as separate documents)\nconst pageLoader = new NotionAPILoader({\n  clientOptions: {\n    auth: "<NOTION_INTEGRATION_TOKEN>",\n  },\n  id: "<PAGE_ID>",\n  type: "page",\n});\n\nconst splitter = new RecursiveCharacterTextSplitter();\n\n// A page contents is likely to be more than 1000 characters so it\'s split into multiple documents (important for vectorization)\nconst pageDocs = await pageLoader.loadAndSplit(splitter);\n\nconsole.log({ pageDocs });\n\n// Loading a database (each row is a separate document with all properties as metadata)\nconst dbLoader = new NotionAPILoader({\n  clientOptions: {\n    auth: "<NOTION_INTEGRATION_TOKEN>",\n  },\n  id: "<DATABASE_ID>",\n  type: "database",\n  onDocumentLoaded: (current, total, currentTitle) => {\n    console.log(`Loaded Page: ${currentTitle} (${current}/${total})`);\n  },\n  callerOptions: {\n    maxConcurrency: 64, // Default value\n  },\n  propertiesAsHeader: true, // Prepends a front matter header of the page properties to the page contents\n});\n\n// A database row contents is likely to be less than 1000 characters so it\'s not split into multiple documents\nconst dbDocs = await dbLoader.load();\n\nconsole.log({ dbDocs });\n',imports:[{local:"NotionAPILoader",imported:"NotionAPILoader",source:"langchain/document_loaders/web/notionapi"},{local:"RecursiveCharacterTextSplitter",imported:"RecursiveCharacterTextSplitter",source:"@langchain/textsplitters"}]}}}]);