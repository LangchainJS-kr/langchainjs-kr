(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7083,65],{69710:(n,e,t)=>{"use strict";t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>d});var o=t(74848),i=t(28453),r=t(64428),s=t(57795),a=t.n(s),l=t(78847);const c={},h="Connery Toolkit",u={id:"integrations/toolkits/connery",title:"Connery Toolkit",description:"Using this toolkit, you can integrate Connery Actions into your LangChain agent.",source:"@site/docs/integrations/toolkits/connery.mdx",sourceDirName:"integrations/toolkits",slug:"/integrations/toolkits/connery",permalink:"/docs/integrations/toolkits/connery",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/toolkits/connery.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Toolkits",permalink:"/docs/integrations/toolkits"},next:{title:"JSON Agent Toolkit",permalink:"/docs/integrations/toolkits/json"}},p={},d=[{value:"What is Connery?",id:"what-is-connery",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Example of using Connery Toolkit",id:"example-of-using-connery-toolkit",level:2},{value:"Setup",id:"setup",level:3},...l.toc,{value:"Usage",id:"usage",level:3}];function m(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"connery-toolkit",children:"Connery Toolkit"}),"\n",(0,o.jsx)(e.p,{children:"Using this toolkit, you can integrate Connery Actions into your LangChain agent."}),"\n",(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsxs)(e.p,{children:["If you want to use only one particular Connery Action in your agent,\ncheck out the ",(0,o.jsx)(e.a,{href:"/docs/integrations/tools/connery",children:"Connery Action Tool"})," documentation."]})}),"\n",(0,o.jsx)(e.h2,{id:"what-is-connery",children:"What is Connery?"}),"\n",(0,o.jsx)(e.p,{children:"Connery is an open-source plugin infrastructure for AI."}),"\n",(0,o.jsx)(e.p,{children:"With Connery, you can easily create a custom plugin with a set of actions and seamlessly integrate them into your LangChain agent.\nConnery will take care of critical aspects such as runtime, authorization, secret management, access management, audit logs, and other vital features."}),"\n",(0,o.jsx)(e.p,{children:"Furthermore, Connery, supported by our community, provides a diverse collection of ready-to-use open-source plugins for added convenience."}),"\n",(0,o.jsx)(e.p,{children:"Learn more about Connery:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["GitHub: ",(0,o.jsx)(e.a,{href:"https://github.com/connery-io/connery",children:"https://github.com/connery-io/connery"})]}),"\n",(0,o.jsxs)(e.li,{children:["Documentation: ",(0,o.jsx)(e.a,{href:"https://docs.connery.io",children:"https://docs.connery.io"})]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(e.p,{children:"To use Connery Actions in your LangChain agent, you need to do some preparation:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["Set up the Connery runner using the ",(0,o.jsx)(e.a,{href:"https://docs.connery.io/docs/runner/quick-start/",children:"Quickstart"})," guide."]}),"\n",(0,o.jsx)(e.li,{children:"Install all the plugins with the actions you want to use in your agent."}),"\n",(0,o.jsxs)(e.li,{children:["Set environment variables ",(0,o.jsx)(e.code,{children:"CONNERY_RUNNER_URL"})," and ",(0,o.jsx)(e.code,{children:"CONNERY_RUNNER_API_KEY"})," so the toolkit can communicate with the Connery Runner."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"example-of-using-connery-toolkit",children:"Example of using Connery Toolkit"}),"\n",(0,o.jsx)(e.h3,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(e.p,{children:"To use the Connery Toolkit you need to install the following official peer dependency:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,o.jsx)(l.default,{}),"\n",(0,o.jsx)(e.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(e.p,{children:"In the example below, we create an agent that uses two Connery Actions to summarize a public webpage and send the summary by email:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Summarize public webpage"})," action from the ",(0,o.jsx)(e.a,{href:"https://github.com/connery-io/summarization-plugin",children:"Summarization"})," plugin."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Send email"})," action from the ",(0,o.jsx)(e.a,{href:"https://github.com/connery-io/gmail",children:"Gmail"})," plugin."]}),"\n"]}),"\n",(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsxs)(e.p,{children:["You can see a LangSmith trace of this example ",(0,o.jsx)(e.a,{href:"https://smith.langchain.com/public/5485cb37-b73d-458f-8162-43639f2b49e1/r",children:"here"}),"."]})}),"\n",(0,o.jsx)(r.A,{language:"typescript",children:a()}),"\n",(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsx)(e.p,{children:"Connery Action is a structured tool, so you can only use it in the agents supporting structured tools."})})]})}function g(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}},78847:(n,e,t)=>{"use strict";t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=t(74848),i=t(28453);const r={},s=void 0,a={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},l={},c=[];function h(n){const e={a:"a",admonition:"admonition",p:"p",...(0,i.R)(),...n.components};return(0,o.jsx)(e.admonition,{type:"tip",children:(0,o.jsxs)(e.p,{children:["See ",(0,o.jsx)(e.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(h,{...n})}):h(n)}},57795:n=>{n.exports={content:'import { ConneryService } from "@langchain/community/tools/connery";\nimport { ConneryToolkit } from "@langchain/community/agents/toolkits/connery";\nimport { ChatOpenAI } from "@langchain/openai";\nimport { initializeAgentExecutorWithOptions } from "langchain/agents";\n\n// Specify your Connery Runner credentials.\nprocess.env.CONNERY_RUNNER_URL = "";\nprocess.env.CONNERY_RUNNER_API_KEY = "";\n\n// Specify OpenAI API key.\nprocess.env.OPENAI_API_KEY = "";\n\n// Specify your email address to receive the emails from examples below.\nconst recepientEmail = "test@example.com";\n\n// Create a Connery Toolkit with all the available actions from the Connery Runner.\nconst conneryService = new ConneryService();\nconst conneryToolkit = await ConneryToolkit.createInstance(conneryService);\n\n// Use OpenAI Functions agent to execute the prompt using actions from the Connery Toolkit.\nconst llm = new ChatOpenAI({ temperature: 0 });\nconst agent = await initializeAgentExecutorWithOptions(\n  conneryToolkit.tools,\n  llm,\n  {\n    agentType: "openai-functions",\n    verbose: true,\n  }\n);\nconst result = await agent.invoke({\n  input:\n    `Make a short summary of the webpage http://www.paulgraham.com/vb.html in three sentences ` +\n    `and send it to ${recepientEmail}. Include the link to the webpage into the body of the email.`,\n});\nconsole.log(result.output);\n',imports:[{local:"ConneryService",imported:"ConneryService",source:"@langchain/community/tools/connery"},{local:"ConneryToolkit",imported:"ConneryToolkit",source:"@langchain/community/agents/toolkits/connery"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"initializeAgentExecutorWithOptions",imported:"initializeAgentExecutorWithOptions",source:"langchain/agents"}]}}}]);