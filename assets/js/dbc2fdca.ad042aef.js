(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8444,65],{47497:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>w,default:()=>_,frontMatter:()=>b,metadata:()=>y,toc:()=>k});var s=t(74848),a=t(28453),o=t(64428),r=t(78847),i=t(6295),h=t.n(i),c=t(88818),l=t.n(c),d=t(36430),p=t.n(d),m=t(32154),u=t.n(m),g=t(15614),f=t.n(g);const b={sidebar_label:"Cohere",sidebar_class_name:"beta"},w="ChatCohere",y={id:"integrations/chat/cohere",title:"ChatCohere",description:"The Cohere Chat API is still in beta. This means Cohere may make breaking changes at any time.",source:"@site/docs/integrations/chat/cohere.mdx",sourceDirName:"integrations/chat",slug:"/integrations/chat/cohere",permalink:"/docs/integrations/chat/cohere",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/chat/cohere.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Cohere",sidebar_class_name:"beta"},sidebar:"integrations",previous:{title:"Cloudflare Workers AI",permalink:"/docs/integrations/chat/cloudflare_workersai"},next:{title:"Fake LLM",permalink:"/docs/integrations/chat/fake"}},x={},k=[{value:"Setup",id:"setup",level:2},...r.toc,{value:"Usage",id:"usage",level:2},{value:"Streaming",id:"streaming",level:3},{value:"Stateful conversation API",id:"stateful-conversation-api",level:3},{value:"RAG",id:"rag",level:3},{value:"Connectors",id:"connectors",level:3}];function v(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"chatcohere",children:"ChatCohere"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"The Cohere Chat API is still in beta. This means Cohere may make breaking changes at any time."})}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:["In order to use the LangChain.js Cohere integration you'll need an API key.\nYou can sign up for a Cohere account and create an API key ",(0,s.jsx)(n.a,{href:"https://dashboard.cohere.com/welcome/register",children:"here"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You'll first need to install the ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@langchain/cohere",children:(0,s.jsx)(n.code,{children:"@langchain/cohere"})})," package:"]}),"\n","\n",(0,s.jsx)(r.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/cohere\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,s.jsx)(o.A,{language:"typescript",children:h()}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can see a LangSmith trace of this example ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/69ccd2aa-b651-4f07-9223-ecc0b77e645e/r",children:"here"})]})}),"\n",(0,s.jsx)(n.h3,{id:"streaming",children:"Streaming"}),"\n",(0,s.jsx)(n.p,{children:"Cohere's API also supports streaming token responses. The example below demonstrates how to use this feature."}),"\n","\n",(0,s.jsx)(o.A,{language:"typescript",children:l()}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can see a LangSmith trace of this example ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/36ae0564-b096-4ec1-9318-1f82fe705fe8/r",children:"here"})]})}),"\n",(0,s.jsx)(n.h3,{id:"stateful-conversation-api",children:"Stateful conversation API"}),"\n",(0,s.jsxs)(n.p,{children:["Cohere's chat API supports stateful conversations.\nThis means the API stores previous chat messages which can be accessed by passing in a ",(0,s.jsx)(n.code,{children:"conversation_id"})," field.\nThe example below demonstrates how to use this feature."]}),"\n","\n",(0,s.jsx)(o.A,{language:"typescript",children:p()}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can see the LangSmith traces from this example ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/8e67b05a-4e63-414e-ac91-a91acf21b262/r",children:"here"})," and ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/50fabc25-46fe-4727-a59c-7e4eb0de8e70/r",children:"here"})]})}),"\n",(0,s.jsx)(n.h3,{id:"rag",children:"RAG"}),"\n",(0,s.jsx)(n.p,{children:"Cohere also comes out of the box with RAG support.\nYou can pass in documents as context to the API request and Cohere's models will use them when generating responses."}),"\n","\n",(0,s.jsx)(o.A,{language:"typescript",children:u()}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can see a LangSmith trace of this example ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/de71fffe-6f01-4c36-9b49-40d1bc87dea3/r",children:"here"})]})}),"\n",(0,s.jsx)(n.h3,{id:"connectors",children:"Connectors"}),"\n",(0,s.jsxs)(n.p,{children:["The API also allows for other connections which are not static documents.\nAn example of this is their ",(0,s.jsx)(n.code,{children:"web-search"})," connector which allows you to pass in a query and the API will search the web for relevant documents.\nThe example below demonstrates how to use this feature."]}),"\n","\n",(0,s.jsx)(o.A,{language:"typescript",children:f()}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can see a LangSmith trace of this example ",(0,s.jsx)(n.a,{href:"https://smith.langchain.com/public/9a6f996b-cff2-4f3f-916a-640469a5a963/r",children:"here"})]})}),"\n",(0,s.jsxs)(n.p,{children:["We can see in the ",(0,s.jsx)(n.code,{children:"kwargs"})," object that the API request did a few things:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Performed a search query, storing the result data in the ",(0,s.jsx)(n.code,{children:"searchQueries"})," and ",(0,s.jsx)(n.code,{children:"searchResults"})," fields. In the ",(0,s.jsx)(n.code,{children:"searchQueries"})," field we see they rephrased our query to ",(0,s.jsx)(n.code,{children:"largest penguin species height"})," for better results."]}),"\n",(0,s.jsx)(n.li,{children:"Generated three documents from the search query."}),"\n",(0,s.jsx)(n.li,{children:"Generated a list of citations"}),"\n",(0,s.jsx)(n.li,{children:"Generated a final response based on the above actions & content."}),"\n"]})]})}function _(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}},78847:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=t(74848),a=t(28453);const o={},r=void 0,i={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},h={},c=[];function l(e){const n={a:"a",admonition:"admonition",p:"p",...(0,a.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6295:e=>{e.exports={content:'import { ChatCohere } from "@langchain/cohere";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\n\nconst model = new ChatCohere({\n  apiKey: process.env.COHERE_API_KEY, // Default\n  model: "command", // Default\n});\nconst prompt = ChatPromptTemplate.fromMessages([\n  ["ai", "You are a helpful assistant"],\n  ["human", "{input}"],\n]);\nconst chain = prompt.pipe(model);\nconst response = await chain.invoke({\n  input: "Hello there friend!",\n});\nconsole.log("response", response);\n/**\nresponse AIMessage {\n  lc_serializable: true,\n  lc_namespace: [ \'langchain_core\', \'messages\' ],\n  content: "Hi there! I\'m not your friend, but I\'m happy to help you in whatever way I can today. How are you doing? Is there anything I can assist you with? I am an AI chatbot capable of generating thorough responses, and I\'m designed to have helpful, inclusive conversations with users. \\n" +\n    \'\\n\' +\n    "If you have any questions, feel free to ask away, and I\'ll do my best to provide you with helpful responses. \\n" +\n    \'\\n\' +\n    \'Would you like me to help you with anything in particular right now?\',\n  additional_kwargs: {\n    response_id: \'c6baa057-ef94-4bb0-9c25-3a424963a074\',\n    generationId: \'d824fcdc-b922-4ae6-8d45-7b65a21cdd6a\',\n    token_count: {\n      prompt_tokens: 66,\n      response_tokens: 104,\n      total_tokens: 170,\n      billed_tokens: 159\n    },\n    meta: { api_version: [Object], billed_units: [Object] },\n    tool_inputs: null\n  }\n}\n */\n',imports:[{local:"ChatCohere",imported:"ChatCohere",source:"@langchain/cohere"},{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"}]}},88818:e=>{e.exports={content:'import { ChatCohere } from "@langchain/cohere";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport { StringOutputParser } from "@langchain/core/output_parsers";\n\nconst model = new ChatCohere({\n  apiKey: process.env.COHERE_API_KEY, // Default\n  model: "command", // Default\n});\nconst prompt = ChatPromptTemplate.fromMessages([\n  ["ai", "You are a helpful assistant"],\n  ["human", "{input}"],\n]);\nconst outputParser = new StringOutputParser();\nconst chain = prompt.pipe(model).pipe(outputParser);\nconst response = await chain.stream({\n  input: "Why is the sky blue? Be concise with your answer.",\n});\nlet streamTokens = "";\nlet streamIters = 0;\nfor await (const item of response) {\n  streamTokens += item;\n  streamIters += 1;\n}\nconsole.log("stream tokens:", streamTokens);\nconsole.log("stream iters:", streamIters);\n/**\nstream item:\nstream item: Hello! I\'m here to help answer any questions you\nstream item:  might have or assist you with any task you\'d like to\nstream item:  accomplish. I can provide information\nstream item:  on a wide range of topics\nstream item: , from math and science to history and literature. I can\nstream item:  also help you manage your schedule, set reminders, and\nstream item:  much more. Is there something specific you need help with? Let\nstream item:  me know!\nstream item:\n */\n',imports:[{local:"ChatCohere",imported:"ChatCohere",source:"@langchain/cohere"},{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"},{local:"StringOutputParser",imported:"StringOutputParser",source:"@langchain/core/output_parsers"}]}},15614:e=>{e.exports={content:'import { ChatCohere } from "@langchain/cohere";\nimport { HumanMessage } from "@langchain/core/messages";\n\nconst model = new ChatCohere({\n  apiKey: process.env.COHERE_API_KEY, // Default\n  model: "command", // Default\n});\n\nconst response = await model.invoke(\n  [new HumanMessage("How tall are the largest pengiuns?")],\n  {\n    connectors: [{ id: "web-search" }],\n  }\n);\nconsole.log("response: ", JSON.stringify(response, null, 2));\n/**\nresponse:  {\n  "lc": 1,\n  "type": "constructor",\n  "id": [\n    "langchain_core",\n    "messages",\n    "AIMessage"\n  ],\n  "kwargs": {\n    "content": "The tallest penguin species currently in existence is the Emperor Penguin, with a height of 110cm to the top of their head or 115cm to the tip of their beak. This is equivalent to being approximately 3 feet and 7 inches tall.\\n\\nA fossil of an Anthropornis penguin was found in New Zealand and is suspected to have been even taller at 1.7 metres, though this is uncertain as the fossil is only known from preserved arm and leg bones. The height of a closely related species, Kumimanu biceae, has been estimated at 1.77 metres.\\n\\nDid you know that because larger-bodied penguins can hold their breath for longer, the colossus penguin could have stayed underwater for 40 minutes or more?",\n    "additional_kwargs": {\n      "response_id": "a3567a59-2377-439d-894f-0309f7fea1de",\n      "generationId": "65dc5b1b-6099-44c4-8338-50eed0d427c5",\n      "token_count": {\n        "prompt_tokens": 1394,\n        "response_tokens": 149,\n        "total_tokens": 1543,\n        "billed_tokens": 159\n      },\n      "meta": {\n        "api_version": {\n          "version": "1"\n        },\n        "billed_units": {\n          "input_tokens": 10,\n          "output_tokens": 149\n        }\n      },\n      "citations": [\n        {\n          "start": 58,\n          "end": 73,\n          "text": "Emperor Penguin",\n          "documentIds": [\n            "web-search_3:2",\n            "web-search_4:10"\n          ]\n        },\n        {\n          "start": 92,\n          "end": 157,\n          "text": "110cm to the top of their head or 115cm to the tip of their beak.",\n          "documentIds": [\n            "web-search_4:10"\n          ]\n        },\n        {\n          "start": 200,\n          "end": 225,\n          "text": "3 feet and 7 inches tall.",\n          "documentIds": [\n            "web-search_3:2",\n            "web-search_4:10"\n          ]\n        },\n        {\n          "start": 242,\n          "end": 262,\n          "text": "Anthropornis penguin",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 276,\n          "end": 287,\n          "text": "New Zealand",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 333,\n          "end": 343,\n          "text": "1.7 metres",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 403,\n          "end": 431,\n          "text": "preserved arm and leg bones.",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 473,\n          "end": 488,\n          "text": "Kumimanu biceae",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 512,\n          "end": 524,\n          "text": "1.77 metres.",\n          "documentIds": [\n            "web-search_9:4"\n          ]\n        },\n        {\n          "start": 613,\n          "end": 629,\n          "text": "colossus penguin",\n          "documentIds": [\n            "web-search_3:2"\n          ]\n        },\n        {\n          "start": 663,\n          "end": 681,\n          "text": "40 minutes or more",\n          "documentIds": [\n            "web-search_3:2"\n          ]\n        }\n      ],\n      "documents": [\n        {\n          "id": "web-search_3:2",\n          "snippet": " By comparison, the largest species of penguin alive today, the emperor penguin, is \\"only\\" about 4 feet tall and can weigh as much as 100 pounds.\\n\\nInterestingly, because larger bodied penguins can hold their breath for longer, the colossus penguin probably could have stayed underwater for 40 minutes or more. It boggles the mind to imagine the kinds of huge, deep sea fish this mammoth bird might have been capable of hunting.\\n\\nThe fossil was found at the La Meseta formation on Seymour Island, an island in a chain of 16 major islands around the tip of the Graham Land on the Antarctic Peninsula.",\n          "title": "Giant 6-Foot-8 Penguin Discovered in Antarctica",\n          "url": "https://www.treehugger.com/giant-foot-penguin-discovered-in-antarctica-4864169"\n        },\n        {\n          "id": "web-search_4:10",\n          "snippet": "\\n\\nWhat is the Tallest Penguin?\\n\\nThe tallest penguin is the Emperor Penguin which is 110cm to the top of their head or 115cm to the tip of their beak.\\n\\nHow Tall Are Emperor Penguins in Feet?\\n\\nAn Emperor Penguin is about 3 feet and 7 inches to the top of its head. They are the largest penguin species currently in existence.\\n\\nHow Much Do Penguins Weigh in Pounds?\\n\\nPenguins weigh between 2.5lbs for the smallest species, the Little Penguin, up to 82lbs for the largest species, the Emperor Penguin.\\n\\nDr. Jackie Symmons is a professional ecologist with a Ph.D. in Ecology and Wildlife Management from Bangor University and over 25 years of experience delivering conservation projects.",\n          "title": "How Big Are Penguins? [Height & Weight of Every Species] - Polar Guidebook",\n          "url": "https://polarguidebook.com/how-big-are-penguins/"\n        },\n        {\n          "id": "web-search_9:4",\n          "snippet": "\\n\\nA fossil of an Anthropornis penguin found on the island may have been even taller, but this is likely to be an exception. The majority of these penguins were only 1.7 metres tall and weighed around 80 kilogrammes.\\n\\nWhile Palaeeudyptes klekowskii remains the tallest ever penguin, it is no longer the heaviest. At an estimated 150 kilogrammes, Kumimanu fordycei would have been around three times heavier than any living penguin.\\n\\nWhile it\'s uncertain how tall the species was, the height of a closely related species, Kumimanu biceae, has been estimated at 1.77 metres.\\n\\nThese measurements, however, are all open for debate. Many fossil penguins are only known from preserved arm and leg bones, rather than complete skeletons.",\n          "title": "The largest ever penguin species has been discovered in New Zealand | Natural History Museum",\n          "url": "https://www.nhm.ac.uk/discover/news/2023/february/largest-ever-penguin-species-discovered-new-zealand.html"\n        }\n      ],\n      "searchResults": [\n        {\n          "searchQuery": {\n            "text": "largest penguin species height",\n            "generationId": "908fe321-5d27-48c4-bdb6-493be5687344"\n          },\n          "documentIds": [\n            "web-search_3:2",\n            "web-search_4:10",\n            "web-search_9:4"\n          ],\n          "connector": {\n            "id": "web-search"\n          }\n        }\n      ],\n      "tool_inputs": null,\n      "searchQueries": [\n        {\n          "text": "largest penguin species height",\n          "generationId": "908fe321-5d27-48c4-bdb6-493be5687344"\n        }\n      ]\n    }\n  }\n}\n */\n',imports:[{local:"ChatCohere",imported:"ChatCohere",source:"@langchain/cohere"},{local:"HumanMessage",imported:"HumanMessage",source:"@langchain/core/messages"}]}},32154:e=>{e.exports={content:'import { ChatCohere } from "@langchain/cohere";\nimport { HumanMessage } from "@langchain/core/messages";\n\nconst model = new ChatCohere({\n  apiKey: process.env.COHERE_API_KEY, // Default\n  model: "command", // Default\n});\n\nconst documents = [\n  {\n    title: "Harrison\'s work",\n    snippet: "Harrison worked at Kensho as an engineer.",\n  },\n  {\n    title: "Harrison\'s work duration",\n    snippet: "Harrison worked at Kensho for 3 years.",\n  },\n  {\n    title: "Polar berars in the Appalachian Mountains",\n    snippet:\n      "Polar bears have surprisingly adapted to the Appalachian Mountains, thriving in the diverse, forested terrain despite their traditional arctic habitat. This unique situation has sparked significant interest and study in climate adaptability and wildlife behavior.",\n  },\n];\n\nconst response = await model.invoke(\n  [new HumanMessage("Where did Harrison work and for how long?")],\n  {\n    documents,\n  }\n);\nconsole.log("response: ", response.content);\n/**\nresponse:  Harrison worked as an engineer at Kensho for about 3 years.\n */\n',imports:[{local:"ChatCohere",imported:"ChatCohere",source:"@langchain/cohere"},{local:"HumanMessage",imported:"HumanMessage",source:"@langchain/core/messages"}]}},36430:e=>{e.exports={content:'import { ChatCohere } from "@langchain/cohere";\nimport { HumanMessage } from "@langchain/core/messages";\n\nconst model = new ChatCohere({\n  apiKey: process.env.COHERE_API_KEY, // Default\n  model: "command", // Default\n});\n\nconst conversationId = `demo_test_id-${Math.random()}`;\n\nconst response = await model.invoke(\n  [new HumanMessage("Tell me a joke about bears.")],\n  {\n    conversationId,\n  }\n);\nconsole.log("response: ", response.content);\n/**\nresponse:  Why did the bear go to the dentist?\n\nBecause she had bear teeth!\n\nHope you found that joke about bears to be a little bit tooth-arious!\n\nWould you like me to tell you another one? I could also provide you with a list of jokes about bears if you prefer.\n\nJust let me know if you have any other jokes or topics you\'d like to hear about!\n */\n\nconst response2 = await model.invoke(\n  [new HumanMessage("What was the subject of my last question?")],\n  {\n    conversationId,\n  }\n);\nconsole.log("response2: ", response2.content);\n/**\nresponse2:  Your last question was about bears. You asked me to tell you a joke about bears, which I am programmed to assist with.\n\nWould you like me to assist you with anything else bear-related? I can provide you with facts about bears, stories about bears, or even list other topics that might be of interest to you.\n\nPlease let me know if you have any other questions and I will do my best to provide you with a response.\n */\n',imports:[{local:"ChatCohere",imported:"ChatCohere",source:"@langchain/cohere"},{local:"HumanMessage",imported:"HumanMessage",source:"@langchain/core/messages"}]}}}]);