(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5767,65],{30300:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>g,default:()=>u,frontMatter:()=>d,metadata:()=>c,toc:()=>p});var o=t(74848),i=t(28453),s=t(64428),a=t(78847),r=t(41792),l=t.n(r);const d={sidebar_label:"Google PaLM"},g="Google PaLM",c={id:"integrations/text_embedding/google_palm",title:"Google PaLM",description:"This integration does not support embeddings-* model. Check Google AI embeddings.",source:"@site/docs/integrations/text_embedding/google_palm.mdx",sourceDirName:"integrations/text_embedding",slug:"/integrations/text_embedding/google_palm",permalink:"/docs/integrations/text_embedding/google_palm",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/text_embedding/google_palm.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Google PaLM"},sidebar:"integrations",previous:{title:"Google AI",permalink:"/docs/integrations/text_embedding/google_generativeai"},next:{title:"Google Vertex AI",permalink:"/docs/integrations/text_embedding/google_vertex_ai"}},m={},p=[...a.toc];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"google-palm",children:"Google PaLM"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["This integration does not support ",(0,o.jsx)(n.code,{children:"embeddings-*"})," model. Check ",(0,o.jsx)(n.a,{href:"/docs/integrations/text_embedding/google_generativeai",children:"Google AI"})," embeddings."]})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://developers.generativeai.google/products/palm",children:"Google PaLM API"})," can be integrated by first\ninstalling the required packages:"]}),"\n","\n",(0,o.jsx)(a.default,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install google-auth-library @google-ai/generativelanguage @langchain/community\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Create an ",(0,o.jsx)(n.strong,{children:"API key"})," from ",(0,o.jsx)(n.a,{href:"https://makersuite.google.com/app/apikey",children:"Google MakerSuite"}),". You can then set\nthe key as ",(0,o.jsx)(n.code,{children:"GOOGLE_PALM_API_KEY"})," environment variable or pass it as ",(0,o.jsx)(n.code,{children:"apiKey"})," parameter while instantiating\nthe model."]}),"\n","\n",(0,o.jsx)(s.A,{language:"typescript",children:l()})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},78847:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=t(74848),i=t(28453);const s={},a=void 0,r={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},l={},d=[];function g(e){const n={a:"a",admonition:"admonition",p:"p",...(0,i.R)(),...e.components};return(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},41792:e=>{e.exports={content:'import { GooglePaLMEmbeddings } from "@langchain/community/embeddings/googlepalm";\n\nconst model = new GooglePaLMEmbeddings({\n  apiKey: "<YOUR API KEY>", // or set it in environment variable as `GOOGLE_PALM_API_KEY`\n  model: "models/embedding-gecko-001", // OPTIONAL\n});\n/* Embed queries */\nconst res = await model.embedQuery(\n  "What would be a good company name for a company that makes colorful socks?"\n);\nconsole.log({ res });\n/* Embed documents */\nconst documentRes = await model.embedDocuments(["Hello world", "Bye bye"]);\nconsole.log({ documentRes });\n',imports:[{local:"GooglePaLMEmbeddings",imported:"GooglePaLMEmbeddings",source:"@langchain/community/embeddings/googlepalm"}]}}}]);