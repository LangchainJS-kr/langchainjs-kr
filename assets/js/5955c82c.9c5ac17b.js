"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5351],{63001:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(74848),s=t(28453);const a={sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},o="How to write a custom retriever class",i={id:"how_to/custom_retriever",title:"How to write a custom retriever class",description:"This guide assumes familiarity with the following concepts:",source:"@site/docs/how_to/custom_retriever.mdx",sourceDirName:"how_to",slug:"/how_to/custom_retriever",permalink:"/docs/how_to/custom_retriever",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/custom_retriever.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},sidebar:"tutorialSidebar"},c={},l=[{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"how-to-write-a-custom-retriever-class",children:"How to write a custom retriever class"}),"\n",(0,r.jsxs)(n.admonition,{title:"Prerequisites",type:"info",children:[(0,r.jsx)(n.p,{children:"This guide assumes familiarity with the following concepts:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/concepts/#retrievers",children:"Retrievers"})}),"\n"]})]}),"\n",(0,r.jsxs)(n.p,{children:["To create your own retriever, you need to extend the ",(0,r.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_retrievers.BaseRetriever.html",children:(0,r.jsx)(n.code,{children:"BaseRetriever"})})," class\nand implement a ",(0,r.jsx)(n.code,{children:"_getRelevantDocuments"})," method that takes a ",(0,r.jsx)(n.code,{children:"string"})," as its first parameter (and an optional ",(0,r.jsx)(n.code,{children:"runManager"})," for tracing).\nThis method should return an array of ",(0,r.jsx)(n.code,{children:"Document"}),"s fetched from some source. This process can involve calls to a database, to the web using ",(0,r.jsx)(n.code,{children:"fetch"}),", or any other source.\nNote the underscore before ",(0,r.jsx)(n.code,{children:"_getRelevantDocuments()"}),". The base class wraps the non-prefixed version in order to automatically handle tracing of the original call."]}),"\n",(0,r.jsx)(n.p,{children:"Here's an example of a custom retriever that returns static documents:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import {\n  BaseRetriever,\n  type BaseRetrieverInput,\n} from "@langchain/core/retrievers";\nimport type { CallbackManagerForRetrieverRun } from "@langchain/core/callbacks/manager";\nimport { Document } from "@langchain/core/documents";\n\nexport interface CustomRetrieverInput extends BaseRetrieverInput {}\n\nexport class CustomRetriever extends BaseRetriever {\n  lc_namespace = ["langchain", "retrievers"];\n\n  constructor(fields?: CustomRetrieverInput) {\n    super(fields);\n  }\n\n  async _getRelevantDocuments(\n    query: string,\n    runManager?: CallbackManagerForRetrieverRun\n  ): Promise<Document[]> {\n    // Pass `runManager?.getChild()` when invoking internal runnables to enable tracing\n    // const additionalDocs = await someOtherRunnable.invoke(params, runManager?.getChild());\n    return [\n      // ...additionalDocs,\n      new Document({\n        pageContent: `Some document pertaining to ${query}`,\n        metadata: {},\n      }),\n      new Document({\n        pageContent: `Some other document pertaining to ${query}`,\n        metadata: {},\n      }),\n    ];\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then, you can call ",(0,r.jsx)(n.code,{children:".invoke()"})," as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const retriever = new CustomRetriever({});\n\nawait retriever.invoke("LangChain docs");\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[\n  Document {\n    pageContent: 'Some document pertaining to LangChain docs',\n    metadata: {}\n  },\n  Document {\n    pageContent: 'Some other document pertaining to LangChain docs',\n    metadata: {}\n  }\n]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,r.jsx)(n.p,{children:"You've now seen an example of implementing your own custom retriever."}),"\n",(0,r.jsxs)(n.p,{children:["Next, check out the individual sections for deeper dives on specific retrievers, or the ",(0,r.jsx)(n.a,{href:"/docs/tutorials/rag",children:"broader tutorial on RAG"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);