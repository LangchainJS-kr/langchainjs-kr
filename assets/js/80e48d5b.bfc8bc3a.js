"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7773],{40166:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>r});var o=a(74848),t=a(28453);const s={hide_table_of_contents:!0,sidebar_class_name:"node-only"},c="Couchbase",i={id:"integrations/document_loaders/web_loaders/couchbase",title:"Couchbase",description:"Couchbase is an award-winning distributed NoSQL cloud database that delivers unmatched versatility, performance, scalability, and financial value for all of your cloud, mobile, AI, and edge computing applications.",source:"@site/docs/integrations/document_loaders/web_loaders/couchbase.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/couchbase",permalink:"/docs/integrations/document_loaders/web_loaders/couchbase",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/couchbase.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0,sidebar_class_name:"node-only"},sidebar:"integrations",previous:{title:"Confluence",permalink:"/docs/integrations/document_loaders/web_loaders/confluence"},next:{title:"Figma",permalink:"/docs/integrations/document_loaders/web_loaders/figma"}},d={},r=[{value:"Usage",id:"usage",level:2},{value:"Querying for Documents from Couchbase",id:"querying-for-documents-from-couchbase",level:3},{value:"Connect to Couchbase Cluster",id:"connect-to-couchbase-cluster",level:3},{value:"Create the Loader",id:"create-the-loader",level:3},{value:"Load Documents",id:"load-documents",level:3},{value:"Specifying Fields with Content and Metadata",id:"specifying-fields-with-content-and-metadata",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"couchbase",children:"Couchbase"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"http://couchbase.com/",children:"Couchbase"})," is an award-winning distributed NoSQL cloud database that delivers unmatched versatility, performance, scalability, and financial value for all of your cloud, mobile, AI, and edge computing applications."]}),"\n",(0,o.jsx)(n.p,{children:"This guide shows how to use load documents from couchbase database."}),"\n",(0,o.jsx)(n.h1,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install couchbase\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"querying-for-documents-from-couchbase",children:"Querying for Documents from Couchbase"}),"\n",(0,o.jsxs)(n.p,{children:["For more details on connecting to a Couchbase cluster, please check the ",(0,o.jsx)(n.a,{href:"https://docs.couchbase.com/nodejs-sdk/current/howtos/managing-connections.html#connection-strings",children:"Node.js SDK documentation"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["For help with querying for documents using SQL++ (SQL for JSON), please check the ",(0,o.jsx)(n.a,{href:"https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html",children:"documentation"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { CouchbaseDocumentLoader } from "langchain/document_loaders/web/couchbase";\nimport { Cluster } from "couchbase";\n\nconst connectionString = "couchbase://localhost"; // valid couchbase connection string\nconst dbUsername = "Administrator"; // valid database user with read access to the bucket being queried\nconst dbPassword = "Password"; // password for the database user\n\n// query is a valid SQL++ query\nconst query = `\n    SELECT h.* FROM \\`travel-sample\\`.inventory.hotel h \n    WHERE h.country = \'United States\'\n    LIMIT 1\n`;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"connect-to-couchbase-cluster",children:"Connect to Couchbase Cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'const couchbaseClient = await Cluster.connect(connectionString, {\n  username: dbUsername,\n  password: dbPassword,\n  configProfile: "wanDevelopment",\n});\n'})}),"\n",(0,o.jsx)(n.h3,{id:"create-the-loader",children:"Create the Loader"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const loader = new CouchbaseDocumentLoader(\n  couchbaseClient, // The connected couchbase cluster client\n  query // A valid SQL++ query which will return the required data\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"load-documents",children:"Load Documents"}),"\n",(0,o.jsxs)(n.p,{children:["You can fetch the documents by calling the ",(0,o.jsx)(n.code,{children:"load"})," method of the loader. It will return a list with all the documents. If you want to avoid this blocking call, you can call ",(0,o.jsx)(n.code,{children:"lazy_load"})," method that returns an Iterator."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// using load method\ndocs = await loader.load();\nconsole.log(docs);\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// using lazy_load\nfor await (const doc of this.lazyLoad()) {\n  console.log(doc);\n  break; // break based on required condition\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"specifying-fields-with-content-and-metadata",children:"Specifying Fields with Content and Metadata"}),"\n",(0,o.jsxs)(n.p,{children:["The fields that are part of the Document content can be specified using the ",(0,o.jsx)(n.code,{children:"pageContentFields"})," parameter.\nThe metadata fields for the Document can be specified using the ",(0,o.jsx)(n.code,{children:"metadataFields"})," parameter."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'const loaderWithSelectedFields = new CouchbaseDocumentLoader(\n  couchbaseClient,\n  query,\n  // pageContentFields\n  [\n    "address",\n    "name",\n    "city",\n    "phone",\n    "country",\n    "geo",\n    "description",\n    "reviews",\n  ],\n  ["id"] // metadataFields\n);\n\nconst filtered_docs = await loaderWithSelectedFields.load();\nconsole.log(filtered_docs);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);