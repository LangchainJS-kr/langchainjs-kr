"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3205],{3386:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(4848),s=t(8453);const o={sidebar_position:1},r="Contribute Code",l={id:"contributing/code",title:"Contribute Code",description:'To contribute to this project, please follow the "fork and pull request" workflow.',source:"@site/docs/contributing/code.mdx",sourceDirName:"contributing",slug:"/contributing/code",permalink:"/docs/contributing/code",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/contributing/code.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1}},a={},d=[{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"\ud83c\udfed Release process",id:"-release-process",level:3},{value:"Integration releases",id:"integration-releases",level:4},{value:"\ud83d\udee0\ufe0f Tooling",id:"\ufe0f-tooling",level:3},{value:"\ud83d\ude80 Quick Start",id:"-quick-start-1",level:2},{value:"\u2705 Common Tasks",id:"-common-tasks",level:2},{value:"Setup",id:"setup",level:3},{value:"Linting",id:"linting",level:3},{value:"Formatting",id:"formatting",level:3},{value:"Testing",id:"testing",level:3},{value:"Running a single test",id:"running-a-single-test",level:4},{value:"Building",id:"building",level:3},{value:"Adding an Entrypoint",id:"adding-an-entrypoint",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Contribute Documentation",id:"contribute-documentation",level:3},{value:"Install dependencies",id:"install-dependencies",level:4},{value:"Note: you only need to follow these steps if you are building the docs site locally.",id:"note-you-only-need-to-follow-these-steps-if-you-are-building-the-docs-site-locally",level:5},{value:"Writing Notebooks",id:"writing-notebooks",level:3},{value:"Running examples",id:"running-examples",level:3},{value:"Build Documentation Locally",id:"build-documentation-locally",level:3},{value:"Advanced",id:"advanced",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"contribute-code",children:"Contribute Code"}),"\n",(0,i.jsxs)(n.p,{children:["To contribute to this project, please follow the ",(0,i.jsx)(n.a,{href:"https://docs.github.com/en/get-started/quickstart/contributing-to-projects",children:'"fork and pull request"'})," workflow.\nPlease do not try to push directly to this repo unless you are a maintainer."]}),"\n",(0,i.jsx)(n.p,{children:"Please follow the checked-in pull request template when opening pull requests. Note related issues and tag relevant\nmaintainers."}),"\n",(0,i.jsxs)(n.p,{children:["Pull requests cannot land without passing the formatting, linting, and testing checks first. See ",(0,i.jsx)(n.a,{href:"#testing",children:"Testing"})," and\n",(0,i.jsx)(n.a,{href:"#formatting-and-linting",children:"Formatting and Linting"})," for how to run these checks locally."]}),"\n",(0,i.jsx)(n.p,{children:"It's essential that we maintain great documentation and testing. If you:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Fix a bug","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add a relevant unit or integration test when possible. These live in ",(0,i.jsx)(n.code,{children:"**/tests/*.test.ts"})," and ",(0,i.jsx)(n.code,{children:"**/tests/*.int.test.ts/"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Make an improvement","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Update any affected example notebooks and documentation. These live in ",(0,i.jsx)(n.code,{children:"docs"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Update unit and integration tests when relevant."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Add a feature","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add a demo notebook/MDX file in ",(0,i.jsx)(n.code,{children:"docs/core_docs/docs"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Add unit and integration tests."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We are a small, progress-oriented team. If there's something you'd like to add or change, opening a pull request is the\nbest way to get our attention."}),"\n",(0,i.jsx)(n.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,i.jsxs)(n.p,{children:["This quick start guide explains how to run the repository locally.\nFor a ",(0,i.jsx)(n.a,{href:"https://containers.dev/",children:"development container"}),", see the ",(0,i.jsx)(n.a,{href:"https://github.com/langchain-ai/langchainjs/tree/main/.devcontainer",children:".devcontainer folder"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"-release-process",children:"\ud83c\udfed Release process"}),"\n",(0,i.jsxs)(n.p,{children:["As of now, LangChain has an ad hoc release process: releases are cut with high frequency by\na developer and published to ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/langchain",children:"npm"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["LangChain follows the ",(0,i.jsx)(n.a,{href:"https://semver.org/",children:"semver"})," versioning standard. However, as pre-1.0 software,\neven patch releases may contain ",(0,i.jsx)(n.a,{href:"https://semver.org/#spec-item-4",children:"non-backwards-compatible changes"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"If your contribution has made its way into a release, we will want to give you credit on Twitter (only if you want though)!\nIf you have a Twitter account you would like us to mention, please let us know in the PR or in another manner."}),"\n",(0,i.jsx)(n.h4,{id:"integration-releases",children:"Integration releases"}),"\n",(0,i.jsxs)(n.p,{children:["The release script can be executed only while on a fresh ",(0,i.jsx)(n.code,{children:"main"})," branch, with no un-committed changes, from the package root. If working from a fork of the repository, make sure to sync the forked ",(0,i.jsx)(n.code,{children:"main"})," branch with the upstream ",(0,i.jsx)(n.code,{children:"main"})," branch first."]}),"\n",(0,i.jsxs)(n.p,{children:["You can invoke the script by calling ",(0,i.jsx)(n.code,{children:"yarn release"}),". If new dependencies have been added to the integration package, install them first (i.e. run ",(0,i.jsx)(n.code,{children:"yarn"}),", then ",(0,i.jsx)(n.code,{children:"yarn release"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"There are three parameters which can be passed to this script, one required and two optional."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Required"}),": ",(0,i.jsx)(n.code,{children:"<workspace name>"}),". eg: ",(0,i.jsx)(n.code,{children:"@langchain/core"})," The name of the package to release. Can be found in the ",(0,i.jsx)(n.code,{children:"name"})," value of the package's ",(0,i.jsx)(n.code,{children:"package.json"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optional"}),": ",(0,i.jsx)(n.code,{children:"--bump-deps"})," eg ",(0,i.jsx)(n.code,{children:"--bump-deps"})," Will find all packages in the repo which depend on this workspace and checkout a new branch, update the dep version, run yarn install, commit & push to new branch. Generally, this is not necessary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optional"}),": ",(0,i.jsx)(n.code,{children:"--tag <tag>"})," eg ",(0,i.jsx)(n.code,{children:"--tag beta"})," Add a tag to the NPM release. Useful if you want to push a release candidate."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This script automatically bumps the package version, creates a new release branch with the changes, pushes the branch to GitHub, uses ",(0,i.jsx)(n.code,{children:"release-it"})," to automatically release to NPM, and more depending on the flags passed."]}),"\n",(0,i.jsx)(n.p,{children:"Halfway through this script, you'll be prompted to enter an NPM OTP (typically from an authenticator app). This value is not stored anywhere and is only used to authenticate the NPM release."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"})," Unless releasing ",(0,i.jsx)(n.code,{children:"langchain"}),", ",(0,i.jsx)(n.code,{children:"no"})," should be answered to all prompts following ",(0,i.jsx)(n.code,{children:"Publish @langchain/<package> to npm?"}),". Then, the change should be manually committed with the following commit message: ",(0,i.jsx)(n.code,{children:"<package>[patch]: Release <new version>"}),". E.g.: ",(0,i.jsx)(n.code,{children:"groq[patch]: Release 0.0.1"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Docker must be running if releasing one of ",(0,i.jsx)(n.code,{children:"langchain"}),", ",(0,i.jsx)(n.code,{children:"@langchain/core"})," or ",(0,i.jsx)(n.code,{children:"@langchain/community"}),". These packages run LangChain's export tests, which run inside docker containers."]}),"\n",(0,i.jsxs)(n.p,{children:["Full example: ",(0,i.jsx)(n.code,{children:"yarn release @langchain/core"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-tooling",children:"\ud83d\udee0\ufe0f Tooling"}),"\n",(0,i.jsx)(n.p,{children:"This project uses the following tools, which are worth getting familiar\nwith if you plan to contribute:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.a,{href:"https://yarnpkg.com/",children:"yarn"})," (v3.4.1)"]})," - dependency management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/",children:"eslint"})})," - enforcing standard lint rules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://prettier.io/",children:"prettier"})})," - enforcing standard code formatting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://jestjs.io/",children:"jest"})})," - testing code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://typedoc.org/",children:"TypeDoc"})})," - reference doc generation from\ncomments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://docusaurus.io/",children:"Docusaurus"})})," - static site generation for documentation"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-quick-start-1",children:"\ud83d\ude80 Quick Start"}),"\n",(0,i.jsx)(n.p,{children:"Clone this repo, then cd into it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd langchainjs\n"})}),"\n",(0,i.jsx)(n.p,{children:"Next, try running the following common tasks:"}),"\n",(0,i.jsx)(n.h2,{id:"-common-tasks",children:"\u2705 Common Tasks"}),"\n",(0,i.jsxs)(n.p,{children:["Our goal is to make it as easy as possible for you to contribute to this project.\nAll of the below commands should be run from within a workspace directory (e.g. ",(0,i.jsx)(n.code,{children:"langchain"}),", ",(0,i.jsx)(n.code,{children:"libs/langchain-community"}),") unless otherwise noted."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd langchain\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or, if you are working on a community integration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd libs/langchain-community\n"})}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Prerequisite"}),": Node version 18+ is required. Please check node version ",(0,i.jsx)(n.code,{children:"node -v"})," and update it if required."]}),"\n",(0,i.jsx)(n.p,{children:"To get started, you will need to install the dependencies for the project. To do so, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then, you will need to switch directories into ",(0,i.jsx)(n.code,{children:"langchain-core"})," and build core by running:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ../langchain-core\nyarn\nyarn build\n"})}),"\n",(0,i.jsx)(n.h3,{id:"linting",children:"Linting"}),"\n",(0,i.jsxs)(n.p,{children:["We use ",(0,i.jsx)(n.a,{href:"https://eslint.org/",children:"eslint"})," to enforce standard lint rules.\nTo run the linter, run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn lint\n"})}),"\n",(0,i.jsx)(n.h3,{id:"formatting",children:"Formatting"}),"\n",(0,i.jsxs)(n.p,{children:["We use ",(0,i.jsx)(n.a,{href:"https://prettier.io",children:"prettier"})," to enforce code formatting style.\nTo run the formatter, run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn format\n"})}),"\n",(0,i.jsx)(n.p,{children:"To just check for formatting differences, without fixing them, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn format:check\n"})}),"\n",(0,i.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,i.jsxs)(n.p,{children:["In general, tests should be added within a ",(0,i.jsx)(n.code,{children:"tests/"})," folder alongside the modules they\nare testing."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Unit tests"})," cover modular logic that does not require calls to outside APIs."]}),"\n",(0,i.jsxs)(n.p,{children:["If you add new logic, please add a unit test.\nUnit tests should be called ",(0,i.jsx)(n.code,{children:"*.test.ts"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"To run only unit tests, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn test\n"})}),"\n",(0,i.jsx)(n.h4,{id:"running-a-single-test",children:"Running a single test"}),"\n",(0,i.jsx)(n.p,{children:"To run a single test, run the following from within a workspace:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn test:single /path/to/yourtest.test.ts\n"})}),"\n",(0,i.jsx)(n.p,{children:"This is useful for developing individual features."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Integration tests"})," cover logic that requires making calls to outside APIs (often integration with other services)."]}),"\n",(0,i.jsxs)(n.p,{children:["If you add support for a new external API, please add a new integration test.\nIntegration tests should be called ",(0,i.jsx)(n.code,{children:"*.int.test.ts"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that most integration tests require credentials or other setup. You will likely need to set up a ",(0,i.jsx)(n.code,{children:"langchain/.env"})," or ",(0,i.jsx)(n.code,{children:"libs/langchain-community/.env"})," file\nlike the example ",(0,i.jsx)(n.a,{href:"https://github.com/langchain-ai/langchainjs/blob/main/langchain/.env.example",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["We generally recommend only running integration tests with ",(0,i.jsx)(n.code,{children:"yarn test:single"}),", but if you want to run all integration tests, run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn test:integration\n"})}),"\n",(0,i.jsx)(n.h3,{id:"building",children:"Building"}),"\n",(0,i.jsx)(n.p,{children:"To build the project, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn build\n"})}),"\n",(0,i.jsx)(n.h3,{id:"adding-an-entrypoint",children:"Adding an Entrypoint"}),"\n",(0,i.jsx)(n.p,{children:"LangChain exposes multiple subpaths the user can import from, e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { OpenAI } from "langchain/llms/openai";\n'})}),"\n",(0,i.jsx)(n.p,{children:'We call these subpaths "entrypoints". In general, you should create a new entrypoint if you are adding a new integration with a 3rd party library. If you\'re adding self-contained functionality without any external dependencies, you can add it to an existing entrypoint.'}),"\n",(0,i.jsxs)(n.p,{children:["In order to declare a new entrypoint that users can import from, you\nshould edit the ",(0,i.jsx)(n.code,{children:"langchain/langchain.config.js"})," or ",(0,i.jsx)(n.code,{children:"libs/langchain-community/langchain.config.js"})," file. To add an\nentrypoint ",(0,i.jsx)(n.code,{children:"tools"})," that imports from ",(0,i.jsx)(n.code,{children:"tools/index.ts"})," you'd add\nthe following to the ",(0,i.jsx)(n.code,{children:"entrypoints"})," key inside the ",(0,i.jsx)(n.code,{children:"config"})," variable:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// ...\nentrypoints: {\n  // ...\n  tools: "tools/index",\n},\n// ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you're adding a new integration which requires installing a third party dependency, you must add the entrypoint to the ",(0,i.jsx)(n.code,{children:"requiresOptionalDependency"})," array, also located inside ",(0,i.jsx)(n.code,{children:"langchain/langchain.config.js"})," or ",(0,i.jsx)(n.code,{children:"libs/langchain-community/langchain.config.js"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// ...\nrequiresOptionalDependency: [\n  // ...\n  "tools/index",\n],\n// ...\n'})}),"\n",(0,i.jsx)(n.p,{children:"This will make sure the entrypoint is included in the published package,\nand in generated documentation."}),"\n",(0,i.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsx)(n.h3,{id:"contribute-documentation",children:"Contribute Documentation"}),"\n",(0,i.jsx)(n.h4,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,i.jsx)(n.h5,{id:"note-you-only-need-to-follow-these-steps-if-you-are-building-the-docs-site-locally",children:"Note: you only need to follow these steps if you are building the docs site locally."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://quarto.org/",children:"Quarto"})," - package that converts Jupyter notebooks (",(0,i.jsx)(n.code,{children:".ipynb"})," files) into ",(0,i.jsx)(n.code,{children:".mdx"})," files for serving in Docusaurus."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"yarn build --filter=core_docs"})," - It's as simple as that! (or you can simply run ",(0,i.jsx)(n.code,{children:"yarn build"})," from ",(0,i.jsx)(n.code,{children:"docs/core_docs/"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All notebooks are converted to ",(0,i.jsx)(n.code,{children:".md"})," files and automatically gitignored. If you would like to create a non notebook doc, it must be a ",(0,i.jsx)(n.code,{children:".mdx"})," file."]}),"\n",(0,i.jsx)(n.h3,{id:"writing-notebooks",children:"Writing Notebooks"}),"\n",(0,i.jsxs)(n.p,{children:["When adding new dependencies inside the notebook you must update the import map inside ",(0,i.jsx)(n.code,{children:"deno.json"})," in the root of the LangChain repo."]}),"\n",(0,i.jsx)(n.p,{children:"This is required because the notebooks use the Deno runtime, and Deno formats imports differently than Node.js."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Import in Node:\nimport { z } from "zod";\n// Import in Deno:\nimport { z } from "npm:/zod";\n'})}),"\n",(0,i.jsxs)(n.p,{children:["See examples inside ",(0,i.jsx)(n.code,{children:"deno.json"})," for more details."]}),"\n",(0,i.jsxs)(n.p,{children:["Docs are largely autogenerated by ",(0,i.jsx)(n.a,{href:"https://typedoc.org/",children:"TypeDoc"})," from the code."]}),"\n",(0,i.jsx)(n.p,{children:"For that reason, we ask that you add good documentation to all classes and methods."}),"\n",(0,i.jsx)(n.p,{children:"Similar to linting, we recognize documentation can be annoying. If you do not want to do it, please contact a project maintainer, and they can help you with it. We do not want this to be a blocker for good code getting contributed."}),"\n",(0,i.jsxs)(n.p,{children:["Documentation and the skeleton lives under the ",(0,i.jsx)(n.code,{children:"docs/"})," folder. Example code is imported from under the ",(0,i.jsx)(n.code,{children:"examples/"})," folder."]}),"\n",(0,i.jsx)(n.h3,{id:"running-examples",children:"Running examples"}),"\n",(0,i.jsx)(n.p,{children:"If you add a new major piece of functionality, it is helpful to add an\nexample to showcase how to use it. Most of our users find examples to be the\nmost helpful kind of documentation."}),"\n",(0,i.jsxs)(n.p,{children:["Examples can be added in the ",(0,i.jsx)(n.code,{children:"examples/src"})," directory, e.g.\n",(0,i.jsx)(n.code,{children:"examples/src/path/to/example"}),". This\nexample can then be invoked with ",(0,i.jsx)(n.code,{children:"yarn example path/to/example"})," at the top\nlevel of the repo."]}),"\n",(0,i.jsxs)(n.p,{children:["To run examples that require an environment variable, you'll need to add a ",(0,i.jsx)(n.code,{children:".env"})," file under ",(0,i.jsx)(n.code,{children:"examples/.env"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"build-documentation-locally",children:"Build Documentation Locally"}),"\n",(0,i.jsxs)(n.p,{children:["To generate and view the documentation locally, change to the project root and run ",(0,i.jsx)(n.code,{children:"yarn"})," to ensure dependencies get installed\nin both the ",(0,i.jsx)(n.code,{children:"docs/"})," and ",(0,i.jsx)(n.code,{children:"examples/"})," workspaces:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ..\nyarn\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn docs\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced",children:"Advanced"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Environment tests"})," test whether LangChain works across different JS environments, including Node.js (both ESM and CJS), Edge environments (eg. Cloudflare Workers), and browsers (using Webpack)."]}),"\n",(0,i.jsx)(n.p,{children:"To run the environment tests with Docker, run the following command from the project root:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn test:exports:docker\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);