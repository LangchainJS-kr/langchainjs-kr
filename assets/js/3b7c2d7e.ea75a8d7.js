(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6004],{7414:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>m,metadata:()=>h,toc:()=>p});var t=o(74848),s=o(28453),a=o(64428),i=o(78847),r=o(12736),c=o.n(r);const m={hide_table_of_contents:!0},l="Momento-Backed Chat Memory",h={id:"integrations/chat_memory/momento",title:"Momento-Backed Chat Memory",description:"For distributed, serverless persistence across chat sessions, you can swap in a Momento-backed chat message history.",source:"@site/docs/integrations/chat_memory/momento.mdx",sourceDirName:"integrations/chat_memory",slug:"/integrations/chat_memory/momento",permalink:"/docs/integrations/chat_memory/momento",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/chat_memory/momento.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0}},d={},p=[{value:"Setup",id:"setup",level:2},...i.toc,{value:"Usage",id:"usage",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"momento-backed-chat-memory",children:"Momento-Backed Chat Memory"}),"\n",(0,t.jsxs)(n.p,{children:["For distributed, serverless persistence across chat sessions, you can swap in a ",(0,t.jsx)(n.a,{href:"https://gomomento.com/",children:"Momento"}),"-backed chat message history.\nBecause a Momento cache is instantly available and requires zero infrastructure maintenance, it's a great way to get started with chat history whether building locally or in production."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.p,{children:["You will need to install the ",(0,t.jsx)(n.a,{href:"https://github.com/momentohq/client-sdk-javascript",children:"Momento Client Library"})," in your project. Given Momento's compatibility with Node.js, browser, and edge environments, ensure you install the relevant package."]}),"\n",(0,t.jsxs)(n.p,{children:["To install for ",(0,t.jsx)(n.strong,{children:"Node.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @gomomento/sdk\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To install for ",(0,t.jsx)(n.strong,{children:"browser/edge workers"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @gomomento/sdk-web\n"})}),"\n","\n",(0,t.jsx)(i.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You will also need an API key from ",(0,t.jsx)(n.a,{href:"https://gomomento.com/",children:"Momento"}),". You can sign up for a free account ",(0,t.jsx)(n.a,{href:"https://console.gomomento.com/",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To distinguish one chat history session from another, we need a unique ",(0,t.jsx)(n.code,{children:"sessionId"}),". You may also provide an optional ",(0,t.jsx)(n.code,{children:"sessionTtl"})," to make sessions expire after a given number of seconds."]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:c()})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},12736:e=>{e.exports={content:'import {\n  CacheClient,\n  Configurations,\n  CredentialProvider,\n} from "@gomomento/sdk"; // `from "gomomento/sdk-web";` for browser/edge\nimport { BufferMemory } from "langchain/memory/index";\nimport { ChatOpenAI } from "@langchain/openai";\nimport { ConversationChain } from "langchain/chains";\nimport { MomentoChatMessageHistory } from "@langchain/community/stores/message/momento";\n\n// See https://github.com/momentohq/client-sdk-javascript for connection options\nconst client = new CacheClient({\n  configuration: Configurations.Laptop.v1(),\n  credentialProvider: CredentialProvider.fromEnvironmentVariable({\n    environmentVariableName: "MOMENTO_API_KEY",\n  }),\n  defaultTtlSeconds: 60 * 60 * 24,\n});\n\n// Create a unique session ID\nconst sessionId = new Date().toISOString();\nconst cacheName = "langchain";\n\nconst memory = new BufferMemory({\n  chatHistory: await MomentoChatMessageHistory.fromProps({\n    client,\n    cacheName,\n    sessionId,\n    sessionTtl: 300,\n  }),\n});\nconsole.log(\n  `cacheName=${cacheName} and sessionId=${sessionId} . This will be used to store the chat history. You can inspect the values at your Momento console at https://console.gomomento.com.`\n);\n\nconst model = new ChatOpenAI({\n  model: "gpt-3.5-turbo",\n  temperature: 0,\n});\n\nconst chain = new ConversationChain({ llm: model, memory });\n\nconst res1 = await chain.invoke({ input: "Hi! I\'m Jim." });\nconsole.log({ res1 });\n/*\n{\n  res1: {\n    text: "Hello Jim! It\'s nice to meet you. My name is AI. How may I assist you today?"\n  }\n}\n*/\n\nconst res2 = await chain.invoke({ input: "What did I just say my name was?" });\nconsole.log({ res2 });\n\n/*\n{\n  res1: {\n    text: "You said your name was Jim."\n  }\n}\n*/\n\n// See the chat history in the Momento\nconsole.log(await memory.chatHistory.getMessages());\n',imports:[{local:"BufferMemory",imported:"BufferMemory",source:"langchain/memory/index"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"ConversationChain",imported:"ConversationChain",source:"langchain/chains"},{local:"MomentoChatMessageHistory",imported:"MomentoChatMessageHistory",source:"@langchain/community/stores/message/momento"}]}}}]);