"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[245],{30896:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=s(74848),i=s(28453);const o={sidebar_label:"Style guide"},a="LangChain Documentation Style Guide",r={id:"contributing/documentation/style_guide",title:"LangChain Documentation Style Guide",description:"Introduction",source:"@site/docs/contributing/documentation/style_guide.mdx",sourceDirName:"contributing/documentation",slug:"/contributing/documentation/style_guide",permalink:"/docs/contributing/documentation/style_guide",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/contributing/documentation/style_guide.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Style guide"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Philosophy",id:"philosophy",level:2},{value:"Taxonomy",id:"taxonomy",level:2},{value:"Getting started",id:"getting-started",level:3},{value:"Use cases",id:"use-cases",level:3},{value:"Expression Language",id:"expression-language",level:3},{value:"Components",id:"components",level:3},{value:"Integrations",id:"integrations",level:3},{value:"Tutorials and Ecosystem",id:"tutorials-and-ecosystem",level:3},{value:"API references",id:"api-references",level:3},{value:"Sample developer journey",id:"sample-developer-journey",level:2},{value:"Guidelines",id:"guidelines",level:2},{value:"Linking to other sections",id:"linking-to-other-sections",level:3},{value:"Conciseness",id:"conciseness",level:3},{value:"General style",id:"general-style",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"langchain-documentation-style-guide",children:"LangChain Documentation Style Guide"}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"As LangChain continues to grow, the surface area of documentation required to cover it continues to grow too.\nThis page provides guidelines for anyone writing documentation for LangChain, as well as some of our philosophies around\norganization and structure."}),"\n",(0,t.jsx)(n.h2,{id:"philosophy",children:"Philosophy"}),"\n",(0,t.jsxs)(n.p,{children:["LangChain's documentation aspires to follow the ",(0,t.jsx)(n.a,{href:"https://diataxis.fr",children:"Diataxis framework"}),".\nUnder this framework, all documentation falls under one of four categories:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tutorials"}),": Lessons that take the reader by the hand through a series of conceptual steps to complete a project.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["An example of this is our ",(0,t.jsx)(n.a,{href:"/docs/how_to/streaming",children:"LCEL streaming guide"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Our guides on ",(0,t.jsx)(n.a,{href:"/docs/how_to/custom_chat",children:"custom components"})," is another one."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"How-to guides"}),": Guides that take the reader through the steps required to solve a real-world problem.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The clearest examples of this are our ",(0,t.jsx)(n.a,{href:"/docs/how_to/#use-cases",children:"Use case"})," pages."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reference"}),": Technical descriptions of the machinery and how to operate it.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Our ",(0,t.jsx)(n.a,{href:"/docs/how_to/#langchain-expression-language-lcel",children:"Runnable"})," pages is an example of this."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.a,{href:"https://v02.api.js.langchain.com/",children:"API reference pages"})," are another."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Explanation"}),": Explanations that clarify and illuminate a particular topic."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each category serves a distinct purpose and requires a specific approach to writing and structuring the content."}),"\n",(0,t.jsx)(n.h2,{id:"taxonomy",children:"Taxonomy"}),"\n",(0,t.jsx)(n.p,{children:"Keeping the above in mind, we have sorted LangChain's docs into categories. It is helpful to think in these terms\nwhen contributing new documentation:"}),"\n",(0,t.jsx)(n.h3,{id:"getting-started",children:"Getting started"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/introduction",children:"getting started section"})," includes a high-level introduction to LangChain, a quickstart that\ntours LangChain's various features, and logistical instructions around installation and project setup."]}),"\n",(0,t.jsxs)(n.p,{children:["It contains elements of ",(0,t.jsx)(n.strong,{children:"How-to guides"})," and ",(0,t.jsx)(n.strong,{children:"Explanations"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"use-cases",children:"Use cases"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/how_to/#use-cases",children:"Use cases"})," are guides that are meant to show how to use LangChain to accomplish a specific task (RAG, information extraction, etc.).\nThe quickstarts should be good entrypoints for first-time LangChain developers who prefer to learn by getting something practical prototyped,\nthen taking the pieces apart retrospectively. These should mirror what LangChain is good at."]}),"\n",(0,t.jsxs)(n.p,{children:["The quickstart pages here should fit the ",(0,t.jsx)(n.strong,{children:"How-to guide"})," category, with the other pages intended to be ",(0,t.jsx)(n.strong,{children:"Explanations"})," of more\nin-depth concepts and strategies that accompany the main happy paths."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"The below sections are listed roughly in order of increasing level of abstraction."})}),"\n",(0,t.jsx)(n.h3,{id:"expression-language",children:"Expression Language"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/how_to/#langchain-expression-language-lcel",children:"LangChain Expression Language (LCEL)"})," is the fundamental way that most LangChain components fit together, and this section is designed to teach\ndevelopers how to use it to build with LangChain's primitives effectively."]}),"\n",(0,t.jsxs)(n.p,{children:["This section should contains ",(0,t.jsx)(n.strong,{children:"Tutorials"})," that teach how to stream and use LCEL primitives for more abstract tasks, ",(0,t.jsx)(n.strong,{children:"Explanations"})," of specific behaviors,\nand some ",(0,t.jsx)(n.strong,{children:"References"})," for how to use different methods in the Runnable interface."]}),"\n",(0,t.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/how_to",children:"how to section"})," covers concepts one level of abstraction higher than LCEL.\nAbstract base classes like ",(0,t.jsx)(n.code,{children:"BaseChatModel"})," and ",(0,t.jsx)(n.code,{children:"BaseRetriever"})," should be covered here, as well as core implementations of these base classes,\nsuch as ",(0,t.jsx)(n.code,{children:"ChatPromptTemplate"})," and ",(0,t.jsx)(n.code,{children:"RecursiveCharacterTextSplitter"}),". Customization guides belong here too."]}),"\n",(0,t.jsxs)(n.p,{children:["This section should contain mostly conceptual ",(0,t.jsx)(n.strong,{children:"Tutorials"}),", ",(0,t.jsx)(n.strong,{children:"References"}),", and ",(0,t.jsx)(n.strong,{children:"Explanations"})," of the components they cover."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["As a general rule of thumb, everything covered in the ",(0,t.jsx)(n.code,{children:"Expression Language"})," and ",(0,t.jsx)(n.code,{children:"Components"})," sections (with the exception of the ",(0,t.jsx)(n.code,{children:"Composition"})," section of components) should\ncover only components that exist in ",(0,t.jsx)(n.code,{children:"@langchain/core"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"integrations",children:"Integrations"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/integrations/platforms/",children:"integrations"})," are specific implementations of components. These often involve third-party APIs and services.\nIf this is the case, as a general rule, these are maintained by the third-party partner."]}),"\n",(0,t.jsxs)(n.p,{children:["This section should contain mostly ",(0,t.jsx)(n.strong,{children:"Explanations"})," and ",(0,t.jsx)(n.strong,{children:"References"}),", though the actual content here is more flexible than other sections and more at the\ndiscretion of the third-party provider."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Concepts covered in ",(0,t.jsx)(n.code,{children:"Integrations"})," should generally exist in ",(0,t.jsx)(n.code,{children:"@langchain/community"})," or specific partner packages."]})}),"\n",(0,t.jsx)(n.h3,{id:"tutorials-and-ecosystem",children:"Tutorials and Ecosystem"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/tutorials",children:"Tutorials"})," and ",(0,t.jsx)(n.a,{href:"https://docs.smith.langchain.com",children:"Ecosystem"})," sections should contain guides that address higher-level problems than the sections above.\nThis includes, but is not limited to, considerations around productionization and development workflows."]}),"\n",(0,t.jsxs)(n.p,{children:["These should contain mostly ",(0,t.jsx)(n.strong,{children:"How-to guides"}),", ",(0,t.jsx)(n.strong,{children:"Explanations"}),", and ",(0,t.jsx)(n.strong,{children:"Tutorials"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"api-references",children:"API references"}),"\n",(0,t.jsxs)(n.p,{children:["LangChain's API references. Should act as ",(0,t.jsx)(n.strong,{children:"References"})," (as the name implies) with some ",(0,t.jsx)(n.strong,{children:"Explanation"}),"-focused content as well."]}),"\n",(0,t.jsx)(n.h2,{id:"sample-developer-journey",children:"Sample developer journey"}),"\n",(0,t.jsx)(n.p,{children:"We have set up our docs to assist a new developer to LangChain. Let's walk through the intended path:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The developer lands on ",(0,t.jsx)(n.a,{href:"https://js.langchain.com",children:"https://js.langchain.com"}),", and reads through the introduction and the diagram."]}),"\n",(0,t.jsxs)(n.li,{children:["If they are just curious, they may be drawn to the ",(0,t.jsx)(n.a,{href:"/docs/tutorials/llm_chain",children:"Quickstart"})," to get a high-level tour of what LangChain contains."]}),"\n",(0,t.jsx)(n.li,{children:"If they have a specific task in mind that they want to accomplish, they will be drawn to the Use-Case section. The use-case should provide a good, concrete hook that shows the value LangChain can provide them and be a good entrypoint to the framework."}),"\n",(0,t.jsx)(n.li,{children:"They can then move to learn more about the fundamentals of LangChain through the Expression Language sections."}),"\n",(0,t.jsx)(n.li,{children:"Next, they can learn about LangChain's various components and integrations."}),"\n",(0,t.jsx)(n.li,{children:"Finally, they can get additional knowledge through the Guides."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is only an ideal of course - sections will inevitably reference lower or higher-level concepts that are documented in other sections."}),"\n",(0,t.jsx)(n.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,t.jsx)(n.p,{children:"Here are some other guidelines you should think about when writing and organizing documentation."}),"\n",(0,t.jsx)(n.h3,{id:"linking-to-other-sections",children:"Linking to other sections"}),"\n",(0,t.jsx)(n.p,{children:"Because sections of the docs do not exist in a vacuum, it is important to link to other sections as often as possible\nto allow a developer to learn more about an unfamiliar topic inline."}),"\n",(0,t.jsx)(n.p,{children:"This includes linking to the API references as well as conceptual sections!"}),"\n",(0,t.jsx)(n.h3,{id:"conciseness",children:"Conciseness"}),"\n",(0,t.jsx)(n.p,{children:"In general, take a less-is-more approach. If a section with a good explanation of a concept already exists, you should link to it rather than\nre-explain it, unless the concept you are documenting presents some new wrinkle."}),"\n",(0,t.jsx)(n.p,{children:"Be concise, including in code samples."}),"\n",(0,t.jsx)(n.h3,{id:"general-style",children:"General style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use active voice and present tense whenever possible."}),"\n",(0,t.jsx)(n.li,{children:"Use examples and code snippets to illustrate concepts and usage."}),"\n",(0,t.jsxs)(n.li,{children:["Use appropriate header levels (",(0,t.jsx)(n.code,{children:"#"}),", ",(0,t.jsx)(n.code,{children:"##"}),", ",(0,t.jsx)(n.code,{children:"###"}),", etc.) to organize the content hierarchically."]}),"\n",(0,t.jsx)(n.li,{children:"Use bullet points and numbered lists to break down information into easily digestible chunks."}),"\n",(0,t.jsxs)(n.li,{children:["Use tables (especially for ",(0,t.jsx)(n.strong,{children:"Reference"})," sections) and diagrams often to present information visually."]}),"\n",(0,t.jsx)(n.li,{children:"Include the table of contents for longer documentation pages to help readers navigate the content, but hide it for shorter pages."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);