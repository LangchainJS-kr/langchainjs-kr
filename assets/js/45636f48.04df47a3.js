(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4019],{78371:(e,s,a)=>{"use strict";a.r(s),a.d(s,{assets:()=>h,contentTitle:()=>p,default:()=>A,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var n=a(74848),o=a(28453),t=a(64428),r=a(94850),i=a.n(r),d=a(8014),c=a.n(d);const l={hide_table_of_contents:!0},p="AssemblyAI Audio Transcript",u={id:"integrations/document_loaders/web_loaders/assemblyai_audio_transcription",title:"AssemblyAI Audio Transcript",description:"This covers how to load audio (and video) transcripts as document objects from a file using the AssemblyAI API.",source:"@site/docs/integrations/document_loaders/web_loaders/assemblyai_audio_transcription.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/assemblyai_audio_transcription",permalink:"/docs/integrations/document_loaders/web_loaders/assemblyai_audio_transcription",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/assemblyai_audio_transcription.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"Apify Dataset",permalink:"/docs/integrations/document_loaders/web_loaders/apify_dataset"},next:{title:"Azure Blob Storage Container",permalink:"/docs/integrations/document_loaders/web_loaders/azure_blob_storage_container"}},h={},m=[{value:"Usage",id:"usage",level:2}];function b(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"assemblyai-audio-transcript",children:"AssemblyAI Audio Transcript"}),"\n",(0,n.jsxs)(s.p,{children:["This covers how to load audio (and video) transcripts as document objects from a file using the ",(0,n.jsx)(s.a,{href:"https://www.assemblyai.com/docs/api-reference/transcript",children:"AssemblyAI API"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(s.p,{children:"First, you'll need to install the official AssemblyAI package:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install assemblyai\n"})}),"\n",(0,n.jsxs)(s.p,{children:["To use the loaders you need an ",(0,n.jsx)(s.a,{href:"https://www.assemblyai.com/dashboard/signup",children:"AssemblyAI account"})," and\n",(0,n.jsx)(s.a,{href:"https://www.assemblyai.com/app/account",children:"get your AssemblyAI API key from the dashboard"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Then, configure the API key as the ",(0,n.jsx)(s.code,{children:"ASSEMBLYAI_API_KEY"})," environment variable or the ",(0,n.jsx)(s.code,{children:"apiKey"})," options parameter."]}),"\n","\n",(0,n.jsx)(t.A,{language:"typescript",children:i()}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"** info **"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["You can use the ",(0,n.jsx)(s.code,{children:"AudioTranscriptParagraphsLoader"})," or ",(0,n.jsx)(s.code,{children:"AudioTranscriptSentencesLoader"})," to split the transcript into paragraphs or sentences."]}),"\n",(0,n.jsxs)(s.li,{children:["The ",(0,n.jsx)(s.code,{children:"audio"})," parameter can be a URL, a local file path, a buffer, or a stream."]}),"\n",(0,n.jsxs)(s.li,{children:["The ",(0,n.jsx)(s.code,{children:"audio"})," can also be a video file. See the ",(0,n.jsx)(s.a,{href:"https://www.assemblyai.com/docs/concepts/faq#:~:text=file%20types%20are%20supported",children:"list of supported file types in the FAQ doc"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["If you don't pass in the ",(0,n.jsx)(s.code,{children:"apiKey"})," option, the loader will use the ",(0,n.jsx)(s.code,{children:"ASSEMBLYAI_API_KEY"})," environment variable."]}),"\n",(0,n.jsxs)(s.li,{children:["You can add more properties in addition to ",(0,n.jsx)(s.code,{children:"audio"}),". Find the full list of request parameters in the ",(0,n.jsx)(s.a,{href:"https://www.assemblyai.com/docs/api-reference/transcript#create-a-transcript",children:"AssemblyAI API docs"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["You can also use the ",(0,n.jsx)(s.code,{children:"AudioSubtitleLoader"})," to get ",(0,n.jsx)(s.code,{children:"srt"})," or ",(0,n.jsx)(s.code,{children:"vtt"})," subtitles as a document."]}),"\n","\n",(0,n.jsx)(t.A,{language:"typescript",children:c()})]})}function A(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(b,{...e})}):b(e)}},94850:e=>{e.exports={content:'import {\n  AudioTranscriptLoader,\n  // AudioTranscriptParagraphsLoader,\n  // AudioTranscriptSentencesLoader\n} from "langchain/document_loaders/web/assemblyai";\n\n// You can also use a local file path and the loader will upload it to AssemblyAI for you.\nconst audioUrl = "https://storage.googleapis.com/aai-docs-samples/espn.m4a";\n\n// Use `AudioTranscriptParagraphsLoader` or `AudioTranscriptSentencesLoader` for splitting the transcript into paragraphs or sentences\nconst loader = new AudioTranscriptLoader(\n  {\n    audio: audioUrl,\n    // any other parameters as documented here: https://www.assemblyai.com/docs/api-reference/transcript#create-a-transcript\n  },\n  {\n    apiKey: "<ASSEMBLYAI_API_KEY>", // or set the `ASSEMBLYAI_API_KEY` env variable\n  }\n);\nconst docs = await loader.load();\nconsole.dir(docs, { depth: Infinity });\n',imports:[{local:"AudioTranscriptLoader",imported:"AudioTranscriptLoader",source:"langchain/document_loaders/web/assemblyai"}]}},8014:e=>{e.exports={content:'import { AudioSubtitleLoader } from "langchain/document_loaders/web/assemblyai";\n\n// You can also use a local file path and the loader will upload it to AssemblyAI for you.\nconst audioUrl = "https://storage.googleapis.com/aai-docs-samples/espn.m4a";\n\nconst loader = new AudioSubtitleLoader(\n  {\n    audio: audioUrl,\n    // any other parameters as documented here: https://www.assemblyai.com/docs/api-reference/transcript#create-a-transcript\n  },\n  "srt", // srt or vtt\n  {\n    apiKey: "<ASSEMBLYAI_API_KEY>", // or set the `ASSEMBLYAI_API_KEY` env variable\n  }\n);\n\nconst docs = await loader.load();\nconsole.dir(docs, { depth: Infinity });\n',imports:[{local:"AudioSubtitleLoader",imported:"AudioSubtitleLoader",source:"langchain/document_loaders/web/assemblyai"}]}}}]);