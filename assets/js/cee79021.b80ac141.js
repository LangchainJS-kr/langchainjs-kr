(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2099],{51275:(e,n,r)=>{"use strict";r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>u,toc:()=>h});var t=r(74848),o=r(28453),a=r(78847),i=r(64428),s=r(53509),l=r.n(s);const c={hide_table_of_contents:!0},d="Cloudflare Vectorize",u={id:"integrations/vectorstores/cloudflare_vectorize",title:"Cloudflare Vectorize",description:"If you're deploying your project in a Cloudflare worker, you can use Cloudflare Vectorize with LangChain.js.",source:"@site/docs/integrations/vectorstores/cloudflare_vectorize.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/cloudflare_vectorize",permalink:"/docs/integrations/vectorstores/cloudflare_vectorize",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/cloudflare_vectorize.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"CloseVector",permalink:"/docs/integrations/vectorstores/closevector"},next:{title:"Convex",permalink:"/docs/integrations/vectorstores/convex"}},p={},h=[{value:"Setup",id:"setup",level:2},...a.toc,{value:"Usage",id:"usage",level:2}];function f(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"cloudflare-vectorize",children:"Cloudflare Vectorize"}),"\n",(0,t.jsxs)(n.p,{children:["If you're deploying your project in a Cloudflare worker, you can use ",(0,t.jsx)(n.a,{href:"https://developers.cloudflare.com/vectorize/",children:"Cloudflare Vectorize"})," with LangChain.js.\nIt's a powerful and convenient option that's built directly into Cloudflare."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsx)(n.admonition,{title:"Compatibility",type:"tip",children:(0,t.jsx)(n.p,{children:"Cloudflare Vectorize is currently in open beta, and requires a Cloudflare account on a paid plan to use."})}),"\n",(0,t.jsxs)(n.p,{children:["After ",(0,t.jsx)(n.a,{href:"https://developers.cloudflare.com/vectorize/get-started/intro/#prerequisites",children:"setting up your project"}),",\ncreate an index by running the following Wrangler command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npx wrangler vectorize create <index_name> --preset @cf/baai/bge-small-en-v1.5\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can see a full list of options for the ",(0,t.jsx)(n.code,{children:"vectorize"})," command ",(0,t.jsx)(n.a,{href:"https://developers.cloudflare.com/workers/wrangler/commands/#vectorize",children:"in the official documentation"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You'll then need to update your ",(0,t.jsx)(n.code,{children:"wrangler.toml"})," file to include an entry for ",(0,t.jsx)(n.code,{children:"[[vectorize]]"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[[vectorize]]\nbinding = "VECTORIZE_INDEX"\nindex_name = "<index_name>"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Finally, you'll need to install the LangChain Cloudflare integration package:"}),"\n","\n",(0,t.jsx)(a.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/cloudflare\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Below is an example worker that adds documents to a vectorstore, queries it, or clears it depending on the path used. It also uses ",(0,t.jsx)(n.a,{href:"/docs/integrations/text_embedding/cloudflare_ai",children:"Cloudflare Workers AI Embeddings"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If running locally, be sure to run wrangler as ",(0,t.jsx)(n.code,{children:"npx wrangler dev --remote"}),"!"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'name = "langchain-test"\nmain = "worker.ts"\ncompatibility_date = "2024-01-10"\n\n[[vectorize]]\nbinding = "VECTORIZE_INDEX"\nindex_name = "langchain-test"\n\n[ai]\nbinding = "AI"\n'})}),"\n","\n",(0,t.jsx)(i.A,{language:"typescript",children:l()}),"\n",(0,t.jsxs)(n.p,{children:["You can also pass a ",(0,t.jsx)(n.code,{children:"filter"})," parameter to filter by previously loaded metadata.\nSee ",(0,t.jsx)(n.a,{href:"https://developers.cloudflare.com/vectorize/learning/metadata-filtering/",children:"the official documentation"}),"\nfor information on the required format."]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},53509:e=>{e.exports={content:'// @ts-nocheck\n\nimport type {\n  VectorizeIndex,\n  Fetcher,\n  Request,\n} from "@cloudflare/workers-types";\n\nimport {\n  CloudflareVectorizeStore,\n  CloudflareWorkersAIEmbeddings,\n} from "@langchain/cloudflare";\n\nexport interface Env {\n  VECTORIZE_INDEX: VectorizeIndex;\n  AI: Fetcher;\n}\n\nexport default {\n  async fetch(request: Request, env: Env) {\n    const { pathname } = new URL(request.url);\n    const embeddings = new CloudflareWorkersAIEmbeddings({\n      binding: env.AI,\n      model: "@cf/baai/bge-small-en-v1.5",\n    });\n    const store = new CloudflareVectorizeStore(embeddings, {\n      index: env.VECTORIZE_INDEX,\n    });\n    if (pathname === "/") {\n      const results = await store.similaritySearch("hello", 5);\n      return Response.json(results);\n    } else if (pathname === "/load") {\n      // Upsertion by id is supported\n      await store.addDocuments(\n        [\n          {\n            pageContent: "hello",\n            metadata: {},\n          },\n          {\n            pageContent: "world",\n            metadata: {},\n          },\n          {\n            pageContent: "hi",\n            metadata: {},\n          },\n        ],\n        { ids: ["id1", "id2", "id3"] }\n      );\n\n      return Response.json({ success: true });\n    } else if (pathname === "/clear") {\n      await store.delete({ ids: ["id1", "id2", "id3"] });\n      return Response.json({ success: true });\n    }\n\n    return Response.json({ error: "Not Found" }, { status: 404 });\n  },\n};\n',imports:[{local:"CloudflareVectorizeStore",imported:"CloudflareVectorizeStore",source:"@langchain/cloudflare"},{local:"CloudflareWorkersAIEmbeddings",imported:"CloudflareWorkersAIEmbeddings",source:"@langchain/cloudflare"}]}}}]);