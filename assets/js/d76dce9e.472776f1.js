"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9166,7817],{57717:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=i(74848),t=i(28453),o=i(2280);const a={},r="HuggingFaceInference",c={id:"integrations/llms/huggingface_inference",title:"HuggingFaceInference",description:"Here's an example of calling a HugggingFaceInference model as an LLM:",source:"@site/docs/integrations/llms/huggingface_inference.mdx",sourceDirName:"integrations/llms",slug:"/integrations/llms/huggingface_inference",permalink:"/docs/integrations/llms/huggingface_inference",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/llms/huggingface_inference.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"Gradient AI",permalink:"/docs/integrations/llms/gradient_ai"},next:{title:"Layerup Security",permalink:"/docs/integrations/llms/layerup_security"}},l={},d=[...o.toc];function g(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"huggingfaceinference",children:"HuggingFaceInference"}),"\n",(0,s.jsx)(n.p,{children:"Here's an example of calling a HugggingFaceInference model as an LLM:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @huggingface/inference@2\n"})}),"\n","\n",(0,s.jsx)(o.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { HuggingFaceInference } from "langchain/llms/hf";\n\nconst model = new HuggingFaceInference({\n  model: "gpt2",\n  apiKey: "YOUR-API-KEY", // In Node.js defaults to process.env.HUGGINGFACEHUB_API_KEY\n});\nconst res = await model.invoke("1 + 1 =");\nconsole.log({ res });\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},2280:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=i(74848),t=i(28453);const o={},a=void 0,r={id:"mdx_components/unified_model_params_tooltip",title:"unified_model_params_tooltip",description:"We're unifying model params across all packages. We now suggest using model instead of modelName, and apiKey for API keys.",source:"@site/docs/mdx_components/unified_model_params_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/unified_model_params_tooltip",permalink:"/docs/mdx_components/unified_model_params_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/unified_model_params_tooltip.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const n={admonition:"admonition",code:"code",p:"p",...(0,t.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["We're unifying model params across all packages. We now suggest using ",(0,s.jsx)(n.code,{children:"model"})," instead of ",(0,s.jsx)(n.code,{children:"modelName"}),", and ",(0,s.jsx)(n.code,{children:"apiKey"})," for API keys."]})})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);