"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6461],{35518:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var i=a(74848),s=a(28453),t=a(78847);const r={sidebar_class_name:"node-only"},o="Cassandra",d={id:"integrations/vectorstores/cassandra",title:"Cassandra",description:"Only available on Node.js.",source:"@site/docs/integrations/vectorstores/cassandra.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/cassandra",permalink:"/docs/integrations/vectorstores/cassandra",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/cassandra.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"node-only"},sidebar:"integrations",previous:{title:"Azure Cosmos DB",permalink:"/docs/integrations/vectorstores/azure_cosmosdb"},next:{title:"Chroma",permalink:"/docs/integrations/vectorstores/chroma"}},c={},l=[{value:"Setup",id:"setup",level:2},...t.toc,{value:"Apache Cassandra\xae",id:"apache-cassandra",level:3},{value:"Astra DB",id:"astra-db",level:3},{value:"Indexing docs",id:"indexing-docs",level:2},{value:"Querying docs",id:"querying-docs",level:2},{value:"Vector Types",id:"vector-types",level:2},{value:"Indices",id:"indices",level:2},{value:"Advanced Filtering",id:"advanced-filtering",level:2},{value:"Data Partitioning and Composite Keys",id:"data-partitioning-and-composite-keys",level:2},{value:"Additional Configuration Options",id:"additional-configuration-options",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"cassandra",children:"Cassandra"}),"\n",(0,i.jsx)(n.admonition,{title:"Compatibility",type:"tip",children:(0,i.jsx)(n.p,{children:"Only available on Node.js."})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://cassandra.apache.org/_/index.html",children:"Apache Cassandra\xae"})," is a NoSQL, row-oriented, highly scalable and highly available database."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/CASSANDRA/CEP-30%3A+Approximate+Nearest+Neighbor(ANN)+Vector+Search+via+Storage-Attached+Indexes",children:"latest version"})," of Apache Cassandra natively supports Vector Similarity Search."]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.p,{children:"First, install the Cassandra Node.js driver:"}),"\n","\n",(0,i.jsx)(t.default,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install cassandra-driver @langchain/community @langchain/openai\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Depending on your database providers, the specifics of how to connect to the database will vary. We will create a document ",(0,i.jsx)(n.code,{children:"configConnection"})," which will be used as part of the vector store configuration."]}),"\n",(0,i.jsx)(n.h3,{id:"apache-cassandra",children:"Apache Cassandra\xae"}),"\n",(0,i.jsxs)(n.p,{children:["Vector search is supported in ",(0,i.jsx)(n.a,{href:"https://cassandra.apache.org/_/Apache-Cassandra-5.0-Moving-Toward-an-AI-Driven-Future.html",children:"Apache Cassandra\xae 5.0"})," and above. You can use a standard connection document, for example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const configConnection = {\n  contactPoints: ['h1', 'h2'],\n  localDataCenter: 'datacenter1',\n  credentials: {\n    username: <...> as string,\n    password: <...> as string,\n  },\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"astra-db",children:"Astra DB"}),"\n",(0,i.jsx)(n.p,{children:"Astra DB is a cloud-native Cassandra-as-a-Service platform."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create an ",(0,i.jsx)(n.a,{href:"https://astra.datastax.com/register",children:"Astra DB account"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a ",(0,i.jsx)(n.a,{href:"https://astra.datastax.com/createDatabase",children:"vector enabled database"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a ",(0,i.jsx)(n.a,{href:"https://docs.datastax.com/en/astra/docs/manage-application-tokens.html",children:"token"})," for your database."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const configConnection = {\n  serviceProviderArgs: {\n    astra: {\n      token: <...> as string,\n      endpoint: <...> as string,\n    },\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Instead of ",(0,i.jsx)(n.code,{children:"endpoint:"}),", you many provide property ",(0,i.jsx)(n.code,{children:"datacenterID:"})," and optionally ",(0,i.jsx)(n.code,{children:"regionName:"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"indexing-docs",children:"Indexing docs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { CassandraStore } from "langchain/vectorstores/cassandra";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\n// The configConnection document is defined above\nconst config = {\n  ...configConnection,\n  keyspace: "test",\n  dimensions: 1536,\n  table: "test",\n  indices: [{ name: "name", value: "(name)" }],\n  primaryKey: {\n    name: "id",\n    type: "int",\n  },\n  metadataColumns: [\n    {\n      name: "name",\n      type: "text",\n    },\n  ],\n};\n\nconst vectorStore = await CassandraStore.fromTexts(\n  ["I am blue", "Green yellow purple", "Hello there hello"],\n  [\n    { id: 2, name: "2" },\n    { id: 1, name: "1" },\n    { id: 3, name: "3" },\n  ],\n  new OpenAIEmbeddings(),\n  cassandraConfig\n);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"querying-docs",children:"Querying docs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const results = await vectorStore.similaritySearch("Green yellow purple", 1);\n'})}),"\n",(0,i.jsx)(n.p,{children:"or filtered query:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const results = await vectorStore.similaritySearch("B", 1, { name: "Bubba" });\n'})}),"\n",(0,i.jsx)(n.h2,{id:"vector-types",children:"Vector Types"}),"\n",(0,i.jsxs)(n.p,{children:["Cassandra supports ",(0,i.jsx)(n.code,{children:"cosine"})," (the default), ",(0,i.jsx)(n.code,{children:"dot_product"}),", and ",(0,i.jsx)(n.code,{children:"euclidean"})," similarity search; this is defined when the\nvector store is first created, and specifed in the constructor parameter ",(0,i.jsx)(n.code,{children:"vectorType"}),", for example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'  ...,\n  vectorType: "dot_product",\n  ...\n'})}),"\n",(0,i.jsx)(n.h2,{id:"indices",children:"Indices"}),"\n",(0,i.jsxs)(n.p,{children:["With Version 5, Cassandra introduced Storage Attached Indexes, or SAIs. These allow ",(0,i.jsx)(n.code,{children:"WHERE"})," filtering without specifying\nthe partition key, and allow for additional operator types such as non-equalities. You can define these with the ",(0,i.jsx)(n.code,{children:"indices"}),"\nparameter, which accepts zero or more dictionaries each containing ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"value"})," entries."]}),"\n",(0,i.jsx)(n.p,{children:"Indices are optional, though required if using filtered queries on non-partition columns."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"name"})," entry is part of the object name; on a table named ",(0,i.jsx)(n.code,{children:"test_table"})," an index with ",(0,i.jsx)(n.code,{children:'name: "some_column"'}),"\nwould be ",(0,i.jsx)(n.code,{children:"idx_test_table_some_column"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"value"})," entry is the column on which the index is created, surrounded by ",(0,i.jsx)(n.code,{children:"("})," and ",(0,i.jsx)(n.code,{children:")"}),". With the above column\n",(0,i.jsx)(n.code,{children:"some_column"})," it would be specified as ",(0,i.jsx)(n.code,{children:'value: "(some_column)"'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["An optional ",(0,i.jsx)(n.code,{children:"options"})," entry is a map passed to the ",(0,i.jsx)(n.code,{children:"WITH OPTIONS ="})," clause of the ",(0,i.jsx)(n.code,{children:"CREATE CUSTOM INDEX"})," statement.\nThe specific entries on this map are index type specific."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'  indices: [{ name: "some_column", value: "(some_column)" }],\n'})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-filtering",children:"Advanced Filtering"}),"\n",(0,i.jsxs)(n.p,{children:["By default, filters are applied with an equality ",(0,i.jsx)(n.code,{children:"="}),". For those fields that have an ",(0,i.jsx)(n.code,{children:"indices"})," entry, you may\nprovide an ",(0,i.jsx)(n.code,{children:"operator"})," with a string of a value supported by the index; in this case, you specify one or\nmore filters, as either a singleton or in a list (which will be ",(0,i.jsx)(n.code,{children:"AND"}),"-ed together). For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'   { name: "create_datetime", operator: ">", value: some_datetime_variable }\n'})}),"\n",(0,i.jsx)(n.p,{children:"or"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'[\n  { userid: userid_variable },\n  { name: "create_datetime", operator: ">", value: some_date_variable },\n];\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"value"})," can be a single value or an array. If it is not an array, or there is only one element in ",(0,i.jsx)(n.code,{children:"value"}),",\nthe resulting query will be along the lines of ",(0,i.jsx)(n.code,{children:"${name} ${operator} ?"})," with ",(0,i.jsx)(n.code,{children:"value"})," bound to the ",(0,i.jsx)(n.code,{children:"?"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If there is more than one element in the ",(0,i.jsx)(n.code,{children:"value"})," array, the number of unquoted ",(0,i.jsx)(n.code,{children:"?"})," in ",(0,i.jsx)(n.code,{children:"name"})," are counted\nand subtracted from the length of ",(0,i.jsx)(n.code,{children:"value"}),", and this number of ",(0,i.jsx)(n.code,{children:"?"})," is put on the right side of the operator;\nif there are more than one ",(0,i.jsx)(n.code,{children:"?"})," then they will be encapsulated in ",(0,i.jsx)(n.code,{children:"("})," and ",(0,i.jsx)(n.code,{children:")"}),", e.g. ",(0,i.jsx)(n.code,{children:"(?, ?, ?)"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This faciliates bind values on the left of the operator, which is useful for some functions; for example\na geo-distance filter:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'{\n  name: "GEO_DISTANCE(coord, ?)",\n  operator: "<",\n  value: [new Float32Array([53.3730617,-6.3000515]), 10000],\n},\n'})}),"\n",(0,i.jsx)(n.h2,{id:"data-partitioning-and-composite-keys",children:"Data Partitioning and Composite Keys"}),"\n",(0,i.jsxs)(n.p,{children:["In some systems, you may wish to partition the data for various reasons, perhaps by user or by session. Data in Cassandra\nis always partitioned; by default this library will partition by the first primary key field. You may specify multiple\ncolumns which comprise the primary (unique) key of a record, and optionally indicate those fields which should be\npart of the partition key. For example, the vector store could be partitioned by both ",(0,i.jsx)(n.code,{children:"userid"})," and ",(0,i.jsx)(n.code,{children:"collectionid"}),", with\nadditional fields ",(0,i.jsx)(n.code,{children:"docid"})," and ",(0,i.jsx)(n.code,{children:"docpart"})," making an individual entry unique:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'  ...,\n  primaryKey: [\n    {name: "userid", type: "text", partition: true},\n    {name: "collectionid", type: "text", partition: true},\n    {name: "docid", type: "text"},\n    {name: "docpart", type: "int"},\n  ],\n  ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When searching, you may include partition keys on the filter without defining ",(0,i.jsx)(n.code,{children:"indices"})," for these columns; you do\nnot need to specify all partition keys, but must specify those in the key first. In the above example, you could\nspecify a filter of ",(0,i.jsx)(n.code,{children:"{userid: userid_variable}"})," and ",(0,i.jsx)(n.code,{children:"{userid: userid_variable, collectionid: collectionid_variable}"}),",\nbut if you wanted to specify a filter of only ",(0,i.jsx)(n.code,{children:"{collectionid: collectionid_variable}"})," you would have to include\n",(0,i.jsx)(n.code,{children:"collectionid"})," on the ",(0,i.jsx)(n.code,{children:"indices"})," list."]}),"\n",(0,i.jsx)(n.h2,{id:"additional-configuration-options",children:"Additional Configuration Options"}),"\n",(0,i.jsx)(n.p,{children:"In the configuration document, further optional parameters are provided; their defaults are:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'  ...,\n  maxConcurrency: 25,\n  batchSize: 1,\n  withClause: "",\n  ...\n'})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Usage"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"maxConcurrency"})}),(0,i.jsx)(n.td,{children:"How many concurrent requests will be sent to Cassandra at a given time."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"batchSize"})}),(0,i.jsxs)(n.td,{children:["How many documents will be sent on a single request to Cassandra. When using a value > 1, you should ensure your batch size will not exceed the Cassandra parameter ",(0,i.jsx)(n.code,{children:"batch_size_fail_threshold_in_kb"}),". Batches are unlogged."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"withClause"})}),(0,i.jsxs)(n.td,{children:["Cassandra tables may be created with an optional ",(0,i.jsx)(n.code,{children:"WITH"})," clause; this is generally not needed but provided for completeness."]})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);