(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[557,65],{88336:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>x,frontMatter:()=>g,metadata:()=>u,toc:()=>m});var s=o(74848),t=o(28453),i=o(64428),a=o(71505),l=o.n(a),c=o(78847),r=o(94812),d=o.n(r);const g={hide_table_of_contents:!0},h="Discord Tool",u={id:"integrations/tools/discord",title:"Discord Tool",description:"The Discord Tool gives your agent the ability to search, read, and write messages to discord channels.",source:"@site/docs/integrations/tools/discord.mdx",sourceDirName:"integrations/tools",slug:"/integrations/tools/discord",permalink:"/docs/integrations/tools/discord",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/tools/discord.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"Dall-E Tool",permalink:"/docs/integrations/tools/dalle"},next:{title:"DuckDuckGoSearch",permalink:"/docs/integrations/tools/duckduckgo_search"}},p={},m=[{value:"Setup",id:"setup",level:2},{value:"Usage, standalone",id:"usage-standalone",level:2},...c.toc,{value:"Usage, in an Agent",id:"usage-in-an-agent",level:2}];function T(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"discord-tool",children:"Discord Tool"}),"\n",(0,s.jsx)(n.p,{children:"The Discord Tool gives your agent the ability to search, read, and write messages to discord channels.\nIt is useful for when you need to interact with a discord channel."}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.p,{children:"To use the Discord Tool you need to install the following official peer depencency:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install discord.js\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage-standalone",children:"Usage, standalone"}),"\n","\n","\n",(0,s.jsx)(c.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai\n"})}),"\n",(0,s.jsx)(i.A,{language:"typescript",children:l()}),"\n",(0,s.jsx)(n.h2,{id:"usage-in-an-agent",children:"Usage, in an Agent"}),"\n","\n",(0,s.jsx)(i.A,{language:"typescript",children:d()})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}},78847:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>r});var s=o(74848),t=o(28453);const i={},a=void 0,l={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},c={},r=[];function d(e){const n={a:"a",admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},94812:e=>{e.exports={content:'import { ChatOpenAI } from "@langchain/openai";\nimport { initializeAgentExecutorWithOptions } from "langchain/agents";\nimport { DiscordSendMessagesTool } from "@langchain/community/tools/discord";\nimport { DadJokeAPI } from "@langchain/community/tools/dadjokeapi";\n\nconst model = new ChatOpenAI({\n  temperature: 0,\n});\n\nconst tools = [new DiscordSendMessagesTool(), new DadJokeAPI()];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: "zero-shot-react-description",\n  verbose: true,\n});\n\nconst res = await executor.invoke({\n  input: `Tell a joke in the discord channel`,\n});\n\nconsole.log(res.output);\n// "What\'s the best thing about elevator jokes? They work on so many levels."\n',imports:[{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"initializeAgentExecutorWithOptions",imported:"initializeAgentExecutorWithOptions",source:"langchain/agents"},{local:"DiscordSendMessagesTool",imported:"DiscordSendMessagesTool",source:"@langchain/community/tools/discord"},{local:"DadJokeAPI",imported:"DadJokeAPI",source:"@langchain/community/tools/dadjokeapi"}]}},71505:e=>{e.exports={content:'import {\n  DiscordGetMessagesTool,\n  DiscordChannelSearchTool,\n  DiscordSendMessagesTool,\n  DiscordGetGuildsTool,\n  DiscordGetTextChannelsTool,\n} from "@langchain/community/tools/discord";\n\n// Get messages from a channel given channel ID\nconst getMessageTool = new DiscordGetMessagesTool();\nconst messageResults = await getMessageTool.invoke("1153400523718938780");\nconsole.log(messageResults);\n\n// Get guilds/servers\nconst getGuildsTool = new DiscordGetGuildsTool();\nconst guildResults = await getGuildsTool.invoke("");\nconsole.log(guildResults);\n\n// Search results in a given channel (case-insensitive)\nconst searchTool = new DiscordChannelSearchTool();\nconst searchResults = await searchTool.invoke("Test");\nconsole.log(searchResults);\n\n// Get all text channels of a server\nconst getChannelsTool = new DiscordGetTextChannelsTool();\nconst channelResults = await getChannelsTool.invoke("1153400523718938775");\nconsole.log(channelResults);\n\n// Send a message\nconst sendMessageTool = new DiscordSendMessagesTool();\nconst sendMessageResults = await sendMessageTool.invoke("test message");\nconsole.log(sendMessageResults);\n',imports:[{local:"DiscordGetMessagesTool",imported:"DiscordGetMessagesTool",source:"@langchain/community/tools/discord"},{local:"DiscordChannelSearchTool",imported:"DiscordChannelSearchTool",source:"@langchain/community/tools/discord"},{local:"DiscordSendMessagesTool",imported:"DiscordSendMessagesTool",source:"@langchain/community/tools/discord"},{local:"DiscordGetGuildsTool",imported:"DiscordGetGuildsTool",source:"@langchain/community/tools/discord"},{local:"DiscordGetTextChannelsTool",imported:"DiscordGetTextChannelsTool",source:"@langchain/community/tools/discord"}]}}}]);