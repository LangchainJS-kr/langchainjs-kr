(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[815],{96879:(e,s,n)=>{"use strict";n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>l,default:()=>f,frontMatter:()=>m,metadata:()=>p,toc:()=>y});var t=n(74848),a=n(28453),o=n(64428),i=n(78847),r=n(42595),c=n.n(r),h=n(69656),d=n.n(h);const m={hide_table_of_contents:!0},l="Upstash Redis-Backed Chat Memory",p={id:"integrations/chat_memory/upstash_redis",title:"Upstash Redis-Backed Chat Memory",description:"Because Upstash Redis works via a REST API, you can use this with Vercel Edge, Cloudflare Workers and other Serverless environments.",source:"@site/docs/integrations/chat_memory/upstash_redis.mdx",sourceDirName:"integrations/chat_memory",slug:"/integrations/chat_memory/upstash_redis",permalink:"/docs/integrations/chat_memory/upstash_redis",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/chat_memory/upstash_redis.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0}},u={},y=[{value:"Setup",id:"setup",level:2},...i.toc,{value:"Usage",id:"usage",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2}];function g(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"upstash-redis-backed-chat-memory",children:"Upstash Redis-Backed Chat Memory"}),"\n",(0,t.jsxs)(s.p,{children:["Because Upstash Redis works via a REST API, you can use this with ",(0,t.jsx)(s.a,{href:"https://vercel.com/docs/concepts/functions/edge-functions/edge-runtime",children:"Vercel Edge"}),", ",(0,t.jsx)(s.a,{href:"https://developers.cloudflare.com/workers/",children:"Cloudflare Workers"})," and other Serverless environments.\nBased on Redis-Backed Chat Memory."]}),"\n",(0,t.jsxs)(s.p,{children:["For longer-term persistence across chat sessions, you can swap out the default in-memory ",(0,t.jsx)(s.code,{children:"chatHistory"})," that backs chat memory classes like ",(0,t.jsx)(s.code,{children:"BufferMemory"})," for an Upstash ",(0,t.jsx)(s.a,{href:"https://redis.io/",children:"Redis"})," instance."]}),"\n",(0,t.jsx)(s.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(s.p,{children:["You will need to install ",(0,t.jsx)(s.a,{href:"https://github.com/upstash/upstash-redis",children:"@upstash/redis"})," in your project:"]}),"\n","\n",(0,t.jsx)(i.default,{}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @upstash/redis @langchain/community\n"})}),"\n",(0,t.jsxs)(s.p,{children:["You will also need an Upstash Account and a Redis database to connect to. See instructions on ",(0,t.jsx)(s.a,{href:"https://docs.upstash.com/redis",children:"Upstash Docs"})," on how to create a HTTP client."]}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:["Each chat history session stored in Redis must have a unique id. You can provide an optional ",(0,t.jsx)(s.code,{children:"sessionTTL"})," to make sessions expire after a give number of seconds.\nThe ",(0,t.jsx)(s.code,{children:"config"})," parameter is passed directly into the ",(0,t.jsx)(s.code,{children:"new Redis()"})," constructor of ",(0,t.jsx)(s.a,{href:"https://docs.upstash.com/redis/sdks/javascriptsdk/overview",children:"@upstash/redis"}),", and takes all the same arguments."]}),"\n","\n",(0,t.jsx)(o.A,{language:"typescript",children:c()}),"\n",(0,t.jsx)(s.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsxs)(s.p,{children:["You can also directly pass in a previously created ",(0,t.jsx)(s.a,{href:"https://docs.upstash.com/redis/sdks/javascriptsdk/overview",children:"@upstash/redis"})," client instance:"]}),"\n","\n",(0,t.jsx)(o.A,{language:"typescript",children:d()})]})}function f(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},42595:e=>{e.exports={content:'import { BufferMemory } from "langchain/memory/index";\nimport { UpstashRedisChatMessageHistory } from "@langchain/community/stores/message/upstash_redis";\nimport { ChatOpenAI } from "@langchain/openai";\nimport { ConversationChain } from "langchain/chains";\n\nconst memory = new BufferMemory({\n  chatHistory: new UpstashRedisChatMessageHistory({\n    sessionId: new Date().toISOString(), // Or some other unique identifier for the conversation\n    sessionTTL: 300, // 5 minutes, omit this parameter to make sessions never expire\n    config: {\n      url: "https://ADD_YOURS_HERE.upstash.io", // Override with your own instance\'s URL\n      token: "********", // Override with your own instance\'s token\n    },\n  }),\n});\n\nconst model = new ChatOpenAI({\n  model: "gpt-3.5-turbo",\n  temperature: 0,\n});\n\nconst chain = new ConversationChain({ llm: model, memory });\n\nconst res1 = await chain.invoke({ input: "Hi! I\'m Jim." });\nconsole.log({ res1 });\n/*\n{\n  res1: {\n    text: "Hello Jim! It\'s nice to meet you. My name is AI. How may I assist you today?"\n  }\n}\n*/\n\nconst res2 = await chain.invoke({ input: "What did I just say my name was?" });\nconsole.log({ res2 });\n\n/*\n{\n  res1: {\n    text: "You said your name was Jim."\n  }\n}\n*/\n',imports:[{local:"BufferMemory",imported:"BufferMemory",source:"langchain/memory/index"},{local:"UpstashRedisChatMessageHistory",imported:"UpstashRedisChatMessageHistory",source:"@langchain/community/stores/message/upstash_redis"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"ConversationChain",imported:"ConversationChain",source:"langchain/chains"}]}},69656:e=>{e.exports={content:'import { Redis } from "@upstash/redis";\nimport { BufferMemory } from "langchain/memory/index";\nimport { UpstashRedisChatMessageHistory } from "@langchain/community/stores/message/upstash_redis";\nimport { ChatOpenAI } from "@langchain/openai";\nimport { ConversationChain } from "langchain/chains";\n\n// Create your own Redis client\nconst client = new Redis({\n  url: "https://ADD_YOURS_HERE.upstash.io",\n  token: "********",\n});\n\nconst memory = new BufferMemory({\n  chatHistory: new UpstashRedisChatMessageHistory({\n    sessionId: new Date().toISOString(),\n    sessionTTL: 300,\n    client, // You can reuse your existing Redis client\n  }),\n});\n\nconst model = new ChatOpenAI({\n  model: "gpt-3.5-turbo",\n  temperature: 0,\n});\n\nconst chain = new ConversationChain({ llm: model, memory });\n\nconst res1 = await chain.invoke({ input: "Hi! I\'m Jim." });\nconsole.log({ res1 });\n/*\n{\n  res1: {\n    text: "Hello Jim! It\'s nice to meet you. My name is AI. How may I assist you today?"\n  }\n}\n*/\n\nconst res2 = await chain.invoke({ input: "What did I just say my name was?" });\nconsole.log({ res2 });\n\n/*\n{\n  res1: {\n    text: "You said your name was Jim."\n  }\n}\n*/\n',imports:[{local:"BufferMemory",imported:"BufferMemory",source:"langchain/memory/index"},{local:"UpstashRedisChatMessageHistory",imported:"UpstashRedisChatMessageHistory",source:"@langchain/community/stores/message/upstash_redis"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"ConversationChain",imported:"ConversationChain",source:"langchain/chains"}]}}}]);