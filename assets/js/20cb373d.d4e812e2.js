(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[113,65],{83045:(n,e,t)=>{"use strict";t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>w,frontMatter:()=>m,metadata:()=>h,toc:()=>g});var a=t(74848),o=t(28453),s=t(78847),i=t(64428),r=t(44903),c=t.n(r),l=t(88316),d=t.n(l);const m={hide_table_of_contents:!0,sidebar_class_name:"node-only"},p="Apify Dataset",h={id:"integrations/document_loaders/web_loaders/apify_dataset",title:"Apify Dataset",description:"This guide shows how to use Apify with LangChain to load documents from an Apify Dataset.",source:"@site/docs/integrations/document_loaders/web_loaders/apify_dataset.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/apify_dataset",permalink:"/docs/integrations/document_loaders/web_loaders/apify_dataset",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/apify_dataset.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0,sidebar_class_name:"node-only"},sidebar:"integrations",previous:{title:"Playwright",permalink:"/docs/integrations/document_loaders/web_loaders/web_playwright"},next:{title:"AssemblyAI Audio Transcript",permalink:"/docs/integrations/document_loaders/web_loaders/assemblyai_audio_transcription"}},u={},g=[{value:"Overview",id:"overview",level:2},{value:"Setup",id:"setup",level:2},...s.toc,{value:"Usage",id:"usage",level:2},{value:"From a New Dataset",id:"from-a-new-dataset",level:3},{value:"From an Existing Dataset",id:"from-an-existing-dataset",level:2}];function f(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"apify-dataset",children:"Apify Dataset"}),"\n",(0,a.jsxs)(e.p,{children:["This guide shows how to use ",(0,a.jsx)(e.a,{href:"https://apify.com",children:"Apify"})," with LangChain to load documents from an Apify Dataset."]}),"\n",(0,a.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.a,{href:"https://apify.com",children:"Apify"})," is a cloud platform for web scraping and data extraction,\nwhich provides an ",(0,a.jsx)(e.a,{href:"https://apify.com/store",children:"ecosystem"})," of more than a thousand\nready-made apps called ",(0,a.jsx)(e.em,{children:"Actors"})," for various web scraping, crawling, and data extraction use cases."]}),"\n",(0,a.jsxs)(e.p,{children:["This guide shows how to load documents\nfrom an ",(0,a.jsx)(e.a,{href:"https://docs.apify.com/platform/storage/dataset",children:"Apify Dataset"})," \u2014 a scalable append-only\nstorage built for storing structured web scraping results,\nsuch as a list of products or Google SERPs, and then export them to various\nformats like JSON, CSV, or Excel."]}),"\n",(0,a.jsxs)(e.p,{children:["Datasets are typically used to save results of Actors.\nFor example, ",(0,a.jsx)(e.a,{href:"https://apify.com/apify/website-content-crawler",children:"Website Content Crawler"})," Actor\ndeeply crawls websites such as documentation, knowledge bases, help centers, or blogs,\nand then stores the text content of webpages into a dataset,\nfrom which you can feed the documents into a vector index and answer questions from it."]}),"\n",(0,a.jsx)(e.h2,{id:"setup",children:"Setup"}),"\n",(0,a.jsx)(e.p,{children:"You'll first need to install the official Apify client:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install apify-client\n"})}),"\n","\n",(0,a.jsx)(s.default,{}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai @langchain/community\n"})}),"\n",(0,a.jsxs)(e.p,{children:["You'll also need to sign up and retrieve your ",(0,a.jsx)(e.a,{href:"https://console.apify.com/account/integrations",children:"Apify API token"}),"."]}),"\n",(0,a.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(e.h3,{id:"from-a-new-dataset",children:"From a New Dataset"}),"\n",(0,a.jsx)(e.p,{children:"If you don't already have an existing dataset on the Apify platform, you'll need to initialize the document loader by calling an Actor and waiting for the results."}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Note:"})," Calling an Actor can take a significant amount of time, on the order of hours, or even days for large sites!"]}),"\n",(0,a.jsx)(e.p,{children:"Here's an example:"}),"\n","\n",(0,a.jsx)(i.A,{language:"typescript",children:c()}),"\n",(0,a.jsx)(e.h2,{id:"from-an-existing-dataset",children:"From an Existing Dataset"}),"\n",(0,a.jsx)(e.p,{children:"If you already have an existing dataset on the Apify platform, you can initialize the document loader with the constructor directly:"}),"\n","\n",(0,a.jsx)(i.A,{language:"typescript",children:d()})]})}function w(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(f,{...n})}):f(n)}},78847:(n,e,t)=>{"use strict";t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var a=t(74848),o=t(28453);const s={},i=void 0,r={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(n){const e={a:"a",admonition:"admonition",p:"p",...(0,o.R)(),...n.components};return(0,a.jsx)(e.admonition,{type:"tip",children:(0,a.jsxs)(e.p,{children:["See ",(0,a.jsx)(e.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function m(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},88316:n=>{n.exports={content:'import { ApifyDatasetLoader } from "langchain/document_loaders/web/apify_dataset";\nimport { HNSWLib } from "@langchain/community/vectorstores/hnswlib";\nimport { OpenAIEmbeddings, ChatOpenAI } from "@langchain/openai";\nimport { Document } from "@langchain/core/documents";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport { createRetrievalChain } from "langchain/chains/retrieval";\nimport { createStuffDocumentsChain } from "langchain/chains/combine_documents";\n\n/*\n * datasetMappingFunction is a function that maps your Apify dataset format to LangChain documents.\n * In the below example, the Apify dataset format looks like this:\n * {\n *   "url": "https://apify.com",\n *   "text": "Apify is the best web scraping and automation platform."\n * }\n */\nconst loader = new ApifyDatasetLoader("your-dataset-id", {\n  datasetMappingFunction: (item) =>\n    new Document({\n      pageContent: (item.text || "") as string,\n      metadata: { source: item.url },\n    }),\n  clientOptions: {\n    token: "your-apify-token", // Or set as process.env.APIFY_API_TOKEN\n  },\n});\n\nconst docs = await loader.load();\n\nconst vectorStore = await HNSWLib.fromDocuments(docs, new OpenAIEmbeddings());\n\nconst model = new ChatOpenAI({\n  temperature: 0,\n});\n\nconst questionAnsweringPrompt = ChatPromptTemplate.fromMessages([\n  [\n    "system",\n    "Answer the user\'s questions based on the below context:\\n\\n{context}",\n  ],\n  ["human", "{input}"],\n]);\n\nconst combineDocsChain = await createStuffDocumentsChain({\n  llm: model,\n  prompt: questionAnsweringPrompt,\n});\n\nconst chain = await createRetrievalChain({\n  retriever: vectorStore.asRetriever(),\n  combineDocsChain,\n});\n\nconst res = await chain.invoke({ input: "What is LangChain?" });\n\nconsole.log(res.answer);\nconsole.log(res.context.map((doc) => doc.metadata.source));\n\n/*\n  LangChain is a framework for developing applications powered by language models.\n  [\n    \'https://js.langchain.com/docs/\',\n    \'https://js.langchain.com/docs/modules/chains/\',\n    \'https://js.langchain.com/docs/modules/chains/llmchain/\',\n    \'https://js.langchain.com/docs/category/functions-4\'\n  ]\n*/\n',imports:[{local:"ApifyDatasetLoader",imported:"ApifyDatasetLoader",source:"langchain/document_loaders/web/apify_dataset"},{local:"HNSWLib",imported:"HNSWLib",source:"@langchain/community/vectorstores/hnswlib"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"Document",imported:"Document",source:"@langchain/core/documents"},{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"},{local:"createRetrievalChain",imported:"createRetrievalChain",source:"langchain/chains/retrieval"},{local:"createStuffDocumentsChain",imported:"createStuffDocumentsChain",source:"langchain/chains/combine_documents"}]}},44903:n=>{n.exports={content:'import { ApifyDatasetLoader } from "langchain/document_loaders/web/apify_dataset";\nimport { HNSWLib } from "@langchain/community/vectorstores/hnswlib";\nimport { OpenAIEmbeddings, ChatOpenAI } from "@langchain/openai";\nimport { Document } from "@langchain/core/documents";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport { createStuffDocumentsChain } from "langchain/chains/combine_documents";\nimport { createRetrievalChain } from "langchain/chains/retrieval";\n\n/*\n * datasetMappingFunction is a function that maps your Apify dataset format to LangChain documents.\n * In the below example, the Apify dataset format looks like this:\n * {\n *   "url": "https://apify.com",\n *   "text": "Apify is the best web scraping and automation platform."\n * }\n */\nconst loader = await ApifyDatasetLoader.fromActorCall(\n  "apify/website-content-crawler",\n  {\n    startUrls: [{ url: "https://js.langchain.com/docs/" }],\n  },\n  {\n    datasetMappingFunction: (item) =>\n      new Document({\n        pageContent: (item.text || "") as string,\n        metadata: { source: item.url },\n      }),\n    clientOptions: {\n      token: "your-apify-token", // Or set as process.env.APIFY_API_TOKEN\n    },\n  }\n);\n\nconst docs = await loader.load();\n\nconst vectorStore = await HNSWLib.fromDocuments(docs, new OpenAIEmbeddings());\n\nconst model = new ChatOpenAI({\n  temperature: 0,\n});\n\nconst questionAnsweringPrompt = ChatPromptTemplate.fromMessages([\n  [\n    "system",\n    "Answer the user\'s questions based on the below context:\\n\\n{context}",\n  ],\n  ["human", "{input}"],\n]);\n\nconst combineDocsChain = await createStuffDocumentsChain({\n  llm: model,\n  prompt: questionAnsweringPrompt,\n});\n\nconst chain = await createRetrievalChain({\n  retriever: vectorStore.asRetriever(),\n  combineDocsChain,\n});\n\nconst res = await chain.invoke({ input: "What is LangChain?" });\n\nconsole.log(res.answer);\nconsole.log(res.context.map((doc) => doc.metadata.source));\n\n/*\n  LangChain is a framework for developing applications powered by language models.\n  [\n    \'https://js.langchain.com/docs/\',\n    \'https://js.langchain.com/docs/modules/chains/\',\n    \'https://js.langchain.com/docs/modules/chains/llmchain/\',\n    \'https://js.langchain.com/docs/category/functions-4\'\n  ]\n*/\n',imports:[{local:"ApifyDatasetLoader",imported:"ApifyDatasetLoader",source:"langchain/document_loaders/web/apify_dataset"},{local:"HNSWLib",imported:"HNSWLib",source:"@langchain/community/vectorstores/hnswlib"},{local:"OpenAIEmbeddings",imported:"OpenAIEmbeddings",source:"@langchain/openai"},{local:"ChatOpenAI",imported:"ChatOpenAI",source:"@langchain/openai"},{local:"Document",imported:"Document",source:"@langchain/core/documents"},{local:"ChatPromptTemplate",imported:"ChatPromptTemplate",source:"@langchain/core/prompts"},{local:"createStuffDocumentsChain",imported:"createStuffDocumentsChain",source:"langchain/chains/combine_documents"},{local:"createRetrievalChain",imported:"createRetrievalChain",source:"langchain/chains/retrieval"}]}}}]);