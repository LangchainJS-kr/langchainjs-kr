(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3833,65],{6157:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>l,default:()=>v,frontMatter:()=>c,metadata:()=>g,toc:()=>p});var t=o(74848),r=o(28453),s=o(78847),i=o(64428),a=o(88139),d=o.n(a);const c={hide_table_of_contents:!0},l="Knowledge Bases for Amazon Bedrock",g={id:"integrations/retrievers/bedrock-knowledge-bases",title:"Knowledge Bases for Amazon Bedrock",description:"Knowledge Bases for Amazon Bedrock is a fully managed support for end-to-end RAG workflow provided by Amazon Web Services (AWS). It provides an entire ingestion workflow of converting your documents into embeddings (vector) and storing the embeddings in a specialized vector database. Knowledge Bases for Amazon Bedrock supports popular databases for vector storage, including vector engine for Amazon OpenSearch Serverless, Pinecone, Redis Enterprise Cloud, Amazon Aurora (coming soon), and MongoDB (coming soon).",source:"@site/docs/integrations/retrievers/bedrock-knowledge-bases.mdx",sourceDirName:"integrations/retrievers",slug:"/integrations/retrievers/bedrock-knowledge-bases",permalink:"/docs/integrations/retrievers/bedrock-knowledge-bases",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/retrievers/bedrock-knowledge-bases.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"Retrievers",permalink:"/docs/integrations/retrievers"},next:{title:"Chaindesk Retriever",permalink:"/docs/integrations/retrievers/chaindesk-retriever"}},m={},p=[{value:"Setup",id:"setup",level:2},...s.toc,{value:"Usage",id:"usage",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"knowledge-bases-for-amazon-bedrock",children:"Knowledge Bases for Amazon Bedrock"}),"\n",(0,t.jsx)(n.p,{children:"Knowledge Bases for Amazon Bedrock is a fully managed support for end-to-end RAG workflow provided by Amazon Web Services (AWS). It provides an entire ingestion workflow of converting your documents into embeddings (vector) and storing the embeddings in a specialized vector database. Knowledge Bases for Amazon Bedrock supports popular databases for vector storage, including vector engine for Amazon OpenSearch Serverless, Pinecone, Redis Enterprise Cloud, Amazon Aurora (coming soon), and MongoDB (coming soon)."}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n","\n",(0,t.jsx)(s.default,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm i @aws-sdk/client-bedrock-agent-runtime @langchain/community\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,t.jsx)(i.A,{language:"typescript",children:d()})]})}function v(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},78847:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=o(74848),r=o(28453);const s={},i=void 0,a={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const n={a:"a",admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},88139:e=>{e.exports={content:'import { AmazonKnowledgeBaseRetriever } from "@langchain/community/retrievers/amazon_knowledge_base";\n\nconst retriever = new AmazonKnowledgeBaseRetriever({\n  topK: 10,\n  knowledgeBaseId: "YOUR_KNOWLEDGE_BASE_ID",\n  region: "us-east-2",\n  clientOptions: {\n    credentials: {\n      accessKeyId: "YOUR_ACCESS_KEY_ID",\n      secretAccessKey: "YOUR_SECRET_ACCESS_KEY",\n    },\n  },\n});\n\nconst docs = await retriever.invoke("How are clouds formed?");\n\nconsole.log(docs);\n',imports:[{local:"AmazonKnowledgeBaseRetriever",imported:"AmazonKnowledgeBaseRetriever",source:"@langchain/community/retrievers/amazon_knowledge_base"}]}}}]);