(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[508],{31858:(e,n,o)=>{"use strict";o.r(n),o.d(n,{assets:()=>y,contentTitle:()=>w,default:()=>_,frontMatter:()=>m,metadata:()=>x,toc:()=>f});var t=o(74848),r=o(28453),a=o(64428),i=o(95873),s=o.n(i),c=o(13561),l=o.n(c),d=o(16393),u=o.n(d),h=o(24539),p=o.n(h),g=o(96676),b=o.n(g);const m={sidebar_class_name:"node-only",hide_table_of_contents:!0},w="GitHub",x={id:"integrations/document_loaders/web_loaders/github",title:"GitHub",description:"This example goes over how to load data from a GitHub repository.",source:"@site/docs/integrations/document_loaders/web_loaders/github.mdx",sourceDirName:"integrations/document_loaders/web_loaders",slug:"/integrations/document_loaders/web_loaders/github",permalink:"/docs/integrations/document_loaders/web_loaders/github",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/document_loaders/web_loaders/github.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"node-only",hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"GitBook",permalink:"/docs/integrations/document_loaders/web_loaders/gitbook"},next:{title:"Hacker News",permalink:"/docs/integrations/document_loaders/web_loaders/hn"}},y={},f=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Using .gitignore Syntax",id:"using-gitignore-syntax",level:3},{value:"Using a Different GitHub Instance",id:"using-a-different-github-instance",level:3},{value:"Dealing with Submodules",id:"dealing-with-submodules",level:3},{value:"Stream large repository",id:"stream-large-repository",level:3}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"github",children:"GitHub"}),"\n",(0,t.jsxs)(n.p,{children:["This example goes over how to load data from a GitHub repository.\nYou can set the ",(0,t.jsx)(n.code,{children:"GITHUB_ACCESS_TOKEN"})," environment variable to a GitHub access token to increase the rate limit and access private repositories."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.p,{children:["The GitHub loader requires the ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/ignore",children:"ignore npm package"})," as a peer dependency. Install it like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install ignore\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:s()}),"\n",(0,t.jsx)(n.p,{children:"The loader will ignore binary files like images."}),"\n",(0,t.jsx)(n.h3,{id:"using-gitignore-syntax",children:"Using .gitignore Syntax"}),"\n",(0,t.jsxs)(n.p,{children:["To ignore specific files, you can pass in an ",(0,t.jsx)(n.code,{children:"ignorePaths"})," array into the constructor:"]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:l()}),"\n",(0,t.jsx)(n.h3,{id:"using-a-different-github-instance",children:"Using a Different GitHub Instance"}),"\n",(0,t.jsxs)(n.p,{children:["You may want to target a different GitHub instance than ",(0,t.jsx)(n.code,{children:"github.com"}),", e.g. if you have a GitHub Enterprise instance for your company.\nFor this you need two additional parameters:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"baseUrl"})," - the base URL of your GitHub instance, so the githubUrl matches ",(0,t.jsx)(n.code,{children:"<baseUrl>/<owner>/<repo>/..."})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"apiUrl"})," - the URL of the API endpoint of your GitHub instance"]}),"\n"]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:u()}),"\n",(0,t.jsx)(n.h3,{id:"dealing-with-submodules",children:"Dealing with Submodules"}),"\n",(0,t.jsxs)(n.p,{children:["In case your repository has submodules, you have to decide if the loader should follow them or not. You can control this with the boolean ",(0,t.jsx)(n.code,{children:"processSubmodules"})," parameter. By default, submodules are not processed.\nNote that processing submodules works only in conjunction with setting the ",(0,t.jsx)(n.code,{children:"recursive"})," parameter to true."]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:p()}),"\n",(0,t.jsx)(n.p,{children:"Note, that the loader will not follow submodules which are located on another GitHub instance than the one of the current repository."}),"\n",(0,t.jsx)(n.h3,{id:"stream-large-repository",children:"Stream large repository"}),"\n",(0,t.jsxs)(n.p,{children:["For situations where processing large repositories in a memory-efficient manner is required. You can use the ",(0,t.jsx)(n.code,{children:"loadAsStream"})," method to asynchronously streams documents from the entire GitHub repository."]}),"\n","\n",(0,t.jsx)(a.A,{language:"typescript",children:b()})]})}function _(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},95873:e=>{e.exports={content:'import { GithubRepoLoader } from "langchain/document_loaders/web/github";\n\nexport const run = async () => {\n  const loader = new GithubRepoLoader(\n    "https://github.com/langchain-ai/langchainjs",\n    {\n      branch: "main",\n      recursive: false,\n      unknown: "warn",\n      maxConcurrency: 5, // Defaults to 2\n    }\n  );\n  const docs = await loader.load();\n  console.log({ docs });\n};\n',imports:[{local:"GithubRepoLoader",imported:"GithubRepoLoader",source:"langchain/document_loaders/web/github"}]}},16393:e=>{e.exports={content:'import { GithubRepoLoader } from "langchain/document_loaders/web/github";\n\nexport const run = async () => {\n  const loader = new GithubRepoLoader(\n    "https://github.your.company/org/repo-name",\n    {\n      baseUrl: "https://github.your.company",\n      apiUrl: "https://github.your.company/api/v3",\n      accessToken: "ghp_A1B2C3D4E5F6a7b8c9d0",\n      branch: "main",\n      recursive: true,\n      unknown: "warn",\n    }\n  );\n  const docs = await loader.load();\n  console.log({ docs });\n};\n',imports:[{local:"GithubRepoLoader",imported:"GithubRepoLoader",source:"langchain/document_loaders/web/github"}]}},13561:e=>{e.exports={content:'import { GithubRepoLoader } from "langchain/document_loaders/web/github";\n\nexport const run = async () => {\n  const loader = new GithubRepoLoader(\n    "https://github.com/langchain-ai/langchainjs",\n    { branch: "main", recursive: false, unknown: "warn", ignorePaths: ["*.md"] }\n  );\n  const docs = await loader.load();\n  console.log({ docs });\n  // Will not include any .md files\n};\n',imports:[{local:"GithubRepoLoader",imported:"GithubRepoLoader",source:"langchain/document_loaders/web/github"}]}},96676:e=>{e.exports={content:'import { GithubRepoLoader } from "langchain/document_loaders/web/github";\n\nexport const run = async () => {\n  const loader = new GithubRepoLoader(\n    "https://github.com/langchain-ai/langchainjs",\n    {\n      branch: "main",\n      recursive: false,\n      unknown: "warn",\n      maxConcurrency: 3, // Defaults to 2\n    }\n  );\n\n  const docs = [];\n  for await (const doc of loader.loadAsStream()) {\n    docs.push(doc);\n  }\n\n  console.log({ docs });\n};\n',imports:[{local:"GithubRepoLoader",imported:"GithubRepoLoader",source:"langchain/document_loaders/web/github"}]}},24539:e=>{e.exports={content:'import { GithubRepoLoader } from "langchain/document_loaders/web/github";\n\nexport const run = async () => {\n  const loader = new GithubRepoLoader(\n    "https://github.com/langchain-ai/langchainjs",\n    {\n      branch: "main",\n      recursive: true,\n      processSubmodules: true,\n      unknown: "warn",\n    }\n  );\n  const docs = await loader.load();\n  console.log({ docs });\n};\n',imports:[{local:"GithubRepoLoader",imported:"GithubRepoLoader",source:"langchain/document_loaders/web/github"}]}}}]);