(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5627],{86670:(o,t,a)=>{"use strict";a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>p,default:()=>f,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var e=a(74848),n=a(28453),l=a(64428),s=a(76589),i=a.n(s);const r={hide_table_of_contents:!0},p="WolframAlpha Tool",c={id:"integrations/tools/wolframalpha",title:"WolframAlpha Tool",description:"The WolframAlpha tool connects your agents and chains to WolframAlpha's state-of-the-art computational intelligence engine.",source:"@site/docs/integrations/tools/wolframalpha.mdx",sourceDirName:"integrations/tools",slug:"/integrations/tools/wolframalpha",permalink:"/docs/integrations/tools/wolframalpha",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/tools/wolframalpha.mdx",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"integrations",previous:{title:"Wikipedia tool",permalink:"/docs/integrations/tools/wikipedia"},next:{title:"Agent with Zapier NLA Integration",permalink:"/docs/integrations/tools/zapier_agent"}},h={},d=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2}];function m(o){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,n.R)(),...o.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"wolframalpha-tool",children:"WolframAlpha Tool"}),"\n",(0,e.jsx)(t.p,{children:"The WolframAlpha tool connects your agents and chains to WolframAlpha's state-of-the-art computational intelligence engine."}),"\n",(0,e.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,e.jsxs)(t.p,{children:["You'll need to create an app from the ",(0,e.jsx)(t.a,{href:"https://developer.wolframalpha.com/",children:"WolframAlpha portal"})," and obtain an ",(0,e.jsx)(t.code,{children:"appid"}),"."]}),"\n",(0,e.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n","\n",(0,e.jsx)(l.A,{language:"typescript",children:i()})]})}function f(o={}){const{wrapper:t}={...(0,n.R)(),...o.components};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(m,{...o})}):m(o)}},76589:o=>{o.exports={content:'import { WolframAlphaTool } from "@langchain/community/tools/wolframalpha";\n\nconst tool = new WolframAlphaTool({\n  appid: "YOUR_APP_ID",\n});\n\nconst res = await tool.invoke("What is 2 * 2?");\n\nconsole.log(res);\n',imports:[{local:"WolframAlphaTool",imported:"WolframAlphaTool",source:"@langchain/community/tools/wolframalpha"}]}}}]);