"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9889],{5120:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=a(74848),t=a(28453);const s={sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},r="How to load JSON data",i={id:"how_to/document_loaders_json",title:"How to load JSON data",description:"JSON (JavaScript Object Notation) is an open standard file format and data interchange format that uses human-readable text to store and transmit data objects consisting of attribute\u2013value pairs and arrays (or other serializable values).",source:"@site/docs/how_to/document_loaders_json.mdx",sourceDirName:"how_to",slug:"/how_to/document_loaders_json",permalink:"/docs/how_to/document_loaders_json",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/document_loaders_json.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},sidebar:"tutorialSidebar"},l={},d=[{value:"No JSON pointer example",id:"no-json-pointer-example",level:3},{value:"Using JSON pointer example",id:"using-json-pointer-example",level:3}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"how-to-load-json-data",children:"How to load JSON data"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/JSON",children:"JSON (JavaScript Object Notation)"})," is an open standard file format and data interchange format that uses human-readable text to store and transmit data objects consisting of attribute\u2013value pairs and arrays (or other serializable values)."]}),"\n"]}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"https://jsonlines.org/",children:"JSON Lines"})," is a file format where each line is a valid JSON value."]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The JSON loader uses ",(0,o.jsx)(e.a,{href:"https://github.com/janl/node-jsonpointer",children:"JSON pointer"})," to target keys in your JSON files you want to target."]}),"\n",(0,o.jsx)(e.h3,{id:"no-json-pointer-example",children:"No JSON pointer example"}),"\n",(0,o.jsx)(e.p,{children:"The most simple way of using it is to specify no JSON pointer.\nThe loader will load all strings it finds in the JSON object."}),"\n",(0,o.jsx)(e.p,{children:"Example JSON file:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n  "texts": ["This is a sentence.", "This is another sentence."]\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:"Example code:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { JSONLoader } from "langchain/document_loaders/fs/json";\n\nconst loader = new JSONLoader("src/document_loaders/example_data/example.json");\n\nconst docs = await loader.load();\n/*\n[\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 1,\n      "source": "blob",\n    },\n    "pageContent": "This is a sentence.",\n  },\n  Document {\n    "metadata": {\n      "blobType": "application/json",\n      "line": 2,\n      "source": "blob",\n    },\n    "pageContent": "This is another sentence.",\n  },\n]\n*/\n'})}),"\n",(0,o.jsx)(e.h3,{id:"using-json-pointer-example",children:"Using JSON pointer example"}),"\n",(0,o.jsx)(e.p,{children:"You can do a more advanced scenario by choosing which keys in your JSON object you want to extract string from."}),"\n",(0,o.jsx)(e.p,{children:'In this example, we want to only extract information from "from" and "surname" entries.'}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n  "1": {\n    "body": "BD 2023 SUMMER",\n    "from": "LinkedIn Job",\n    "labels": ["IMPORTANT", "CATEGORY_UPDATES", "INBOX"]\n  },\n  "2": {\n    "body": "Intern, Treasury and other roles are available",\n    "from": "LinkedIn Job2",\n    "labels": ["IMPORTANT"],\n    "other": {\n      "name": "plop",\n      "surname": "bob"\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:"Example code:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"import { JSONLoader } from \"langchain/document_loaders/fs/json\";\n\nconst loader = new JSONLoader(\n  \"src/document_loaders/example_data/example.json\",\n  [\"/from\", \"/surname\"]\n);\n\nconst docs = await loader.load();\n/*\n[\n  Document {\n    pageContent: 'LinkedIn Job',\n    metadata: { source: './src/json/example.json', line: 1 }\n  },\n  Document {\n    pageContent: 'LinkedIn Job2',\n    metadata: { source: './src/json/example.json', line: 2 }\n  },\n  Document {\n    pageContent: 'bob',\n    metadata: { source: './src/json/example.json', line: 3 }\n  }\n]\n**/\n"})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}}}]);