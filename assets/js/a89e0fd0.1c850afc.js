"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1904],{7059:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(4848),s=r(8453);const o={title:"How to recursively split text by characters",sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},i=void 0,c={id:"how_to/recursive_text_splitter",title:"How to recursively split text by characters",description:"",source:"@site/docs/how_to/recursive_text_splitter.mdx",sourceDirName:"how_to",slug:"/how_to/recursive_text_splitter",permalink:"/docs/how_to/recursive_text_splitter",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/recursive_text_splitter.mdx",tags:[],version:"current",frontMatter:{title:"How to recursively split text by characters",sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},sidebar:"tutorialSidebar"},a={},l=[];function u(t){return(0,n.jsx)(n.Fragment,{})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u()}},8453:(t,e,r)=>{r.d(e,{R:()=>i,x:()=>c});var n=r(6540);const s={},o=n.createContext(s);function i(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);