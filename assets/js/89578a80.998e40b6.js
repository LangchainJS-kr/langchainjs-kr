"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9803,65],{18870:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=t(74848),s=t(28453),o=t(78847);const r={sidebar_class_name:"node-only"},a="Milvus",l={id:"integrations/vectorstores/milvus",title:"Milvus",description:"Milvus is a vector database built for embeddings similarity search and AI applications.",source:"@site/docs/integrations/vectorstores/milvus.mdx",sourceDirName:"integrations/vectorstores",slug:"/integrations/vectorstores/milvus",permalink:"/docs/integrations/vectorstores/milvus",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/vectorstores/milvus.mdx",tags:[],version:"current",frontMatter:{sidebar_class_name:"node-only"},sidebar:"integrations",previous:{title:"LanceDB",permalink:"/docs/integrations/vectorstores/lancedb"},next:{title:"Momento Vector Index (MVI)",permalink:"/docs/integrations/vectorstores/momento_vector_index"}},c={},d=[{value:"Setup",id:"setup",level:2},{value:"Index and query docs",id:"index-and-query-docs",level:2},...o.toc,{value:"Query docs from existing collection",id:"query-docs-from-existing-collection",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"milvus",children:"Milvus"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://milvus.io/",children:"Milvus"})," is a vector database built for embeddings similarity search and AI applications."]}),"\n",(0,i.jsx)(n.admonition,{title:"Compatibility",type:"tip",children:(0,i.jsx)(n.p,{children:"Only available on Node.js."})}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run Milvus instance with Docker on your computer ",(0,i.jsx)(n.a,{href:"https://milvus.io/docs/v2.1.x/install_standalone-docker.md",children:"docs"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install the Milvus Node.js SDK."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install -S @zilliz/milvus2-sdk-node\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Setup Env variables for Milvus before running the code"}),"\n",(0,i.jsx)(n.p,{children:"3.1 OpenAI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE\nexport MILVUS_URL=YOUR_MILVUS_URL_HERE # for example http://localhost:19530\n"})}),"\n",(0,i.jsx)(n.p,{children:"3.2 Azure OpenAI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export AZURE_OPENAI_API_KEY=YOUR_AZURE_OPENAI_API_KEY_HERE\nexport AZURE_OPENAI_API_INSTANCE_NAME=YOUR_AZURE_OPENAI_INSTANCE_NAME_HERE\nexport AZURE_OPENAI_API_DEPLOYMENT_NAME=YOUR_AZURE_OPENAI_DEPLOYMENT_NAME_HERE\nexport AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME=YOUR_AZURE_OPENAI_COMPLETIONS_DEPLOYMENT_NAME_HERE\nexport AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME=YOUR_AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT_NAME_HERE\nexport AZURE_OPENAI_API_VERSION=YOUR_AZURE_OPENAI_API_VERSION_HERE\nexport AZURE_OPENAI_BASE_PATH=YOUR_AZURE_OPENAI_BASE_PATH_HERE\nexport MILVUS_URL=YOUR_MILVUS_URL_HERE # for example http://localhost:19530\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"index-and-query-docs",children:"Index and query docs"}),"\n","\n",(0,i.jsx)(o.default,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Milvus } from "langchain/vectorstores/milvus";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\n// text sample from Godel, Escher, Bach\nconst vectorStore = await Milvus.fromTexts(\n  [\n    "Tortoise: Labyrinth? Labyrinth? Could it Are we in the notorious Little\\\n            Harmonic Labyrinth of the dreaded Majotaur?",\n    "Achilles: Yiikes! What is that?",\n    "Tortoise: They say-although I person never believed it myself-that an I\\\n            Majotaur has created a tiny labyrinth sits in a pit in the middle of\\\n            it, waiting innocent victims to get lost in its fears complexity.\\\n            Then, when they wander and dazed into the center, he laughs and\\\n            laughs at them-so hard, that he laughs them to death!",\n    "Achilles: Oh, no!",\n    "Tortoise: But it\'s only a myth. Courage, Achilles.",\n  ],\n  [{ id: 2 }, { id: 1 }, { id: 3 }, { id: 4 }, { id: 5 }],\n  new OpenAIEmbeddings(),\n  {\n    collectionName: "goldel_escher_bach",\n  }\n);\n\n// or alternatively from docs\nconst vectorStore = await Milvus.fromDocuments(docs, new OpenAIEmbeddings(), {\n  collectionName: "goldel_escher_bach",\n});\n\nconst response = await vectorStore.similaritySearch("scared", 2);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"query-docs-from-existing-collection",children:"Query docs from existing collection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Milvus } from "langchain/vectorstores/milvus";\nimport { OpenAIEmbeddings } from "@langchain/openai";\n\nconst vectorStore = await Milvus.fromExistingCollection(\n  new OpenAIEmbeddings(),\n  {\n    collectionName: "goldel_escher_bach",\n  }\n);\n\nconst response = await vectorStore.similaritySearch("scared", 2);\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},78847:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(74848),s=t(28453);const o={},r=void 0,a={id:"mdx_components/integration_install_tooltip",title:"integration_install_tooltip",description:"See this section for general instructions on installing integration packages.",source:"@site/docs/mdx_components/integration_install_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/integration_install_tooltip",permalink:"/docs/mdx_components/integration_install_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/integration_install_tooltip.mdx",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/docs/how_to/installation#installing-integration-packages",children:"this section for general instructions on installing integration packages"}),"."]})})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);