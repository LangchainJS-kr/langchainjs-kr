(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9959,7817],{69406:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>_,contentTitle:()=>f,default:()=>O,frontMatter:()=>x,metadata:()=>j,toc:()=>y});var r=a(74848),o=a(28453),s=a(64428),i=a(78847),t=a(95816),d=a.n(t),c=a(2280),l=a(59173),p=a.n(l),u=a(74576),h=a.n(u),m=a(98450),A=a.n(m),g=a(68205),I=a.n(g);const x={},f="Azure OpenAI",j={id:"integrations/llms/azure",title:"Azure OpenAI",description:"Azure OpenAI is a cloud service to help you quickly develop generative AI experiences with a diverse set of prebuilt and curated models from OpenAI, Meta and beyond.",source:"@site/docs/integrations/llms/azure.mdx",sourceDirName:"integrations/llms",slug:"/integrations/llms/azure",permalink:"/docs/integrations/llms/azure",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/llms/azure.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"AWS SageMakerEndpoint",permalink:"/docs/integrations/llms/aws_sagemaker"},next:{title:"Bedrock",permalink:"/docs/integrations/llms/bedrock"}},_={},y=[{value:"Setup",id:"setup",level:2},...i.toc,...c.toc,{value:"Using Azure Managed Identity",id:"using-azure-managed-identity",level:3},{value:"Using a different domain",id:"using-a-different-domain",level:3},{value:"LLM usage example",id:"llm-usage-example",level:3},{value:"Chat usage example",id:"chat-usage-example",level:3},{value:"Migration from Azure OpenAI SDK",id:"migration-from-azure-openai-sdk",level:2}];function z(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"azure-openai",children:"Azure OpenAI"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://azure.microsoft.com/products/ai-services/openai-service/",children:"Azure OpenAI"})," is a cloud service to help you quickly develop generative AI experiences with a diverse set of prebuilt and curated models from OpenAI, Meta and beyond."]}),"\n",(0,r.jsxs)(n.p,{children:["LangChain.js supports integration with ",(0,r.jsx)(n.a,{href:"https://azure.microsoft.com/products/ai-services/openai-service/",children:"Azure OpenAI"})," using the new Azure integration in the ",(0,r.jsx)(n.a,{href:"https://github.com/openai/openai-node",children:"OpenAI SDK"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You can learn more about Azure OpenAI and its difference with the OpenAI API on ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/overview",children:"this page"}),". If you don't have an Azure account, you can ",(0,r.jsx)(n.a,{href:"https://azure.microsoft.com/free/",children:"create a free account"})," to get started."]}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["Previously, LangChain.js supported integration with Azure OpenAI using the dedicated ",(0,r.jsx)(n.a,{href:"https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/openai/openai",children:"Azure OpenAI SDK"}),". This SDK is now deprecated in favor of the new Azure integration in the OpenAI SDK, which allows to access the latest OpenAI models and features the same day they are released, and allows seemless transition between the OpenAI API and Azure OpenAI."]}),(0,r.jsxs)(n.p,{children:["If you are using Azure OpenAI with the deprecated SDK, see the ",(0,r.jsx)(n.a,{href:"#migration-from-azure-openai-sdk",children:"migration guide"})," to update to the new API."]})]}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsxs)(n.p,{children:["You'll first need to install the ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@langchain/openai",children:(0,r.jsx)(n.code,{children:"@langchain/openai"})})," package:"]}),"\n","\n",(0,r.jsx)(i.default,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install -S @langchain/openai\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You'll also need to have an Azure OpenAI instance deployed. You can deploy a version on Azure Portal following ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/how-to/create-resource?pivots=web-portal",children:"this guide"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'Once you have your instance running, make sure you have the name of your instance and key. You can find the key in the Azure Portal, under the "Keys and Endpoint" section of your instance.'}),"\n",(0,r.jsx)(n.p,{children:"If you're using Node.js, you can define the following environment variables to use the service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'AZURE_OPENAI_API_INSTANCE_NAME=<YOUR_INSTANCE_NAME>\nAZURE_OPENAI_API_DEPLOYMENT_NAME=<YOUR_DEPLOYMENT_NAME>\nAZURE_OPENAI_API_KEY=<YOUR_KEY>\nAZURE_OPENAI_API_VERSION="2024-02-01"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, you can pass the values directly to the ",(0,r.jsx)(n.code,{children:"AzureOpenAI"})," constructor:"]}),"\n","\n","\n",(0,r.jsx)(c.default,{}),"\n",(0,r.jsx)(s.A,{language:"typescript",children:d()}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["You can find the list of supported API versions in the ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/reference",children:"Azure OpenAI documentation"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"using-azure-managed-identity",children:"Using Azure Managed Identity"}),"\n",(0,r.jsx)(n.p,{children:"If you're using Azure Managed Identity, you can configure the credentials like this:"}),"\n","\n",(0,r.jsx)(s.A,{language:"typescript",children:p()}),"\n",(0,r.jsx)(n.h3,{id:"using-a-different-domain",children:"Using a different domain"}),"\n",(0,r.jsxs)(n.p,{children:["If your instance is hosted under a domain other than the default ",(0,r.jsx)(n.code,{children:"openai.azure.com"}),", you'll need to use the alternate ",(0,r.jsx)(n.code,{children:"AZURE_OPENAI_BASE_PATH"})," environment variable.\nFor example, here's how you would connect to the domain ",(0,r.jsx)(n.code,{children:"https://westeurope.api.microsoft.com/openai/deployments/{DEPLOYMENT_NAME}"}),":"]}),"\n","\n",(0,r.jsx)(s.A,{language:"typescript",children:h()}),"\n",(0,r.jsx)(n.h3,{id:"llm-usage-example",children:"LLM usage example"}),"\n","\n",(0,r.jsx)(s.A,{language:"typescript",children:A()}),"\n",(0,r.jsx)(n.h3,{id:"chat-usage-example",children:"Chat usage example"}),"\n","\n",(0,r.jsx)(s.A,{language:"typescript",children:I()}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-azure-openai-sdk",children:"Migration from Azure OpenAI SDK"}),"\n",(0,r.jsxs)(n.p,{children:["If you are using the deprecated Azure OpenAI SDK with the ",(0,r.jsx)(n.code,{children:"@langchain/azure-openai"})," package, you can update your code to use the new Azure integration following these steps:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Install the new ",(0,r.jsx)(n.code,{children:"@langchain/openai"})," package and remove the previous ",(0,r.jsx)(n.code,{children:"@langchain/azure-openai"})," package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/openai\nnpm uninstall @langchain/azure-openai\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Update your imports to use the new ",(0,r.jsx)(n.code,{children:"AzureOpenAI"})," and ",(0,r.jsx)(n.code,{children:"AzureChatOpenAI"})," classes from the ",(0,r.jsx)(n.code,{children:"@langchain/openai"})," package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { AzureOpenAI } from "@langchain/openai";\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Update your code to use the new ",(0,r.jsx)(n.code,{children:"AzureOpenAI"})," and ",(0,r.jsx)(n.code,{children:"AzureChatOpenAI"})," classes and pass the required parameters:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const model = new AzureOpenAI({\n  azureOpenAIApiKey: "<your_key>",\n  azureOpenAIApiInstanceName: "<your_instance_name>",\n  azureOpenAIApiDeploymentName: "<your_deployment_name>",\n  azureOpenAIApiVersion: "<api_version>",\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Notice that the constructor now requires the ",(0,r.jsx)(n.code,{children:"azureOpenAIApiInstanceName"})," parameter instead of the ",(0,r.jsx)(n.code,{children:"azureOpenAIEndpoint"})," parameter, and adds the ",(0,r.jsx)(n.code,{children:"azureOpenAIApiVersion"})," parameter to specify the API version."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If you were using Azure Managed Identity, you now need to use the ",(0,r.jsx)(n.code,{children:"azureADTokenProvider"})," parameter to the constructor instead of ",(0,r.jsx)(n.code,{children:"credentials"}),", see the ",(0,r.jsx)(n.a,{href:"#using-azure-managed-identity",children:"Azure Managed Identity"})," section for more details."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If you were using environment variables, you now have to set the ",(0,r.jsx)(n.code,{children:"AZURE_OPENAI_API_INSTANCE_NAME"})," environment variable instead of ",(0,r.jsx)(n.code,{children:"AZURE_OPENAI_API_ENDPOINT"}),", and add the ",(0,r.jsx)(n.code,{children:"AZURE_OPENAI_API_VERSION"})," environment variable to specify the API version."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function O(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(z,{...e})}):z(e)}},2280:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});var r=a(74848),o=a(28453);const s={},i=void 0,t={id:"mdx_components/unified_model_params_tooltip",title:"unified_model_params_tooltip",description:"We're unifying model params across all packages. We now suggest using model instead of modelName, and apiKey for API keys.",source:"@site/docs/mdx_components/unified_model_params_tooltip.mdx",sourceDirName:"mdx_components",slug:"/mdx_components/unified_model_params_tooltip",permalink:"/docs/mdx_components/unified_model_params_tooltip",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/mdx_components/unified_model_params_tooltip.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const n={admonition:"admonition",code:"code",p:"p",...(0,o.R)(),...e.components};return(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["We're unifying model params across all packages. We now suggest using ",(0,r.jsx)(n.code,{children:"model"})," instead of ",(0,r.jsx)(n.code,{children:"modelName"}),", and ",(0,r.jsx)(n.code,{children:"apiKey"})," for API keys."]})})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},68205:e=>{e.exports={content:'import { AzureChatOpenAI } from "@langchain/openai";\n\nexport const run = async () => {\n  const model = new AzureChatOpenAI({\n    prefixMessages: [\n      {\n        role: "system",\n        content: "You are a helpful assistant that answers in pirate language",\n      },\n    ],\n    maxTokens: 50,\n  });\n  const res = await model.invoke(\n    "What would be a good company name for a company that makes colorful socks?"\n  );\n  console.log({ res });\n};\n',imports:[{local:"AzureChatOpenAI",imported:"AzureChatOpenAI",source:"@langchain/openai"}]}},98450:e=>{e.exports={content:'import { AzureOpenAI } from "@langchain/openai";\n\nexport const run = async () => {\n  const model = new AzureOpenAI({\n    temperature: 0.7,\n    maxTokens: 1000,\n    maxRetries: 5,\n  });\n  const res = await model.invoke(\n    "Question: What would be a good company name for a company that makes colorful socks?\\nAnswer:"\n  );\n  console.log({ res });\n};\n',imports:[{local:"AzureOpenAI",imported:"AzureOpenAI",source:"@langchain/openai"}]}},74576:e=>{e.exports={content:'import { AzureOpenAI } from "@langchain/openai";\n\nconst model = new AzureOpenAI({\n  azureOpenAIApiKey: "<your_key>", // In Node.js defaults to process.env.AZURE_OPENAI_API_KEY\n  azureOpenAIApiDeploymentName: "<your_deployment_name>", // In Node.js defaults to process.env.AZURE_OPENAI_API_DEPLOYMENT_NAME\n  azureOpenAIApiVersion: "<api_version>", // In Node.js defaults to process.env.AZURE_OPENAI_API_VERSION\n  azureOpenAIBasePath:\n    "https://westeurope.api.microsoft.com/openai/deployments", // In Node.js defaults to process.env.AZURE_OPENAI_BASE_PATH\n});\n',imports:[{local:"AzureOpenAI",imported:"AzureOpenAI",source:"@langchain/openai"}]}},59173:e=>{e.exports={content:'import {\n  DefaultAzureCredential,\n  getBearerTokenProvider,\n} from "@azure/identity";\nimport { AzureOpenAI } from "@langchain/openai";\n\nconst credentials = new DefaultAzureCredential();\nconst azureADTokenProvider = getBearerTokenProvider(\n  credentials,\n  "https://cognitiveservices.azure.com/.default"\n);\n\nconst model = new AzureOpenAI({\n  azureADTokenProvider,\n  azureOpenAIApiInstanceName: "<your_instance_name>",\n  azureOpenAIApiDeploymentName: "<your_deployment_name>",\n  azureOpenAIApiVersion: "<api_version>",\n});\n',imports:[{local:"AzureOpenAI",imported:"AzureOpenAI",source:"@langchain/openai"}]}},95816:e=>{e.exports={content:'import { AzureOpenAI } from "@langchain/openai";\n\nconst model = new AzureOpenAI({\n  azureOpenAIApiKey: "<your_key>", // In Node.js defaults to process.env.AZURE_OPENAI_API_KEY\n  azureOpenAIApiInstanceName: "<your_instance_name>", // In Node.js defaults to process.env.AZURE_OPENAI_API_INSTANCE_NAME\n  azureOpenAIApiDeploymentName: "<your_deployment_name>", // In Node.js defaults to process.env.AZURE_OPENAI_API_DEPLOYMENT_NAME\n  azureOpenAIApiVersion: "<api_version>", // In Node.js defaults to process.env.AZURE_OPENAI_API_VERSION\n});\n',imports:[{local:"AzureOpenAI",imported:"AzureOpenAI",source:"@langchain/openai"}]}}}]);