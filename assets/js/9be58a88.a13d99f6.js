(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1017],{64554:(e,n,a)=>{"use strict";a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>h,default:()=>A,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=a(74848),l=a(28453),t=a(78847),i=a(64428),o=a(73039),p=a.n(o);const r={},h="AlephAlpha",c={id:"integrations/llms/aleph_alpha",title:"AlephAlpha",description:"LangChain.js supports AlephAlpha's Luminous family of models. You'll need to sign up for an API key on their website.",source:"@site/docs/integrations/llms/aleph_alpha.mdx",sourceDirName:"integrations/llms",slug:"/integrations/llms/aleph_alpha",permalink:"/docs/integrations/llms/aleph_alpha",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/integrations/llms/aleph_alpha.mdx",tags:[],version:"current",frontMatter:{},sidebar:"integrations",previous:{title:"AI21",permalink:"/docs/integrations/llms/ai21"},next:{title:"AWS SageMakerEndpoint",permalink:"/docs/integrations/llms/aws_sagemaker"}},m={},d=[...t.toc];function u(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"alephalpha",children:"AlephAlpha"}),"\n",(0,s.jsxs)(n.p,{children:["LangChain.js supports AlephAlpha's Luminous family of models. You'll need to sign up for an API key ",(0,s.jsx)(n.a,{href:"https://www.aleph-alpha.com/",children:"on their website"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here's an example:"}),"\n","\n",(0,s.jsx)(t.default,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @langchain/community\n"})}),"\n","\n",(0,s.jsx)(i.A,{language:"typescript",children:p()})]})}function A(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},73039:e=>{e.exports={content:'import { AlephAlpha } from "@langchain/community/llms/aleph_alpha";\n\nconst model = new AlephAlpha({\n  aleph_alpha_api_key: "YOUR_ALEPH_ALPHA_API_KEY", // Or set as process.env.ALEPH_ALPHA_API_KEY\n});\n\nconst res = await model.invoke(`Is cereal soup?`);\n\nconsole.log({ res });\n\n/*\n  {\n    res: "\\nIs soup a cereal? I don\u2019t think so, but it is delicious."\n  }\n */\n',imports:[{local:"AlephAlpha",imported:"AlephAlpha",source:"@langchain/community/llms/aleph_alpha"}]}}}]);