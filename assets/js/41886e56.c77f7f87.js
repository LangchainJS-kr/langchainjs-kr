"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[907],{88017:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>h});var a=t(74848),r=t(28453),s=t(78847),o=t(27846);const l={sidebar_class_name:"hidden",sidebar_position:5,keywords:["RunnablePassthrough","LCEL"],title:"How to pass through arguments from one step to the next"},i=void 0,u={id:"how_to/passthrough",title:"How to pass through arguments from one step to the next",description:"This guide assumes familiarity with the following concepts:",source:"@site/docs/how_to/passthrough.mdx",sourceDirName:"how_to",slug:"/how_to/passthrough",permalink:"/docs/how_to/passthrough",draft:!1,unlisted:!1,editUrl:"https://langchainjs-kr.site/docs/how_to/passthrough.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_class_name:"hidden",sidebar_position:5,keywords:["RunnablePassthrough","LCEL"],title:"How to pass through arguments from one step to the next"},sidebar:"tutorialSidebar",previous:{title:"How to track token usage",permalink:"/docs/how_to/llm_token_usage_tracking"},next:{title:"How to compose prompts together",permalink:"/docs/how_to/prompts_composition"}},c={},h=[{value:"Retrieval Example",id:"retrieval-example",level:2},...s.toc,{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.admonition,{title:"Prerequisites",type:"info",children:[(0,a.jsx)(n.p,{children:"This guide assumes familiarity with the following concepts:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/concepts/#langchain-expression-language",children:"LangChain Expression Language\n(LCEL)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/sequence/",children:"Chaining runnables"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/parallel/",children:"Calling runnables in parallel"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/how_to/functions/",children:"Custom functions"})}),"\n"]})]}),"\n",(0,a.jsxs)(n.p,{children:["When composing chains with several steps, sometimes you will want to\npass data from previous steps unchanged for use as input to a later\nstep. The\n",(0,a.jsx)(n.a,{href:"https://v02.api.js.langchain.com/classes/langchain_core_runnables.RunnablePassthrough.html",children:(0,a.jsx)(n.code,{children:"RunnablePassthrough"})}),"\nclass allows you to do just this, and is typically is used in conjuction\nwith a ",(0,a.jsx)(n.a,{href:"../../docs/how_to/parallel/",children:"RunnableParallel"})," to pass data\nthrough to a later step in your constructed chains."]}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s look at an example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import {\n  RunnableParallel,\n  RunnablePassthrough,\n} from "@langchain/core/runnables";\n\nconst runnable = RunnableParallel.from({\n  passed: new RunnablePassthrough(),\n  modified: (input) => input.num + 1,\n});\n\nawait runnable.invoke({ num: 1 });\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"{ passed: { num: 1 }, modified: 2 }\n"})}),"\n",(0,a.jsxs)(n.p,{children:["As seen above, ",(0,a.jsx)(n.code,{children:"passed"})," key was called with ",(0,a.jsx)(n.code,{children:"RunnablePassthrough()"})," and\nso it simply passed on ",(0,a.jsx)(n.code,{children:"{'num': 1}"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["We also set a second key in the map with ",(0,a.jsx)(n.code,{children:"modified"}),". This uses a lambda\nto set a single value adding 1 to the num, which resulted in ",(0,a.jsx)(n.code,{children:"modified"}),"\nkey with the value of ",(0,a.jsx)(n.code,{children:"2"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"retrieval-example",children:"Retrieval Example"}),"\n",(0,a.jsxs)(n.p,{children:["In the example below, we see a more real-world use case where we use\n",(0,a.jsx)(n.code,{children:"RunnablePassthrough"})," along with ",(0,a.jsx)(n.code,{children:"RunnableParallel"})," in a chain to\nproperly format inputs to a prompt:"]}),"\n","\n",(0,a.jsx)(s.default,{}),"\n",(0,a.jsx)(o.A,{children:(0,a.jsx)(n.p,{children:"@langchain/openai"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { StringOutputParser } from "@langchain/core/output_parsers";\nimport { ChatPromptTemplate } from "@langchain/core/prompts";\nimport {\n  RunnablePassthrough,\n  RunnableSequence,\n} from "@langchain/core/runnables";\nimport { ChatOpenAI, OpenAIEmbeddings } from "@langchain/openai";\nimport { MemoryVectorStore } from "langchain/vectorstores/memory";\n\nconst vectorstore = await MemoryVectorStore.fromDocuments(\n  [{ pageContent: "harrison worked at kensho", metadata: {} }],\n  new OpenAIEmbeddings()\n);\n\nconst retriever = vectorstore.asRetriever();\n\nconst template = `Answer the question based only on the following context:\n{context}\n\nQuestion: {question}\n`;\n\nconst prompt = ChatPromptTemplate.fromTemplate(template);\n\nconst model = new ChatOpenAI({ model: "gpt-4o" });\n\nconst retrievalChain = RunnableSequence.from([\n  {\n    context: retriever.pipe((docs) => docs[0].pageContent),\n    question: new RunnablePassthrough(),\n  },\n  prompt,\n  model,\n  new StringOutputParser(),\n]);\n\nawait retrievalChain.invoke("where did harrison work?");\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'"Harrison worked at Kensho."\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Here the input to prompt is expected to be a map with keys ",(0,a.jsx)(n.code,{children:'"context"'}),"\nand ",(0,a.jsx)(n.code,{children:'"question"'}),". The user input is just the question. So we need to get\nthe context using our retriever and passthrough the user input under the\n",(0,a.jsx)(n.code,{children:'"question"'})," key. The ",(0,a.jsx)(n.code,{children:"RunnablePassthrough"})," allows us to pass on the\nuser\u2019s question to the prompt and model."]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsx)(n.p,{children:"Now you\u2019ve learned how to pass data through your chains to help to help\nformat the data flowing through your chains."}),"\n",(0,a.jsx)(n.p,{children:"To learn more, see the other how-to guides on runnables in this section."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>y});var a=t(96540),r=t(34164),s=t(23104),o=t(56347),l=t(205),i=t(57485),u=t(31682),c=t(89466);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=d(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[u,h]=m({queryString:t,groupId:r}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,c.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),f=(()=>{const e=u??g;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),h(e),b(e)}),[h,b,s]),tabValues:s}}var b=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function w(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),r=l[t].value;r!==a&&(u(n),o(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>i.push(e),onKeyDown:h,onClick:c,...s,className:(0,r.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,x.jsx)(w,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function y(e){const n=(0,b.A)();return(0,x.jsx)(j,{...e,children:h(e.children)},String(n))}},27846:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var a=t(11470),r=t(19365),s=t(21432),o=t(74848);function l(e){let{children:n}=e;return(0,o.jsxs)(a.A,{groupId:"npm2yarn",children:[(0,o.jsx)(r.A,{value:"npm",label:"npm",children:(0,o.jsxs)(s.A,{language:"bash",children:["npm i ",n]})}),(0,o.jsx)(r.A,{value:"yarn",label:"yarn",default:!0,children:(0,o.jsxs)(s.A,{language:"bash",children:["yarn add ",n]})}),(0,o.jsx)(r.A,{value:"pnpm",label:"pnpm",children:(0,o.jsxs)(s.A,{language:"bash",children:["pnpm add ",n]})})]})}}}]);